{"version":3,"file":"admin.build.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../node_modules/tslib/tslib.es6.mjs","../../node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/List.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/States.js","../../node_modules/@amcharts/amcharts5/.internal/core/Registry.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","../../node_modules/@amcharts/amcharts5/locales/en.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","../../node_modules/@amcharts/amcharts5/.internal/core/Theme.js","../../node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","../../node_modules/svg-arc-to-cubic-bezier/modules/index.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","../../node_modules/@amcharts/amcharts5/.internal/core/Root.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js","../../node_modules/d3-shape/src/constant.js","../../node_modules/d3-shape/src/math.js","../../node_modules/d3-path/src/path.js","../../node_modules/d3-shape/src/path.js","../../node_modules/d3-shape/src/arc.js","../../node_modules/d3-shape/src/array.js","../../node_modules/d3-shape/src/curve/linear.js","../../node_modules/d3-shape/src/point.js","../../node_modules/d3-shape/src/line.js","../../node_modules/d3-shape/src/area.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/CategoryAxis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/LineSeries.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/MonotoneXTension.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/SmoothedXLineSeries.js","../../node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentDefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentSeries.js","../../node_modules/@amcharts/amcharts5/.internal/charts/pie/PieChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/pie/PieSeries.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @remix-run/router v1.23.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || routerFuture.v7_relativeSplatPath === undefined)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nexport function assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\" && value.match(/[0-9]+/)) {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\nexport function getEventKey(event) {\r\n    if (event.key !== undefined) {\r\n        return event.key;\r\n    }\r\n    switch (event.keyCode) {\r\n        case 9: return \"Tab\";\r\n        case 13: return \"Enter\";\r\n        case 16: return \"Shift\";\r\n        case 17: return \"Control\";\r\n        case 27: return \"Escape\";\r\n        case 32: return \" \";\r\n        case 37: return \"ArrowLeft\";\r\n        case 38: return \"ArrowUp\";\r\n        case 39: return \"ArrowRight\";\r\n        case 40: return \"ArrowDown\";\r\n        case 46: return \"Delete\";\r\n    }\r\n    return \"\" + event.keyCode;\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = appendStylesheet(this._root, \":not(*)\");\r\n        }\r\n        $object.each(styles, (key, value) => {\r\n            this.setStyle(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\nexport function truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\r\n    if (text.length > maxLength) {\r\n        // Find the last non-alphanumeric character before maxLength\r\n        let lastNonAlphanumericIndex = maxLength - 1;\r\n        while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\r\n            lastNonAlphanumericIndex--;\r\n        }\r\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\r\n            return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\r\n        }\r\n        else {\r\n            // If no non-alphanumeric character found, truncate without breaking words\r\n            return text.substring(0, maxLength) + ellipsis;\r\n        }\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\r\nexport function splitString(source) {\r\n    // Regular expression to identify RTL characters\r\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\r\n    // Regular expression to capture segments ending with specific Arabic characters\r\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\r\n    // Split input string into array of words or characters, including whitespace\r\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\r\n    let result = [];\r\n    segments.forEach(segment => {\r\n        if (segment.match(/^\\s+$/)) {\r\n            // If the segment is purely whitespace\r\n            if (segment = \" \") {\r\n                segment = \"  \";\r\n            }\r\n            result.push(segment);\r\n        }\r\n        else if (rtlChar.test(segment)) {\r\n            // If the segment contains RTL characters, handle special splits\r\n            let parts = segment.split(splitPattern).filter(part => part !== '');\r\n            // Concatenate parts processed by the split pattern directly to result\r\n            result = result.concat(parts);\r\n        }\r\n        else {\r\n            // Treat this segment as LTR: split into characters\r\n            result = result.concat([...segment]);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return trim(wtz);\r\n}\r\nexport function getTimezoneOffset(timezone, targetDate) {\r\n    const date = targetDate || new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l,\r\n    };\r\n}\r\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\r\nexport function hsvToHsl(hsv) {\r\n    const l = hsv.v * (1 - (hsv.s / 2));\r\n    const s = (l === 0 || l === 1\r\n        ? 0\r\n        : (hsv.v - l) / Math.min(l, 1 - l));\r\n    return {\r\n        h: hsv.h,\r\n        s,\r\n        l,\r\n        a: hsv.a,\r\n    };\r\n}\r\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\r\nexport function hslToHsv(hsl) {\r\n    const v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\r\n    const s = (v === 0\r\n        ? 0\r\n        : 2 * (1 - (hsl.l / v)));\r\n    return {\r\n        h: hsl.h,\r\n        s,\r\n        v,\r\n        a: hsl.a,\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\nexport var AnimationState;\r\n(function (AnimationState) {\r\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\r\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\r\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return AnimationState.Playing;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return AnimationState.Stopped;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return AnimationState.Playing;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return AnimationState.Stopped;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSwap(a, b) {\r\n        if (this.events.isEnabled(\"swap\")) {\r\n            this.events.dispatch(\"swap\", {\r\n                type: \"swap\",\r\n                target: this,\r\n                a,\r\n                b\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._values[b] = value_a;\r\n            this._onSwap(value_a, value_b);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const currentAutoDispose = this.autoDispose;\r\n        this.autoDispose = false;\r\n        super.swap(a, b);\r\n        this.autoDispose = currentAutoDispose;\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    _dispose() {\r\n        if (this.autoDispose) {\r\n            $array.each(this._values, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this.autoDispose) {\r\n            this.template.dispose();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\r\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\r\n    return horizontalOverlap && verticalOverlap;\r\n}\r\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\r\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    let r = innerRadius + 0.01;\r\n    startAngle = normalizeAngle(startAngle);\r\n    endAngle = normalizeAngle(endAngle);\r\n    let angle = startAngle * RADIANS;\r\n    if (endAngle < startAngle) {\r\n        endAngle += 360;\r\n    }\r\n    let points = [];\r\n    while (r < radius + radiusStep) {\r\n        let stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        let c = Math.max(0.01, Math.min(1, r / 200));\r\n        stepSize = stepSize * c;\r\n        let degrees = angle * DEGREES;\r\n        let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + 0.01 + (degrees - startAngle) / 360 * radiusStep;\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * DEGREES > endAngle + 360 * Math.ceil((radius - innerRadius) / radiusStep)) {\r\n            break;\r\n        }\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\r\nexport function circlesOverlap(circle1, circle2) {\r\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\r\n}\r\n//# sourceMappingURL=Math.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.13.3\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id) {\r\n    let found;\r\n    registry.rootElements.forEach((item) => {\r\n        if (item.dom.id == id) {\r\n            found = item;\r\n        }\r\n    });\r\n    return found;\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { AnimationState, getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * If this is set to `false` then disposing does nothing, it's a no-op.\r\n         */\r\n        Object.defineProperty(this, \"enableDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        let state = AnimationState.Stopped;\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            let paused = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            if (playing) {\r\n                state = AnimationState.Playing;\r\n            }\r\n            else if (paused) {\r\n                state = AnimationState.Paused;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    off(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._settingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    offPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._privateSettingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */\r\n    has(key) {\r\n        return key in this._settings;\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (this.enableDispose && !this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefaultFn(key, f) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            const value = f();\r\n            this.set(key, value);\r\n            return value;\r\n        }\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes(force = false) {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected || force) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected || force) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected || force;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete this._root.entitiesById[prevId];\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (this._root.entitiesById[id] && this._root.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        this._root.entitiesById[id] = this;\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete this._root.entitiesById[id];\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport * as $type from \"./Type\";\r\nfunction disposeSettings(settings) {\r\n    $object.each(settings, (_key, value) => {\r\n        if ($type.isObject(value) && typeof value.dispose === \"function\") {\r\n            value.enableDispose = true;\r\n            value.dispose();\r\n        }\r\n    });\r\n}\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    _dispose() {\r\n        $object.each(this._states, (_key, state) => {\r\n            state._dispose();\r\n        });\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n        disposeSettings(this._privateSettings);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n    _checkDisposed() {\r\n        if (this._disposed) {\r\n            throw new Error(\"Template is disposed\");\r\n        }\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        this._checkDisposed();\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        this._checkDisposed();\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        this._checkDisposed();\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        this._checkDisposed();\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        this._checkDisposed();\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        this._checkDisposed();\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        this._checkDisposed();\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._checkDisposed();\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        //this._checkDisposed();\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._checkDisposed();\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite.getPrivate(\"trustBounds\")) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (sprite.isType(\"Graphics\")) {\r\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\r\n                    if (strokeWidth >= 1) {\r\n                        bounds.left -= strokeWidth;\r\n                        bounds.right += strokeWidth;\r\n                        bounds.top -= strokeWidth;\r\n                        bounds.bottom += strokeWidth;\r\n                    }\r\n                }\r\n                if (!$math.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */\r\n    markDirtyKey(key) {\r\n        this._markDirtyKey(key);\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => {\r\n                                const tooltip = this.getTooltip();\r\n                                if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                else {\r\n                                    this.showTooltip();\r\n                                }\r\n                            }, 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        let filter = this.get(\"filter\", \"\");\r\n        if (this.isDirty(\"blur\")) {\r\n            const blur = this.get(\"blur\", 0);\r\n            if (blur != 0) {\r\n                filter += \" blur(\" + blur + \"px)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"saturate\")) {\r\n            const saturate = this.get(\"saturate\", 1);\r\n            if (saturate != 1) {\r\n                filter += \" saturate(\" + saturate + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"brightness\")) {\r\n            const brightness = this.get(\"brightness\", 1);\r\n            if (brightness != 1) {\r\n                filter += \" brightness(\" + brightness + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"contrast\")) {\r\n            const contrast = this.get(\"contrast\", 1);\r\n            if (contrast != 1) {\r\n                filter += \" contrast(\" + contrast + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"sepia\")) {\r\n            const sepia = this.get(\"sepia\", 0);\r\n            if (sepia != 0) {\r\n                filter += \" sepia(\" + sepia + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"hue\")) {\r\n            const hue = this.get(\"hue\", 0);\r\n            if (hue != 0) {\r\n                filter += \" hue-rotate(\" + hue + \"deg)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"invert\")) {\r\n            const invert = this.get(\"invert\", 0);\r\n            if (invert != 0) {\r\n                filter += \" invert(\" + invert + \")\";\r\n            }\r\n        }\r\n        if (filter) {\r\n            display.filter = filter;\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n            this._disposers.push(events.on(\"blur\", () => {\r\n                this.setPrivateRaw(\"touchHovering\", false);\r\n            }));\r\n            this._disposers.push(events.once(\"boundschanged\", () => {\r\n                // We might need to do this to re-evaluate accessibility attributes\r\n                // once the element gains size (bounds)\r\n                this.markDirtyAccessibility();\r\n            }));\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\") && !events.isDisposed()) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", null);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            let scale = 1;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n                if (parent) {\r\n                    scale *= parent.get(\"scale\", 1);\r\n                }\r\n            }\r\n            let x = (e.point.x - dragEvent.point.x) / scale;\r\n            let y = (e.point.y - dragEvent.point.y) / scale;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        if (!this.isDisposed()) {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        if (!this.isDisposed()) {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        if (!this.isDisposed()) {\r\n            const tooltip = this.getTooltip();\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                const tooltipPosition = this.get(\"tooltipPosition\");\r\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                if (tooltipPosition == \"pointer\") {\r\n                    const lastTooltipCoords = this.getPrivate(\"lastTooltipCoords\");\r\n                    if (lastTooltipCoords && lastTooltipCoords.x == point.x && lastTooltipCoords.y == point.y) {\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.setPrivate(\"lastTooltipCoords\", point);\r\n                    }\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                const dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                const promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            this.removePrivate(\"lastTooltipCoords\");\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeScale() {\r\n        const scale = this.get(\"scale\", 1);\r\n        return this._parent ? (this._parent.compositeScale() * scale) : scale;\r\n    }\r\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeRotation() {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        return this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n        this._checkDirtyFill();\r\n    }\r\n    _checkDirtyFill() {\r\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            const backgroundDisplay = this._backgroundDisplay;\r\n            const display = this._display;\r\n            display.clear();\r\n            backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                backgroundDisplay.beginFill(fill, fillOpacity);\r\n                backgroundDisplay.drawRect(0, 0, width, height);\r\n                backgroundDisplay.endFill();\r\n            }\r\n            display.angle = this.get(\"rotation\", 0);\r\n            //display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this.set(\"width\", canvas.width);\r\n            this.set(\"height\", canvas.height);\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (colorOpacity !== undefined) {\r\n            this._display.alpha = Math.max(0, colorOpacity);\r\n        }\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n                this.markDirty();\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this._display.image(canvas, canvas.width, canvas.height, 0, 0);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map","/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw && typeof draw === \"function\") {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fill && !fillGradient) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            if (fillPattern) {\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                const lineCap = this.get(\"lineCap\");\r\n                if (stroke && !strokeGradient) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\r\n                    this._display.endStroke();\r\n                }\r\n                if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                if (strokePattern) {\r\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */\r\n                    let pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        let w = this.width();\r\n        let h = this.height();\r\n        let x = 0;\r\n        let y = 0;\r\n        let wSign = w / Math.abs(w);\r\n        let hSign = h / Math.abs(h);\r\n        if (this.get(\"containStroke\", false)) {\r\n            const strokeWidth = this.get(\"strokeWidth\", 0);\r\n            w -= strokeWidth * wSign;\r\n            h -= strokeWidth * hSign;\r\n            x += strokeWidth / 2 * wSign;\r\n            y += strokeWidth / 2 * hSign;\r\n        }\r\n        this._display.drawRect(x, y, w, h);\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes(force = false) {\r\n        if (super._applyThemes(force)) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes(force);\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        if (!this.get(\"html\")) {\r\n            let width = this.get(\"width\");\r\n            let height = this.get(\"height\");\r\n            let pWidth = this.getPrivate(\"width\");\r\n            let pHeight = this.getPrivate(\"height\");\r\n            let bounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: this.width(),\r\n                bottom: this.height()\r\n            };\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                horizontal = true;\r\n            }\r\n            if (layout instanceof VerticalLayout) {\r\n                vertical = true;\r\n            }\r\n            if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n                // void\r\n            }\r\n            else {\r\n                let m = Number.MAX_VALUE;\r\n                let l = m;\r\n                let r = -m;\r\n                let t = m;\r\n                let b = -m;\r\n                const paddingLeft = this.get(\"paddingLeft\", 0);\r\n                const paddingTop = this.get(\"paddingTop\", 0);\r\n                const paddingRight = this.get(\"paddingRight\", 0);\r\n                const paddingBottom = this.get(\"paddingBottom\", 0);\r\n                this.children.each((child) => {\r\n                    if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                        let childBounds = child.adjustedLocalBounds();\r\n                        let childX = child.x();\r\n                        let childY = child.y();\r\n                        let cl = childX + childBounds.left;\r\n                        let cr = childX + childBounds.right;\r\n                        let ct = childY + childBounds.top;\r\n                        let cb = childY + childBounds.bottom;\r\n                        if (horizontal) {\r\n                            cl -= child.get(\"marginLeft\", 0);\r\n                            cr += child.get(\"marginRight\", 0);\r\n                        }\r\n                        if (vertical) {\r\n                            ct -= child.get(\"marginTop\", 0);\r\n                            cb += child.get(\"marginBottom\", 0);\r\n                        }\r\n                        if (cl < l) {\r\n                            l = cl;\r\n                        }\r\n                        if (cr > r) {\r\n                            r = cr;\r\n                        }\r\n                        if (ct < t) {\r\n                            t = ct;\r\n                        }\r\n                        if (cb > b) {\r\n                            b = cb;\r\n                        }\r\n                    }\r\n                });\r\n                if (l == m) {\r\n                    l = 0;\r\n                }\r\n                if (r == -m) {\r\n                    r = 0;\r\n                }\r\n                if (t == m) {\r\n                    t = 0;\r\n                }\r\n                if (b == -m) {\r\n                    b = 0;\r\n                }\r\n                bounds.left = l - paddingLeft;\r\n                bounds.top = t - paddingTop;\r\n                bounds.right = r + paddingRight;\r\n                bounds.bottom = b + paddingBottom;\r\n                const minWidth = this.get(\"minWidth\");\r\n                if ($type.isNumber(minWidth) && minWidth > 0) {\r\n                    if (bounds.right - bounds.left < minWidth) {\r\n                        if (bounds.right >= minWidth) {\r\n                            bounds.left = bounds.right - minWidth;\r\n                        }\r\n                        else {\r\n                            bounds.right = bounds.left + minWidth;\r\n                        }\r\n                    }\r\n                }\r\n                const minHeight = this.get(\"minHeight\");\r\n                if ($type.isNumber(minHeight) && minHeight > 0) {\r\n                    if (bounds.bottom - bounds.top < minHeight) {\r\n                        if (bounds.bottom >= minHeight) {\r\n                            bounds.top = bounds.bottom - minHeight;\r\n                        }\r\n                        else {\r\n                            bounds.bottom = bounds.top + minHeight;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._contentWidth = bounds.right - bounds.left;\r\n            this._contentHeight = bounds.bottom - bounds.top;\r\n            if ($type.isNumber(width)) {\r\n                bounds.left = 0;\r\n                bounds.right = width;\r\n            }\r\n            if ($type.isNumber(pWidth)) {\r\n                bounds.left = 0;\r\n                bounds.right = pWidth;\r\n            }\r\n            if ($type.isNumber(height)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = height;\r\n            }\r\n            if ($type.isNumber(pHeight)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = pHeight;\r\n            }\r\n            this._localBounds = bounds;\r\n        }\r\n        else {\r\n            let bounds = this._localBounds;\r\n            if (bounds) {\r\n                this._contentWidth = bounds.right - bounds.left;\r\n                this._contentHeight = bounds.bottom - bounds.top;\r\n            }\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateHTMLContent() {\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\") {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n        else {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        this._root._positionHTMLElement(this);\r\n    }\r\n    /**\r\n     * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n     * the Container will scroll in such way so that target element becomes\r\n     * visible if its currently outside of view.\r\n     *\r\n     * @param  child  Target child\r\n     * @since 5.10.5\r\n     */\r\n    scrollToChild(child) {\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            let y = child.y();\r\n            let h = this.innerHeight();\r\n            let ch = child.height();\r\n            let contentH = this._contentHeight;\r\n            let max = 1 - (h - ch / 2) / contentH;\r\n            if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\r\n                let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\r\n                verticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            this._updateHTMLContent();\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"maxChars\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n            let fillGradient = this.get(\"fillGradient\");\r\n            if (fillGradient) {\r\n                this._display.style.fill = fillGradient.getFill(this);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                textStyle.fill = fillGradient.getFill(this);\r\n            }\r\n            else if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        let text = this.get(\"text\", \"\");\r\n        if (this.get(\"maxChars\")) {\r\n            text = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\r\n        }\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    _getAccessibleText() {\r\n        const ariaLabel = this.get(\"ariaLabel\");\r\n        if (ariaLabel !== undefined) {\r\n            return this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\r\n        }\r\n        return this._getText();\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillGradient\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\",\r\n                \"maxChars\",\r\n                \"ariaLabel\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const text = this._text;\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            text.set(\"text\", this.get(\"text\"));\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\", 0);\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\", 0);\r\n                }\r\n            }\r\n            text.set(\"x\", x);\r\n        }\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            background.setPrivate(\"visible\", text._display.textVisible);\r\n        }\r\n    }\r\n    _maybeUpdateHTMLColor() {\r\n        const htmlElement = this.getPrivate(\"htmlElement\");\r\n        if (htmlElement && this.get(\"fill\")) {\r\n            htmlElement.style.color = this.get(\"fill\").toCSSHex();\r\n            //@todo support gradient\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const text = this._text;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n        this.root.events.once(\"frameended\", () => {\r\n            text.markDirtyBounds();\r\n        });\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        this._markDirtyKey(\"html\");\r\n        const text = this._text;\r\n        if (text.get(\"populateText\")) {\r\n            text.markDirtyText();\r\n        }\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._updateHTMLContent();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getAccessibleText() {\r\n        return this._text._getAccessibleText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillGrDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        const background = this._setDefaultFn(\"background\", () => {\r\n            return PointedRectangle.new(this._root, {});\r\n        });\r\n        background.set(\"themeTags\", [\"tooltip\", \"background\"]);\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                }));\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                }));\r\n            }\r\n        }));\r\n        this.on(\"visible\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this.label.events.on(\"dataitemchanged\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this._root._tooltips.push(this);\r\n    }\r\n    _handleReaderAnnouncement() {\r\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\r\n            this._root.readerAlert(this.label.getAccessibleText());\r\n        }\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    _dispose() {\r\n        super._dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\r\n        if (labelAriaLabel != null) {\r\n            this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getFillGradientFromSprite\")) {\r\n                if (this._fillGrDp) {\r\n                    this._fillGrDp.dispose();\r\n                }\r\n                let fillGradient = tooltipTarget.get(\"fillGradient\");\r\n                if (fillGradient != null) {\r\n                    background.set(\"fillGradient\", fillGradient);\r\n                }\r\n                this._fillGrDp = tooltipTarget.on(\"fillGradient\", (fillGradient) => {\r\n                    if (fillGradient != null) {\r\n                        background.set(\"fillGradient\", fillGradient);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillGrDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            const decimals = $utils.decimalPlaces(value);\r\n            if (decimals > 0) {\r\n                const d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\r\n            }\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */\r\n    format(source, format, ignoreTimezone = false) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        let originalDate = date;\r\n        if (timezone && !this._root.utc && !ignoreTimezone) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info, ignoreTimezone, originalDate);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info, ignoreTimezone = false, originalDate) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc && !ignoreTimezone) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(originalDate || date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(originalDate || date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(originalDate || date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(originalDate || date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone, originalDate || date) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format, utc) {\r\n        // If UTC is not supplied, use Root setting\r\n        if (typeof utc === \"undefined\") {\r\n            utc = this._root.utc;\r\n        }\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // Are we parsing a timestamp?\r\n        if (format == \"x\") {\r\n            return new Date(parseInt(source));\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        const values = {\r\n            millisecond: 0,\r\n            second: 0,\r\n            minute: 0,\r\n            hour: 0,\r\n            day: 0,\r\n            week: 0,\r\n            month: 0,\r\n            year: 0\r\n        };\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            // Calculate current unit value\r\n            let ints;\r\n            const unitValue = this._getUnitValue(unit);\r\n            if (i < (len - 1)) {\r\n                ints = Math.floor(tstamp / unitValue);\r\n            }\r\n            else {\r\n                ints = Math.round(tstamp / unitValue);\r\n            }\r\n            values[unit] += ints;\r\n            // Reduce timestamp\r\n            tstamp -= ints * unitValue;\r\n        }\r\n        // Check if we have full unit that we need to bump up to higher unit\r\n        $object.each(values, (unit, value) => {\r\n            if (unit == \"millisecond\" && value == 1000) {\r\n                values[\"second\"]++;\r\n                values[\"millisecond\"] = 0;\r\n            }\r\n            else if (unit == \"second\" && value == 60) {\r\n                values[\"minute\"]++;\r\n                values[\"second\"] = 0;\r\n            }\r\n            else if (unit == \"minute\" && value == 60) {\r\n                values[\"hour\"]++;\r\n                values[\"minute\"] = 0;\r\n            }\r\n            else if (unit == \"hour\" && value == 24) {\r\n                values[\"day\"]++;\r\n                values[\"hour\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 7) {\r\n                values[\"week\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 30) {\r\n                values[\"month\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"month\" && value == 12) {\r\n                values[\"year\"]++;\r\n                values[\"month\"] = 0;\r\n            }\r\n            // if (val > 0) {\r\n            // \tres = res.replace($type.PLACEHOLDER, $utils.padString(val, 2, \"0\"));\r\n            // }\r\n            // else {\r\n            // \tres = res.replace($type.PLACEHOLDER, \"\");\r\n            // }\r\n        });\r\n        // Iterate again\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(values[unit], digits, \"0\"));\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonDisabled: Color.fromHex(0xdadada),\r\n            primaryButtonTextDisabled: Color.fromHex(0xffffff),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        r(\"ZoomableContainer\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            wheelable: true,\r\n            pinchZoom: true,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            zoomStep: 2,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            animationDuration: 600,\r\n            maxPanOut: 0.4\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        r(\"GrainPattern\").setAll({\r\n            width: 200,\r\n            height: 200,\r\n            colors: [Color.fromHex(0x000000)],\r\n            size: 1,\r\n            horizontalGap: 0,\r\n            verticalGap: 0,\r\n            density: 1,\r\n            minOpacity: 0,\r\n            maxOpacity: 0.2\r\n        });\r\n        {\r\n            const rule = r(\"PatternSet\");\r\n            rule.setAll({\r\n                step: 1\r\n            });\r\n            setColor(rule, \"color\", ic, \"stroke\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"EditableLabel\").setAll({\r\n            editOn: \"click\",\r\n            //setStateOnChildren: true,\r\n            themeTags: [\"editablelabel\"],\r\n            multiLine: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\r\n            fillOpacity: 0,\r\n            fill: Color.fromHex(0x000000),\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusTR: 3,\r\n            strokeOpacity: 0,\r\n            stroke: Color.fromHex(0x000000)\r\n        });\r\n        {\r\n            r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\r\n                strokeOpacity: 0.2,\r\n            });\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        r(\"Button\").states.create(\"disabled\", {\r\n            forceInactive: true\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            rule.setAll({\r\n                forceInactive: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"Tooltip\", ['indicator']).setAll({\r\n            forceHidden: true\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10,\r\n            isMeasured: false\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\r\n        });\r\n        r(\"Button\", [\"zoomtools\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 2\r\n        });\r\n        r(\"ZoomTools\").setAll({\r\n            x: p100,\r\n            centerX: p100,\r\n            y: p100,\r\n            centerY: p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x) + .5;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    subStatus(status) {\r\n        return {\r\n            inactive: (this.inactive == null ? status.inactive : this.inactive),\r\n            layer: this._layer || status.layer,\r\n        };\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive(status) {\r\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this._isInteractive(status);\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(status, targetGhostLayer = 0) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const subStatus = this.subStatus(status);\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask(subStatus)) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            if ((subStatus.layer.order > 0) && !targetGhostLayer) {\r\n                $array.move(this._renderer._deferredGhostLayers, subStatus.layer.order);\r\n            }\r\n            this._render(subStatus, targetGhostLayer);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(status, _targetGhostLayer = 0) {\r\n        if (this.exportable === false) {\r\n            status.layer.tainted = true;\r\n        }\r\n    }\r\n    _ghostOnly(targetGhostLayer = 0) {\r\n        return targetGhostLayer > 0 ? true : false;\r\n    }\r\n    _drawGhost(status, targetGhostLayer = 0) {\r\n        const interactive = this._isInteractive(status);\r\n        const order = status.layer.order || 0;\r\n        return interactive && ((order == 0 && !this._ghostOnly(targetGhostLayer)) || order == targetGhostLayer) ? true : false;\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this.interactiveChildren || super._isInteractiveMask(status);\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(status, targetGhostLayer) {\r\n        super._render(status);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(status, targetGhostLayer);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    colorizeGhost(context, forceColor) {\r\n        this.colorize(context, forceColor);\r\n    }\r\n    path(_context) { }\r\n    pathGhost(context) {\r\n        this.path(context);\r\n    }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin, lineCap) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n        Object.defineProperty(this, \"lineCap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineCap\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n        if (this.lineCap) {\r\n            context.lineCap = this.lineCap;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n    colorizeGhost(_context, _forceColor) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin, lineCap) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin, lineCap));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        const layerDirty = status.layer.dirty;\r\n        const interactive = this._isInteractive(status);\r\n        const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n        const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n        if (layerDirty || interactive || ghostOnly) {\r\n            const context = status.layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty && !ghostOnly) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (drawGhost) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty && !ghostOnly) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (drawGhost) {\r\n                    op.pathGhost(ghostContext);\r\n                    op.colorizeGhost(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"truncated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(status);\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            status.layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            status.layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            status.layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(status);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(status);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (this._isInteractive(status)) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\r\n                        if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\r\n                            // Measure actual width of the text so the line fits\r\n                            const metrics = this._measureText(chunk.text, context);\r\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        }\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        if (!ghostOnly) {\r\n                            context.save();\r\n                            context.beginPath();\r\n                            if (chunk.fill) {\r\n                                context.strokeStyle = chunk.fill.toCSS();\r\n                            }\r\n                            else if (this.style.fill && this.style.fill instanceof Color) {\r\n                                context.strokeStyle = this.style.fill.toCSS();\r\n                            }\r\n                            context.lineWidth = thickness * offset;\r\n                            context.moveTo(offsetX, y);\r\n                            context.lineTo(offsetX + chunk.width, y);\r\n                            context.stroke();\r\n                            context.restore();\r\n                        }\r\n                    }\r\n                    if (interactive && this.interactive && drawGhost) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure({\r\n                inactive: this.inactive,\r\n                layer: this.getLayer(),\r\n            });\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            this.truncated = undefined;\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                                this.truncated = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = rtl ? maxWidth : -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = rtl ? -maxWidth : maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(status, targetGhostLayer);\r\n                break;\r\n            default:\r\n                super._render(status, targetGhostLayer);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(status, targetGhostLayer = 0) {\r\n        if (this.textVisible) {\r\n            this._prerender(status);\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(status);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                if (!ghostOnly) {\r\n                    context.rotate(lineStartAngle);\r\n                }\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    if (!ghostOnly) {\r\n                        context.textBaseline = \"middle\";\r\n                        context.textAlign = \"center\";\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive && drawGhost) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(status);\r\n            default:\r\n                return super._measure(status);\r\n        }\r\n    }\r\n    _measureCircular(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    let chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars = $utils.splitString(chunk.text);\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            //totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        if (rtl) {\r\n                            // @todo still needed?\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        if (this.image) {\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                status.layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            if (status.layer.dirty && !ghostOnly) {\r\n                if (this.shadowColor) {\r\n                    status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    status.layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    status.layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    status.layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive(status) && drawGhost) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_deferredGhostLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    resetImageArray() {\r\n        this._ghostLayer.imageArray = undefined;\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        layer.view.className = \"am5-layer-\" + order;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        this._deferredGhostLayers = [];\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render({\r\n            inactive: null,\r\n            layer: this.defaultLayer,\r\n        });\r\n        const deferredGhostLayers = this._deferredGhostLayers;\r\n        if (deferredGhostLayers.length) {\r\n            deferredGhostLayers.sort((a, b) => a - b);\r\n            $array.each(deferredGhostLayers, (layerx) => {\r\n                root.render({\r\n                    inactive: null,\r\n                    layer: this.defaultLayer\r\n                }, layerx);\r\n            });\r\n        }\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    getObjectAtPoint(point) {\r\n        const data = this._ghostLayer.getImageArray(point);\r\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\r\n            return undefined;\r\n        }\r\n        const colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"imageArray\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        this._resolution = resolution;\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    getImageArray(point) {\r\n        if (!this.imageArray) {\r\n            this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\r\n        }\r\n        const data = this.imageArray;\r\n        const x = Math.round(point.x * this._resolution);\r\n        const y = Math.round(point.y * this._resolution);\r\n        const i = (y * this._width + x) * 4;\r\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","import { AnimationState } from \"./util/Animation\";\r\nimport { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent, isPercent, Percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         *\r\n         * @since 5.11.0\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n            if (settings.role) {\r\n                this._inner.setAttribute(\"role\", settings.role);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (eventKey == \"Tab\") {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                        if (announceText !== \"\") {\r\n                            this.readerAlert(announceText);\r\n                        }\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.key == \"Escape\") {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"Enter\":\r\n                            case \" \":\r\n                                const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                                if (announceText !== \"\") {\r\n                                    this.readerAlert(announceText);\r\n                                }\r\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\r\n                                    return;\r\n                                }\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case \"ArrowLeft\":\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case \"ArrowRight\":\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case \"ArrowUp\":\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case \"ArrowDown\":\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                downEvent.point = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"ArrowLeft\":\r\n                            case \"ArrowRight\":\r\n                            case \"ArrowUp\":\r\n                            case \"ArrowDown\":\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                            case \"Tab\":\r\n                                const group = focusedSprite.get(\"focusableGroup\");\r\n                                if (group && this._isShift) {\r\n                                    this._focusNext(focusedSprite.getPrivate(\"focusElement\").dom, -1, group);\r\n                                    return;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        let running = 0;\r\n        $array.keepIf(this._animations, (animation) => {\r\n            const state = animation._runAnimation(currentTime);\r\n            if (state === AnimationState.Stopped) {\r\n                return false;\r\n            }\r\n            else if (state === AnimationState.Playing) {\r\n                ++running;\r\n                return true;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n        this._isDirtyAnimation = false;\r\n        return running === 0;\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            const animationDone = this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._renderer.resetImageArray();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                animationDone &&\r\n                !this._isDirtyAnimation &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._dirty[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyParent(parent) {\r\n        this._isDirty = true;\r\n        this._isDirtyParents = true;\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._dirtyParents[parent.uid] = parent;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._dirtyBounds[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        this._isDirty = true;\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addAnimation(animation) {\r\n        this._isDirtyAnimation = true;\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            const element = this._readerAlertElement;\r\n            text = $utils.stripTags(text);\r\n            if (element.innerHTML == text) {\r\n                element.innerHTML = \"\";\r\n            }\r\n            element.innerHTML = text;\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        const ariaCurrent = target.get(\"ariaCurrent\");\r\n        if (ariaCurrent != null) {\r\n            focusElement.setAttribute(\"aria-current\", ariaCurrent);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-current\");\r\n        }\r\n        const ariaSelected = target.get(\"ariaSelected\");\r\n        if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-selected\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false && (target.height() || target.width())) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\r\n        let x = bounds.left - padding;\r\n        let y = bounds.top - padding;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + padding * 2) + \"px\";\r\n        focusElement.style.height = (height + padding * 2) + \"px\";\r\n    }\r\n    _getSpriteByFocusElement(target) {\r\n        let found;\r\n        $array.eachContinue(this._tabindexes, (item, _index) => {\r\n            if (item.getPrivate(\"focusElement\").dom === target) {\r\n                found = item;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return found;\r\n    }\r\n    _handleFocus(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        //const focused = this._tabindexes[index];\r\n        const focused = this._getSpriteByFocusElement(ev.target);\r\n        if (!focused) {\r\n            return;\r\n        }\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction, group) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        const targetElement = focusableElements[index];\r\n        if (group && direction == -1) {\r\n            const target = this._getSpriteByFocusElement(targetElement);\r\n            if (target && target.get(\"focusableGroup\") == group) {\r\n                this._focusNext(targetElement, direction);\r\n                return;\r\n            }\r\n        }\r\n        targetElement.focus();\r\n    }\r\n    _handleBlur(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        // Should we put this into a wrapper?\r\n        let needWrapper = false;\r\n        let wrapperTarget;\r\n        target._walkParents((parent) => {\r\n            if (parent.get(\"verticalScrollbar\")) {\r\n                needWrapper = true;\r\n                wrapperTarget = parent;\r\n                return false;\r\n            }\r\n        });\r\n        let htmlElementWrapper;\r\n        if (needWrapper) {\r\n            htmlElementWrapper = document.createElement(\"div\");\r\n            target.setPrivate(\"htmlElementWrapper\", htmlElementWrapper);\r\n            target.setPrivate(\"wrapperContainer\", wrapperTarget);\r\n            htmlElementWrapper.style.position = \"absolute\";\r\n            htmlElementWrapper.style.overflow = \"hidden\";\r\n            htmlElementWrapper.style.boxSizing = \"border-box\";\r\n            htmlElementWrapper.style.top = \"0px\";\r\n            htmlElementWrapper.style.left = \"0px\";\r\n            htmlElementWrapper.style.width = \"100%\";\r\n            htmlElementWrapper.style.height = \"100%\";\r\n            wrapperTarget.events.on(\"boundschanged\", () => {\r\n                this._positionHTMLElement(target);\r\n            });\r\n        }\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        if (needWrapper) {\r\n            htmlElementWrapper.append(htmlElement);\r\n            container.append(htmlElementWrapper);\r\n        }\r\n        else {\r\n            container.append(htmlElement);\r\n        }\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        if (htmlElementWrapper) {\r\n            const wrapperTarget = target.getPrivate(\"wrapperContainer\");\r\n            if (wrapperTarget) {\r\n                const bounds = wrapperTarget.globalBounds();\r\n                htmlElementWrapper.style.clipPath = \"rect(\" + bounds.top + \"px \" + bounds.right + \"px \" + bounds.bottom + \"px \" + bounds.left + \"px)\";\r\n            }\r\n        }\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\r\n                \"paddingTop\",\r\n                \"paddingRight\",\r\n                \"paddingBottom\",\r\n                \"paddingLeft\",\r\n                \"minWidth\",\r\n                \"minHeight\",\r\n                \"maxWidth\",\r\n                \"maxHeight\"\r\n            ];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            const strtingSettings = [\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\"\r\n            ];\r\n            $array.each(strtingSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    if (setting == \"fontSize\" && !$type.isString(value)) {\r\n                        htmlElement.style[setting] = value + \"px\";\r\n                    }\r\n                    else {\r\n                        htmlElement.style[setting] = value + \"\";\r\n                    }\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Init and reset scale / rotation\r\n            const scale = target.compositeScale() || 1;\r\n            const rotation = target.compositeRotation() || 0;\r\n            htmlElement.style.transform = \"\";\r\n            htmlElement.style.transformOrigin = \"\";\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            // const bounds = target.globalBounds();\r\n            // htmlElement.style.top = (bounds.top) + \"px\";\r\n            // htmlElement.style.left = (bounds.left) + \"px\";\r\n            let pos = {\r\n                x: target.x() + target.get(\"dx\", 0),\r\n                y: target.y() + target.get(\"dy\", 0)\r\n            };\r\n            if (target.parent) {\r\n                pos = target.parent.toGlobal(pos);\r\n            }\r\n            htmlElement.style.top = pos.y + \"px\";\r\n            htmlElement.style.left = pos.x + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                if (!width)\r\n                    w = bbox.width;\r\n                if (!height)\r\n                    h = bbox.height;\r\n                let lw = w / scale;\r\n                let lh = h / scale;\r\n                let cx = target.get(\"centerX\", 0);\r\n                let cy = target.get(\"centerY\", 0);\r\n                let ll = 0;\r\n                let lr = 0;\r\n                let lt = 0;\r\n                let lb = 0;\r\n                if (cx instanceof Percent) {\r\n                    ll = -cx.value * lw;\r\n                    lr = (1 - cx.value) * lw;\r\n                }\r\n                else {\r\n                    ll = -cx;\r\n                    lr = lw - cx;\r\n                }\r\n                if (cy instanceof Percent) {\r\n                    lt = -cy.value * lh;\r\n                    lb = (1 - cy.value) * lh;\r\n                }\r\n                else {\r\n                    lt = -cy;\r\n                    lb = lh - cy;\r\n                }\r\n                target._localBounds = { left: ll, right: lr, top: lt, bottom: lb };\r\n                let previousBounds = target._adjustedLocalBounds;\r\n                let newBounds = target._display.getAdjustedBounds(target._localBounds);\r\n                target._adjustedLocalBounds = newBounds;\r\n                // compare each value of the bounds\r\n                if (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\r\n                    target.markDirtyBounds();\r\n                }\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n            // Center position\r\n            const x = target.get(\"centerX\", 0);\r\n            const originX = isPercent(x) ? x.percent + \"%\" : x + \"px\";\r\n            const y = target.get(\"centerY\", 0);\r\n            const originY = isPercent(y) ? y.percent + \"%\" : y + \"px\";\r\n            if (x || y) {\r\n                htmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\r\n            }\r\n            // Deal with scale\r\n            if (scale != 1) {\r\n                htmlElement.style.transform += \"scale(\" + scale + \")\";\r\n            }\r\n            if (rotation != 0) {\r\n                htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\r\n            }\r\n            if (htmlElement.style.transform != \"\") {\r\n                htmlElement.style.transformOrigin = originX + \" \" + originY;\r\n                //htmlElement.style.transformOrigin = \"0% 0%\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElementWrapper) {\r\n            this._htmlElementContainer.removeChild(htmlElementWrapper);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"htmlElementWrapper\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        else if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import { Entity } from \"../../core/util/Entity\";\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nexport class Bullet extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because bullet will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                this._disposers.push(sprite);\r\n            }\r\n        }\r\n        if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n            if (this.series) {\r\n                this.series._positionBullet(this);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Bullet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Bullet\"\r\n});\r\nObject.defineProperty(Bullet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Bullet.className])\r\n});\r\n//# sourceMappingURL=Bullet.js.map","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let wSign = width / Math.abs(width);\r\n        let hSign = height / Math.abs(height);\r\n        let x = 0;\r\n        let y = 0;\r\n        const strokeWidth = this.get(\"strokeWidth\", 0);\r\n        if (this.get(\"containStroke\", false)) {\r\n            width -= wSign * strokeWidth;\r\n            height -= hSign * strokeWidth;\r\n            x += wSign * strokeWidth / 2;\r\n            y += hSign * strokeWidth / 2;\r\n        }\r\n        let w = width;\r\n        let h = height;\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(x + crtl * wSign, y);\r\n            display.lineTo(x + w - crtr * wSign, y);\r\n            if (crtr > 0) {\r\n                display.arcTo(x + w, y, x + w, y + crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(x + w, y + h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(x + w, y + h, x + w - crbr * wSign, y + h, crbr);\r\n            }\r\n            display.lineTo(x + crbl * wSign, y + h);\r\n            if (crbl > 0) {\r\n                display.arcTo(x, y + h, x, y + h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(x, y + crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(x, y, x + crtl * wSign, y, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n        this.setPrivate(\"trustBounds\", true);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    makeDataItem(data, dataContext) {\r\n        let dataItem = new DataItem(this, dataContext, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    pushDataItem(data, dataContext) {\r\n        const dataItem = this.makeDataItem(data, dataContext);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            const endDays = date.getUTCDate();\r\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            if (endDays > startDays) {\r\n                date.setUTCMonth(month + count, startDays);\r\n            }\r\n            else {\r\n                date.setUTCMonth(month + count);\r\n            }\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function roun(time, unit, count, root, firstTime) {\r\n    let firstDate;\r\n    if (firstTime != null) {\r\n        firstDate = new Date(firstTime);\r\n    }\r\n    return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                if (count > 1) {\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"week\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"week\") / count);\r\n                        let duration = getDuration(\"week\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let initialTime = date.getTime();\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        let offsetDif = tzoffset - timeZoneOffset;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        // fix to solve #101989\r\n        const newTime = date.getTime();\r\n        let hDuration = 3600000;\r\n        if (unit == \"hour\") {\r\n            hDuration = 3600000 * count;\r\n        }\r\n        if (newTime + hDuration <= initialTime) {\r\n            if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n                date = new Date(newTime + hDuration);\r\n            }\r\n        }\r\n        // end of fix\r\n        let newTimeZoneOffset = date.getTimezoneOffset();\r\n        let newTzoffset = timezone.offsetUTC(date);\r\n        let newDiff = newTzoffset - newTimeZoneOffset;\r\n        if (newDiff != offsetDif) {\r\n            date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n//import { Animations } from \"../../core/util/Animation\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseSeriesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\", \"customValue\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            bullet._index = index;\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _makeBulletReal(dataItem, bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            sprite._setDataItem(dataItem);\r\n            sprite.setRaw(\"position\", \"absolute\");\r\n            this.bulletsContainer.children.push(sprite);\r\n        }\r\n        bullet.series = this;\r\n        dataItem.bullets.push(bullet);\r\n    }\r\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */\r\n    addBullet(dataItem, bullet) {\r\n        if (!dataItem.bullets) {\r\n            dataItem.bullets = [];\r\n        }\r\n        if (bullet) {\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._baseSeriesDirty = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"name\")) {\r\n            this.updateLegendValue();\r\n        }\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this._baseSeriesDirty = true;\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                    if (startIndex != 0) {\r\n                        this._psi = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleRemoved() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        return index;\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\r\n            for (let i = adjustedStartIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            if (endIndex < this.dataItems.length - 1) {\r\n                const dataItem = this.dataItems[endIndex];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                }\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            delete previous[key];\r\n            for (let i = startIndex; i < adjustedStartIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (previous[key] == null) {\r\n                        previous[key] = value;\r\n                    }\r\n                    if (value != null) {\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState && rule.neutral) {\r\n                                defaultState.set(rule.key, rule.neutral);\r\n                            }\r\n                        }\r\n                        if (!rule.customFunction) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState) {\r\n                                defaultState.set(rule.key, propertyValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n            dataItem.bullets = undefined;\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","import { Series } from \"./Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nexport class Legend extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [this.itemContainers.template])))\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [this.markers.template])))\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [this.labels.template])))\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [this.valueLabels.template])))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [this.markerRectangles.template])))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n        this.fields.push(\"name\", \"stroke\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeItemContainer(dataItem) {\r\n        const itemContainer = this.children.push(this.itemContainers.make());\r\n        itemContainer._setDataItem(dataItem);\r\n        this.itemContainers.push(itemContainer);\r\n        itemContainer.states.create(\"disabled\", {});\r\n        return itemContainer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        this.markers.push(marker);\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel() {\r\n        const label = this.labels.make();\r\n        label.states.create(\"disabled\", {});\r\n        return label;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeValueLabel() {\r\n        const valueLabel = this.valueLabels.make();\r\n        valueLabel.states.create(\"disabled\", {});\r\n        return valueLabel;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarkerRectangle() {\r\n        const markerRectangle = this.markerRectangles.make();\r\n        markerRectangle.states.create(\"disabled\", {});\r\n        return markerRectangle;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const itemContainer = this.makeItemContainer(dataItem);\r\n        const nameField = this.get(\"nameField\");\r\n        const fillField = this.get(\"fillField\");\r\n        const strokeField = this.get(\"strokeField\");\r\n        if (itemContainer) {\r\n            const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n            const item = dataItem.dataContext;\r\n            if (item && item.set) {\r\n                item.set(\"legendDataItem\", dataItem);\r\n            }\r\n            itemContainer._setDataItem(dataItem);\r\n            dataItem.set(\"itemContainer\", itemContainer);\r\n            const marker = this.makeMarker();\r\n            if (marker) {\r\n                itemContainer.children.push(marker);\r\n                marker._setDataItem(dataItem);\r\n                dataItem.set(\"marker\", marker);\r\n                const useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                const markerRectangle = marker.children.push(this.makeMarkerRectangle());\r\n                let fill = dataItem.get(\"fill\");\r\n                let stroke = dataItem.get(\"stroke\");\r\n                dataItem.set(\"markerRectangle\", markerRectangle);\r\n                if (item && item.get) {\r\n                    fill = item.get(fillField, fill);\r\n                    stroke = item.get(strokeField, stroke);\r\n                }\r\n                if (!stroke) {\r\n                    stroke = fill;\r\n                }\r\n                if (!useDefaultMarker) {\r\n                    if (item && item.createLegendMarker) {\r\n                        item.createLegendMarker();\r\n                    }\r\n                }\r\n                else {\r\n                    if (item.on) {\r\n                        item.on(fillField, () => {\r\n                            markerRectangle.set(\"fill\", item.get(fillField));\r\n                        });\r\n                        item.on(strokeField, () => {\r\n                            markerRectangle.set(\"stroke\", item.get(strokeField));\r\n                        });\r\n                    }\r\n                }\r\n                markerRectangle.setAll({ fill, stroke });\r\n                // this solves if template field is set on slice\r\n                const component = item.component;\r\n                if (component && component.updateLegendMarker) {\r\n                    component.updateLegendMarker(item);\r\n                }\r\n            }\r\n            const label = this.makeLabel();\r\n            if (label) {\r\n                itemContainer.children.push(label);\r\n                label._setDataItem(dataItem);\r\n                dataItem.set(\"label\", label);\r\n                label.text.on(\"text\", () => {\r\n                    itemContainer.setRaw(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\r\n                    itemContainer.markDirtyAccessibility();\r\n                });\r\n                if (item && item.get) {\r\n                    dataItem.set(\"name\", item.get(nameField));\r\n                }\r\n                let name = dataItem.get(\"name\");\r\n                if (name) {\r\n                    label.set(\"text\", name);\r\n                }\r\n            }\r\n            const valueLabel = this.makeValueLabel();\r\n            if (valueLabel) {\r\n                itemContainer.children.push(valueLabel);\r\n                valueLabel._setDataItem(dataItem);\r\n                dataItem.set(\"valueLabel\", valueLabel);\r\n            }\r\n            if (item && item.show) {\r\n                item.on(\"visible\", (visible) => {\r\n                    itemContainer.set(\"disabled\", !visible);\r\n                });\r\n                if (!item.get(\"visible\")) {\r\n                    itemContainer.set(\"disabled\", true);\r\n                }\r\n                if (clickTarget != \"none\") {\r\n                    let clickContainer = itemContainer;\r\n                    if (clickTarget == \"marker\") {\r\n                        clickContainer = marker;\r\n                    }\r\n                    this._addClickEvents(clickContainer, item, dataItem);\r\n                }\r\n            }\r\n            // Sort children\r\n            this.children.values.sort((a, b) => {\r\n                const targetA = a.dataItem.dataContext;\r\n                const targetB = b.dataItem.dataContext;\r\n                if (targetA && targetB) {\r\n                    const indexA = this.data.indexOf(targetA);\r\n                    const indexB = this.data.indexOf(targetB);\r\n                    if (indexA > indexB) {\r\n                        return 1;\r\n                    }\r\n                    else if (indexA < indexB) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            if (item && item.updateLegendValue) {\r\n                item.updateLegendValue();\r\n            }\r\n        }\r\n    }\r\n    _addClickEvents(container, item, dataItem) {\r\n        container.set(\"cursorOverStyle\", \"pointer\");\r\n        container.events.on(\"pointerover\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.hoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"pointerout\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.unhoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"click\", () => {\r\n            const labelText = dataItem.get(\"label\").text._getText();\r\n            if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                item.show();\r\n                container.set(\"disabled\", false);\r\n                this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\r\n            }\r\n            else if (item.hide) {\r\n                item.hide();\r\n                container.set(\"disabled\", true);\r\n                this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const dataContext = dataItem.dataContext;\r\n        if (dataContext && dataContext.get) {\r\n            const di = dataContext.get(\"legendDataItem\");\r\n            if (di == dataItem) {\r\n                dataContext.set(\"legendDataItem\", undefined);\r\n            }\r\n        }\r\n        let itemContainer = dataItem.get(\"itemContainer\");\r\n        if (itemContainer) {\r\n            this.itemContainers.removeValue(itemContainer);\r\n            itemContainer.dispose();\r\n        }\r\n        let marker = dataItem.get(\"marker\");\r\n        if (marker) {\r\n            this.markers.removeValue(marker);\r\n            marker.dispose();\r\n        }\r\n        let markerRectangle = dataItem.get(\"markerRectangle\");\r\n        if (markerRectangle) {\r\n            this.markerRectangles.removeValue(markerRectangle);\r\n            markerRectangle.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let valueLabel = dataItem.get(\"valueLabel\");\r\n        if (valueLabel) {\r\n            this.valueLabels.removeValue(valueLabel);\r\n            valueLabel.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Legend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Legend\"\r\n});\r\nObject.defineProperty(Legend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Legend.className])\r\n});\r\n//# sourceMappingURL=Legend.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n//# sourceMappingURL=Line.js.map","import { Text } from \"./Text\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport class RadialText extends Text {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeRadialText(\"\", this.textStyle)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._display.clear();\r\n        if (this.isDirty(\"textType\")) {\r\n            this._display.textType = this.get(\"textType\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"radius\")) {\r\n            this._display.radius = this.get(\"radius\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"startAngle\")) {\r\n            this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"inside\")) {\r\n            this._display.inside = this.get(\"inside\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"orientation\")) {\r\n            this._display.orientation = this.get(\"orientation\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"kerning\")) {\r\n            this._display.kerning = this.get(\"kerning\");\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RadialText, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialText\"\r\n});\r\nObject.defineProperty(RadialText, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Text.classNames.concat([RadialText.className])\r\n});\r\n//# sourceMappingURL=RadialText.js.map","// import * as $object from \"../util/Object\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { Label } from \"./Label\";\r\nimport { RadialText } from \"./RadialText\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nexport class RadialLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_flipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._textKeys.push(\"textType\", \"kerning\");\r\n        super._afterNew();\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(RadialText.new(this._root, {}));\r\n    }\r\n    /**\r\n     * Returns base radius in pixels.\r\n     *\r\n     * @return Base radius\r\n     */\r\n    baseRadius() {\r\n        const radiusPrivate = this.getPrivate(\"radius\", 0);\r\n        const innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\r\n        const baseRadius = this.get(\"baseRadius\", 0);\r\n        return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\r\n    }\r\n    /**\r\n     * Returns radius adjustment in pixels.\r\n     *\r\n     * @return Radius\r\n     */\r\n    radius() {\r\n        const inside = this.get(\"inside\", false);\r\n        return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\r\n            const textType = this.get(\"textType\", \"adjusted\");\r\n            const inside = this.get(\"inside\", false);\r\n            const orientation = this.get(\"orientation\");\r\n            let labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\r\n            this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\r\n            this._text.set(\"inside\", inside);\r\n            const sin = $math.sin(labelAngle);\r\n            const cos = $math.cos(labelAngle);\r\n            let baseRadius = this.baseRadius();\r\n            let radius = this.radius();\r\n            this._display.angle = 0;\r\n            if (textType == \"circular\") {\r\n                this.setAll({\r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                    paddingLeft: 0,\r\n                    paddingRight: 0\r\n                });\r\n                this.setRaw(\"x\", undefined);\r\n                this.setRaw(\"y\", undefined);\r\n                // Circular labels are handled and positioned differently\r\n                this._text.set(\"orientation\", orientation);\r\n                this._text.set(\"radius\", radius);\r\n            }\r\n            else {\r\n                if (baseRadius == 0) {\r\n                    labelAngle = 0;\r\n                    radius = 0;\r\n                }\r\n                // Positioning of radial/regular labels are teh same\r\n                let x = radius * cos;\r\n                let y = radius * sin;\r\n                if (textType == \"radial\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                    if ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\r\n                        this._display.angle = labelAngle; // + 90;\r\n                        this._flipped = false;\r\n                    }\r\n                    else {\r\n                        this._display.angle = labelAngle + 180;\r\n                        this._flipped = true;\r\n                    }\r\n                    this._dirty.rotation = false;\r\n                }\r\n                else if (textType == \"adjusted\") {\r\n                    this.setRaw(\"centerX\", p50);\r\n                    this.setRaw(\"centerY\", p50);\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n                else if (textType == \"regular\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const textType = this.get(\"textType\", \"regular\");\r\n        const inside = this.get(\"inside\", false);\r\n        let dx = 0;\r\n        let dy = 0;\r\n        let labelAngle = this.get(\"labelAngle\", 0);\r\n        let bounds = this.localBounds();\r\n        let w = bounds.right - bounds.left;\r\n        let h = bounds.bottom - bounds.top;\r\n        if (textType == \"radial\") {\r\n            if (this._flipped) {\r\n                let centerX = this.get(\"centerX\");\r\n                if (centerX instanceof Percent) {\r\n                    w = w * (1 - centerX.value * 2);\r\n                }\r\n                dx = w * $math.cos(labelAngle);\r\n                dy = w * $math.sin(labelAngle);\r\n            }\r\n        }\r\n        else if (!inside && textType == \"adjusted\") {\r\n            dx = w / 2 * $math.cos(labelAngle);\r\n            dy = h / 2 * $math.sin(labelAngle);\r\n        }\r\n        this.setRaw(\"dx\", dx);\r\n        this.setRaw(\"dy\", dy);\r\n        super._updatePosition();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n}\r\nObject.defineProperty(RadialLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialLabel\"\r\n});\r\nObject.defineProperty(RadialLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([RadialLabel.className])\r\n});\r\n//# sourceMappingURL=RadialLabel.js.map","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import { Graphics } from \"./Graphics\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Slice extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"iy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_generator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if ($type.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if ($type.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        let radius = this.get(\"radius\", 0);\r\n        let innerRadius = this.get(\"innerRadius\", 0);\r\n        let dRadius = this.get(\"dRadius\", 0);\r\n        let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n        radius += dRadius;\r\n        innerRadius += dInnerRadius;\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (tooltipX instanceof Percent) {\r\n            x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\r\n        }\r\n        if (tooltipY instanceof Percent) {\r\n            y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\r\n        }\r\n        if (this.get(\"arc\") >= 360 && innerRadius == 0) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        return { x, y };\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            let startAngle = this.get(\"startAngle\", 0);\r\n            let arc = this.get(\"arc\", 0);\r\n            const generator = this._generator;\r\n            if (arc < 0) {\r\n                startAngle = startAngle + arc;\r\n                arc = arc * -1;\r\n            }\r\n            if (arc > 0.1) { // this fixes bug with full circle when arc is very small\r\n                generator.cornerRadius(this.get(\"cornerRadius\", 0));\r\n            }\r\n            generator.context(this._display);\r\n            let radius = this.get(\"radius\", 0);\r\n            let innerRadius = this.get(\"innerRadius\", 0);\r\n            let dRadius = this.get(\"dRadius\", 0);\r\n            let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n            radius += dRadius;\r\n            innerRadius += dInnerRadius;\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            generator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\r\n            let middleAngle = startAngle + arc / 2;\r\n            this.ix = $math.cos(middleAngle);\r\n            this.iy = $math.sin(middleAngle);\r\n            const shiftRadius = this.get(\"shiftRadius\", 0);\r\n            this.setRaw(\"dx\", this.ix * shiftRadius);\r\n            this.setRaw(\"dy\", this.iy * shiftRadius);\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Slice, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slice\"\r\n});\r\nObject.defineProperty(Slice, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Slice.className])\r\n});\r\n//# sourceMappingURL=Slice.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n                const patterns = this.get(\"patterns\");\r\n                if (patterns) {\r\n                    patterns.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else if (change.type === \"swap\") {\r\n                const a = change.a;\r\n                const b = change.b;\r\n                const aIndex = this.series.indexOf(a);\r\n                const bIndex = this.series.indexOf(b);\r\n                children.moveValue(a, bIndex);\r\n                children.moveValue(b, aIndex);\r\n                this.series.each((series) => {\r\n                    this._processSeries(series);\r\n                    series.markDirtyValues();\r\n                });\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        series._handleRemoved();\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n//# sourceMappingURL=Tick.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const language = this._root.language;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         */\r\n        r(\"XYChart\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            panX: false,\r\n            panY: false,\r\n            wheelStep: 0.25,\r\n            arrangeTooltips: true,\r\n            pinchZoomX: false,\r\n            pinchZoomY: false\r\n        });\r\n        r(\"XYSeries\").setAll({\r\n            legendLabelText: \"{name}\"\r\n        });\r\n        r(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: XYChartScrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingRight: 0,\r\n            colors: ColorSet.new(this._root, {\r\n                saturation: 0\r\n            })\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusBL: 0,\r\n            fillOpacity: 0,\r\n            focusable: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n            cornerRadiusBL: 40,\r\n            cornerRadiusBR: 40,\r\n            cornerRadiusTL: 40,\r\n            cornerRadiusTR: 40\r\n        });\r\n        r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true\r\n        });\r\n        r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true,\r\n            minGridDistance: 5\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5,\r\n            centerY: p100,\r\n            minPosition: 0.01,\r\n            maxPosition: 0.99,\r\n            fontSize: \"0.8em\"\r\n        });\r\n        r(\"AxisLabel\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"AxisLabel\", [\"x\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"minor\"]).setAll({\r\n            fontSize: \"0.6em\"\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Cursor\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYCursor\").setAll({\r\n            behavior: \"none\",\r\n            layer: 30,\r\n            exportable: false,\r\n            snapToSeriesBy: \"xy\",\r\n            moveThreshold: 1\r\n        });\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.15,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Axes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Axis\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            minZoomCount: 1,\r\n            maxZoomCount: Infinity,\r\n            maxZoomFactor: 1000,\r\n            maxDeviation: 0.1,\r\n            snapTooltip: true,\r\n            tooltipLocation: 0.5,\r\n            panX: true,\r\n            panY: true,\r\n            zoomX: true,\r\n            zoomY: true,\r\n            fixAxisSize: true\r\n        });\r\n        r(\"AxisLabel\").setAll({\r\n            location: 0.5,\r\n            multiLocation: 0,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            paddingTop: 3,\r\n            paddingBottom: 3,\r\n            paddingLeft: 5,\r\n            paddingRight: 5\r\n        });\r\n        // The following is deprecated following text measuring updates in 5.0.5\r\n        // r(\"AxisLabel\", [\"y\"]).setAll({\r\n        // \ttextAlign: \"right\"\r\n        // });\r\n        // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n        // \ttextAlign: \"left\"\r\n        // });\r\n        r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n            layer: 30\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n            crisp: true\r\n        });\r\n        {\r\n            const rule = r(\"AxisRenderer\");\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"AxisRendererX\").setAll({\r\n            minGridDistance: 120,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            width: p100\r\n        });\r\n        r(\"AxisRendererY\").setAll({\r\n            minGridDistance: 40,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            height: p100\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n        }\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        {\r\n            const rule = r(\"Grid\");\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.15,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"minor\"]);\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.07,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Grid\", [\"base\"]).setAll({\r\n            strokeOpacity: 0.3\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n            rule.setAll({\r\n                visible: false,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                fillOpacity: 0.05,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n            isMeasured: true\r\n        });\r\n        // hides all elements of series axis range\r\n        r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n            visible: false,\r\n            isMeasured: true\r\n        });\r\n        r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"AxisTick\");\r\n            rule.setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                strokeOpacity: 1,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                visible: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"CategoryAxis\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            fillRule: (dataItem, index) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        axisFill.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        axisFill.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const gridIntervals = [\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ];\r\n        const dateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_hour\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const periodChangeDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_day\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const tooltipDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n            \"second\": language.translate(\"_date_second_full\"),\r\n            \"minute\": language.translate(\"_date_minute_full\"),\r\n            \"hour\": language.translate(\"_date_hour_full\"),\r\n            \"day\": language.translate(\"_date_day_full\"),\r\n            \"week\": language.translate(\"_date_week_full\"),\r\n            \"month\": language.translate(\"_date_month_full\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        r(\"CategoryDateAxis\").setAll({\r\n            markUnitChange: true,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n        });\r\n        r(\"DateAxis\").setAll({\r\n            maxZoomFactor: null,\r\n            strictMinMax: true,\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            markUnitChange: true,\r\n            groupData: false,\r\n            groupCount: 500,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n            tooltipDateFormats: tooltipDateFormats,\r\n            groupIntervals: [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"year\", count: 1 }\r\n            ],\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const endValue = dataItem.get(\"endValue\");\r\n                    const intervalDuration = axis.intervalDuration();\r\n                    const baseInterval = axis.getPrivate(\"baseInterval\");\r\n                    const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                    let min = axis.getPrivate(\"min\", 0);\r\n                    min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value != null && endValue != null) {\r\n                        const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                        if (val == Math.round(val)) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"GaplessDateAxis\").setAll({\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const index = dataItem.get(\"index\");\r\n                    let visible = false;\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        visible = true;\r\n                    }\r\n                    axisFill.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        });\r\n        r(\"ValueAxis\").setAll({\r\n            baseValue: 0,\r\n            logarithmic: false,\r\n            strictMinMax: false,\r\n            autoZoom: true,\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const step = axis.getPrivate(\"step\");\r\n                    if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                        if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"DurationAxis\").setAll({\r\n            baseUnit: \"second\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYSeries\").setAll({\r\n            maskBullets: true,\r\n            stackToNegative: true,\r\n            locationX: 0.5,\r\n            locationY: 0.5,\r\n            snapTooltip: false,\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\",\r\n            seriesTooltipTarget: \"series\"\r\n        });\r\n        r(\"BaseColumnSeries\").setAll({\r\n            adjustBulletPosition: true\r\n        });\r\n        r(\"ColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(70),\r\n            height: percent(70),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"LineSeries\").setAll({\r\n            connect: true,\r\n            autoGapCount: 1.1,\r\n            stackToNegative: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n            position: \"absolute\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n            visible: false,\r\n            fillOpacity: 0,\r\n            position: \"absolute\",\r\n            strokeWidth: 0,\r\n            strokeOpacity: 0,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, h / 2);\r\n                    display.lineTo(w, h / 2);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"SmoothedXYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedXLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"Candlestick\").setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(50),\r\n            height: percent(50),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"OHLC\").setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"CandlestickSeries\").setAll({\r\n            lowValueXGrouped: \"low\",\r\n            lowValueYGrouped: \"low\",\r\n            highValueXGrouped: \"high\",\r\n            highValueYGrouped: \"high\",\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\"\r\n        });\r\n        // These rules can be used for regular columns, too\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // Hollow\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // AXIS RANGE GRIP\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                strokeWidth: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(2, 0.5);\r\n                    display.lineTo(2, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"rangegrip\"]).setAll({\r\n            draggable: true,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n            centerY: p100\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map",";\r\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.topPlotContainer.children.push(Button.new(this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this._disposers.push(this.xAxes);\r\n        this._disposers.push(this.yAxes);\r\n        const root = this._root;\r\n        let verticalLayout = this._root.verticalLayout;\r\n        const zoomOutButton = this.zoomOutButton;\r\n        zoomOutButton.events.on(\"click\", () => {\r\n            this.zoomOut();\r\n        });\r\n        zoomOutButton.hide(0);\r\n        zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n        this.chartContainer.set(\"layout\", verticalLayout);\r\n        const plotContainer = this.plotContainer;\r\n        plotContainer.children.push(this.seriesContainer);\r\n        this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n        this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n        plotContainer.children.push(this.topGridContainer);\r\n        plotContainer.children.push(this.bulletsContainer);\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        plotContainer.set(\"interactive\", true);\r\n        plotContainer.set(\"interactiveChildren\", false);\r\n        plotContainer.set(\"background\", Rectangle.new(root, {\r\n            themeTags: [\"plotbackground\", \"xy\", \"background\"]\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handlePlotDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handlePlotUp(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handlePlotMove(event);\r\n        }));\r\n        this._maskGrid();\r\n        this._setUpTouch();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.plotContainer._display.cancelTouch) {\r\n            this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    _maskGrid() {\r\n        this.gridContainer.set(\"maskContent\", true);\r\n        this.topGridContainer.set(\"maskContent\", true);\r\n    }\r\n    _removeSeries(series) {\r\n        series._unstack();\r\n        if (series._posXDp) {\r\n            series._posXDp.dispose();\r\n        }\r\n        if (series._posYDp) {\r\n            series._posYDp.dispose();\r\n        }\r\n        series.set(\"baseAxis\", undefined);\r\n        const xAxis = series.get(\"xAxis\");\r\n        if (xAxis) {\r\n            $array.remove(xAxis.series, series);\r\n            xAxis.markDirtyExtremes();\r\n        }\r\n        const yAxis = series.get(\"yAxis\");\r\n        if (yAxis) {\r\n            $array.remove(yAxis.series, series);\r\n            yAxis.markDirtyExtremes();\r\n        }\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (snapToSeries) {\r\n                $array.remove(snapToSeries, series);\r\n            }\r\n        }\r\n        super._removeSeries(series);\r\n    }\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    handleWheel(event) {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        const wheelEvent = event.originalEvent;\r\n        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n        // some page element is over the chart.\r\n        let prevent = false;\r\n        if ($utils.isLocalEvent(wheelEvent, this)) {\r\n            prevent = true;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const plotPoint = plotContainer.toLocal(event.point);\r\n        const wheelStep = this.get(\"wheelStep\", 0.2);\r\n        const shiftY = wheelEvent.deltaY / 100;\r\n        const shiftX = wheelEvent.deltaX / 100;\r\n        const wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n        const wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n        if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start - delta;\r\n                    let newEnd = end - delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if (prevent) {\r\n            wheelEvent.preventDefault();\r\n        }\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n            this._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\r\n                const wheelEvent = event.originalEvent;\r\n                if ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\r\n                    this.handleWheel(event);\r\n                }\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _getWheelSign(axis) {\r\n        let sign = 1;\r\n        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n            sign = -1;\r\n        }\r\n        return sign;\r\n    }\r\n    _fixWheel(start, end) {\r\n        const diff = end - start;\r\n        if (start < 0) {\r\n            start = 0;\r\n            end = start + diff;\r\n        }\r\n        if (end > 1) {\r\n            end = 1;\r\n            start = end - diff;\r\n        }\r\n        return [start, end];\r\n    }\r\n    _handlePlotDown(event) {\r\n        const originalEvent = event.originalEvent;\r\n        if (originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const plotContainer = this.plotContainer;\r\n        let local = plotContainer.toLocal(event.point);\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const pointerId = originalEvent.pointerId;\r\n            if (pointerId) {\r\n                if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                    const xAxis = this.xAxes.getIndex(0);\r\n                    const yAxis = this.yAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        this._downStartX = xAxis.get(\"start\", 0);\r\n                        this._downEndX = xAxis.get(\"end\", 1);\r\n                    }\r\n                    if (yAxis) {\r\n                        this._downStartY = yAxis.get(\"start\", 0);\r\n                        this._downEndY = yAxis.get(\"end\", 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.get(\"panX\") || this.get(\"panY\")) {\r\n            if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                //this._downPoint = local;\r\n                this._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    this.xAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                if (panY) {\r\n                    this.yAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                const eventType = \"panstarted\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelAnimation(animation) {\r\n        if (animation) {\r\n            animation.events.on(\"stopped\", () => {\r\n                this._dispatchWheelAnimation();\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchWheelAnimation();\r\n        }\r\n    }\r\n    _dispatchWheelAnimation() {\r\n        const eventType = \"wheelended\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    _handlePlotUp(event) {\r\n        const downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                if (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\r\n                    const eventType = \"pancancelled\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                    }\r\n                }\r\n                const eventType = \"panended\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n        // TODO: handle multitouch\r\n        this._downPoint = undefined;\r\n        this.xAxes.each((xAxis) => {\r\n            xAxis._isPanning = false;\r\n        });\r\n        this.yAxes.each((yAxis) => {\r\n            yAxis._isPanning = false;\r\n        });\r\n    }\r\n    _handlePlotMove(event) {\r\n        const plotContainer = this.plotContainer;\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event.originalEvent;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n            let local = plotContainer.toLocal(event.point);\r\n            const panX = this.get(\"panX\");\r\n            const panY = this.get(\"panY\");\r\n            if (panX) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.disableType(\"rangechanged\");\r\n                }\r\n                this.xAxes.each((axis) => {\r\n                    if (axis.get(\"panX\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaX *= -1;\r\n                        }\r\n                        let start = panStart + deltaX;\r\n                        let end = panEnd + deltaX;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n            if (panY) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.disableType(\"rangechanged\");\r\n                }\r\n                this.yAxes.each((axis) => {\r\n                    if (axis.get(\"panY\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaY *= -1;\r\n                        }\r\n                        let start = panStart - deltaY;\r\n                        let end = panEnd - deltaY;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        const plotContainer = this.plotContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(plotContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const w = plotContainer.width();\r\n            const h = plotContainer.height();\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                movePoint0 = plotContainer.toLocal(movePoint0);\r\n                movePoint1 = plotContainer.toLocal(movePoint1);\r\n                downPoint0 = plotContainer.toLocal(downPoint0);\r\n                downPoint1 = plotContainer.toLocal(downPoint1);\r\n                if (this.get(\"pinchZoomX\")) {\r\n                    const downStartX = this._downStartX;\r\n                    const downEndX = this._downEndX;\r\n                    if (downStartX != null && downEndX != null) {\r\n                        if (downPoint0.x > downPoint1.x) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                        let downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                        let movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                        let movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartX * d + downPos0 - movePos0 * d;\r\n                        let e = downEndX * d + downPos1 - movePos1 * d;\r\n                        this.xAxes.each((xAxis) => {\r\n                            let sa = xAxis.fixPosition(s);\r\n                            let ea = xAxis.fixPosition(e);\r\n                            xAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n                if (this.get(\"pinchZoomY\")) {\r\n                    const downStartY = this._downStartY;\r\n                    const downEndY = this._downEndY;\r\n                    if (downStartY != null && downEndY != null) {\r\n                        if (downPoint0.y < downPoint1.y) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                        let downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                        let movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                        let movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartY * d + downPos0 - movePos0 * d;\r\n                        let e = downEndY * d + downPos1 - movePos1 * d;\r\n                        this.yAxes.each((yAxis) => {\r\n                            let sa = yAxis.fixPosition(s);\r\n                            let ea = yAxis.fixPosition(e);\r\n                            yAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleCursorPosition() {\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const cursorPoint = cursor.getPrivate(\"point\");\r\n            let snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (cursor._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            if (snapToSeries && cursorPoint) {\r\n                const snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\r\n                const dataItems = [];\r\n                $array.each(snapToSeries, (series) => {\r\n                    if (!series.isHidden() && !series.isHiding()) {\r\n                        if (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\r\n                            const startIndex = series.startIndex();\r\n                            const endIndex = series.endIndex();\r\n                            for (let i = startIndex; i < endIndex; i++) {\r\n                                const dataItem = series.dataItems[i];\r\n                                if (dataItem && !dataItem.isHidden()) {\r\n                                    dataItems.push(dataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                            if (tooltipDataItem) {\r\n                                dataItems.push(tooltipDataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                let minDistance = Infinity;\r\n                let closestItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    const point = dataItem.get(\"point\");\r\n                    if (point) {\r\n                        let distance = 0;\r\n                        if (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\r\n                            distance = Math.abs(cursorPoint.x - point.x);\r\n                        }\r\n                        else if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\r\n                            distance = Math.abs(cursorPoint.y - point.y);\r\n                        }\r\n                        else {\r\n                            distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closestItem = dataItem;\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(snapToSeries, (series) => {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                });\r\n                if (closestItem) {\r\n                    let series = closestItem.component;\r\n                    series.showDataItemTooltip(closestItem);\r\n                    series.setRaw(\"tooltipDataItem\", closestItem);\r\n                    const point = closestItem.get(\"point\");\r\n                    if (point) {\r\n                        // removing x and y to solve #72225\r\n                        cursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateCursor() {\r\n        let cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.updateCursor();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.plotContainer.children.push(cursor);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this.series.each((series) => {\r\n            this._colorize(series);\r\n        });\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this.isDirty(\"cursor\")) {\r\n            const previous = this._prevSettings.cursor;\r\n            const cursor = this.get(\"cursor\");\r\n            if (cursor !== previous) {\r\n                this._disposeProperty(\"cursor\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (cursor) {\r\n                    cursor._setChart(this);\r\n                    this._addCursor(cursor);\r\n                    this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\r\n                        this._handleCursorSelectEnd();\r\n                    }));\r\n                }\r\n                //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                this._prevSettings.cursor = cursor;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarX\")) {\r\n            const previous = this._prevSettings.scrollbarX;\r\n            const scrollbarX = this.get(\"scrollbarX\");\r\n            if (scrollbarX !== previous) {\r\n                this._disposeProperty(\"scrollbarX\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarX) {\r\n                    if (!scrollbarX.parent) {\r\n                        this.topAxesContainer.children.push(scrollbarX);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\r\n                        this.xAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarX.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.xAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarX = scrollbarX;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarY\")) {\r\n            const previous = this._prevSettings.scrollbarY;\r\n            const scrollbarY = this.get(\"scrollbarY\");\r\n            if (scrollbarY !== previous) {\r\n                this._disposeProperty(\"scrollbarY\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarY) {\r\n                    if (!scrollbarY.parent) {\r\n                        this.rightAxesContainer.children.push(scrollbarY);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\r\n                        this.yAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarY.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.yAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarY = scrollbarY;\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        const xAxis = series.get(\"xAxis\");\r\n        const yAxis = series.get(\"yAxis\");\r\n        $array.move(xAxis.series, series);\r\n        $array.move(yAxis.series, series);\r\n        series._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        series._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        if (!series.get(\"baseAxis\")) {\r\n            if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                series.set(\"baseAxis\", yAxis);\r\n            }\r\n            else {\r\n                series.set(\"baseAxis\", xAxis);\r\n            }\r\n        }\r\n        if (series.get(\"stacked\")) {\r\n            series._markDirtyKey(\"stacked\");\r\n            $array.each(series.dataItems, (dataItem) => {\r\n                dataItem.set(\"stackToItemY\", undefined);\r\n                dataItem.set(\"stackToItemX\", undefined);\r\n            });\r\n        }\r\n        series._markDirtyAxes();\r\n        yAxis.markDirtyExtremes();\r\n        xAxis.markDirtyExtremes();\r\n        xAxis._seriesAdded = true;\r\n        yAxis._seriesAdded = true;\r\n        this._colorize(series);\r\n    }\r\n    _colorize(series) {\r\n        const colorSet = this.get(\"colors\");\r\n        if (colorSet) {\r\n            if (series.get(\"fill\") == null) {\r\n                const color = colorSet.next();\r\n                series._setSoft(\"stroke\", color);\r\n                series._setSoft(\"fill\", color);\r\n            }\r\n        }\r\n        const patternSet = this.get(\"patterns\");\r\n        if (patternSet) {\r\n            if (series.get(\"fillPattern\") == null) {\r\n                const pattern = patternSet.next();\r\n                series._setSoft(\"fillPattern\", pattern);\r\n            }\r\n        }\r\n    }\r\n    _handleCursorSelectEnd() {\r\n        const cursor = this.get(\"cursor\");\r\n        const behavior = cursor.get(\"behavior\");\r\n        const downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n        const downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n        const positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\r\n        const positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\r\n        this.xAxes.each((axis) => {\r\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionX);\r\n                let position1 = axis.toAxisPosition(positionX);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionY);\r\n                let position1 = axis.toAxisPosition(positionY);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n    }\r\n    _handleScrollbar(axes, start, end, priority) {\r\n        axes.each((axis) => {\r\n            let axisStart = axis.fixPosition(start);\r\n            let axisEnd = axis.fixPosition(end);\r\n            let zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n            const updateScrollbar = \"updateScrollbar\";\r\n            axis.setPrivateRaw(updateScrollbar, false);\r\n            if (zoomAnimation) {\r\n                zoomAnimation.events.on(\"stopped\", () => {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                });\r\n            }\r\n            else {\r\n                axis.setPrivateRaw(updateScrollbar, true);\r\n            }\r\n        });\r\n    }\r\n    _processAxis(axes, container) {\r\n        return axes.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axis) => {\r\n                    this._removeAxis(axis);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                container.children.push(change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                container.children.setIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                container.children.insertIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxis(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                container.children.moveValue(change.value, change.newIndex);\r\n                change.value.processChart(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _removeAxis(axis) {\r\n        if (!axis.isDisposed()) {\r\n            const axisParent = axis.parent;\r\n            if (axisParent) {\r\n                axisParent.children.removeValue(axis);\r\n            }\r\n            const gridContainer = axis.gridContainer;\r\n            const gridParent = gridContainer.parent;\r\n            if (gridParent) {\r\n                gridParent.children.removeValue(gridContainer);\r\n            }\r\n            const topGridContainer = axis.topGridContainer;\r\n            const topGridParent = topGridContainer.parent;\r\n            if (topGridParent) {\r\n                topGridParent.children.removeValue(topGridContainer);\r\n            }\r\n        }\r\n    }\r\n    _updateChartLayout() {\r\n        const left = this.leftAxesContainer.width();\r\n        const right = this.rightAxesContainer.width();\r\n        const bottomAxesContainer = this.bottomAxesContainer;\r\n        bottomAxesContainer.set(\"paddingLeft\", left);\r\n        bottomAxesContainer.set(\"paddingRight\", right);\r\n        const topAxesContainer = this.topAxesContainer;\r\n        topAxesContainer.set(\"paddingLeft\", left);\r\n        topAxesContainer.set(\"paddingRight\", right);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(axis) {\r\n        var cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            this.addDisposer(axis.on(\"start\", () => {\r\n                this._updateCursor();\r\n            }));\r\n            this.addDisposer(axis.on(\"end\", () => {\r\n                this._updateCursor();\r\n            }));\r\n        }\r\n    }\r\n    _handleAxisSelection(axis, force) {\r\n        let start = axis.fixPosition(axis.get(\"start\", 0));\r\n        let end = axis.fixPosition(axis.get(\"end\", 1));\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n        }\r\n        if (this.xAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarX.setRaw(\"start\", start);\r\n                    scrollbarX.setRaw(\"end\", end);\r\n                    scrollbarX.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        else if (this.yAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarY.setRaw(\"start\", start);\r\n                    scrollbarY.setRaw(\"end\", end);\r\n                    scrollbarY.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _handleZoomOut() {\r\n        let zoomOutButton = this.zoomOutButton;\r\n        if (zoomOutButton && zoomOutButton.parent) {\r\n            let visible = false;\r\n            this.xAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            this.yAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            if (visible) {\r\n                if (zoomOutButton.isHidden()) {\r\n                    zoomOutButton.show();\r\n                }\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    inPlot(point) {\r\n        const plotContainer = this.plotContainer;\r\n        const otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n        const global = plotContainer.toGlobal(point);\r\n        if (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\r\n            return true;\r\n        }\r\n        if (otherCharts) {\r\n            for (let i = otherCharts.length - 1; i >= 0; i--) {\r\n                const chart = otherCharts[i];\r\n                if (chart != this) {\r\n                    const chartPlotContainer = chart.plotContainer;\r\n                    const documentPoint = this._root.rootPointToDocument(global);\r\n                    const chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                    const local = chartPlotContainer.toLocal(chartRoot);\r\n                    if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    arrangeTooltips() {\r\n        const plotContainer = this.plotContainer;\r\n        const w = plotContainer.width();\r\n        const h = plotContainer.height();\r\n        let hh = this.height();\r\n        const bounds = this._root.tooltipContainer.get(\"layerMargin\");\r\n        if (bounds) {\r\n            if (bounds.bottom > hh) {\r\n                hh = bounds.bottom;\r\n            }\r\n        }\r\n        let plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n        let plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n        const tooltips = [];\r\n        let sum = 0;\r\n        let minDistance = Infinity;\r\n        let movePoint = this._movePoint;\r\n        let maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n        let maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n        let closest;\r\n        let closestPoint;\r\n        if ($type.isNumber(maxTooltipDistance)) {\r\n            this.series.each((series) => {\r\n                if (!series.isHidden()) {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            let distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                            if (maxTooltipDistanceBy == \"x\") {\r\n                                distance = Math.abs(movePoint.x - point.x);\r\n                            }\r\n                            else if (maxTooltipDistanceBy == \"y\") {\r\n                                distance = Math.abs(movePoint.y - point.y);\r\n                            }\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closest = series;\r\n                                closestPoint = point;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const tooltipSeries = [];\r\n        this.series.each((series) => {\r\n            const tooltip = series.get(\"tooltip\");\r\n            if (tooltip && !tooltip.get(\"forceHidden\")) {\r\n                let hidden = false;\r\n                let point = tooltip.get(\"pointTo\");\r\n                if (point) {\r\n                    if (maxTooltipDistance >= 0) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point && closestPoint) {\r\n                            if (series != closest) {\r\n                                let distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\r\n                                if (maxTooltipDistanceBy == \"x\") {\r\n                                    distance = Math.abs(closestPoint.x - point.x);\r\n                                }\r\n                                else if (maxTooltipDistanceBy == \"y\") {\r\n                                    distance = Math.abs(closestPoint.y - point.y);\r\n                                }\r\n                                if (distance > maxTooltipDistance) {\r\n                                    hidden = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (maxTooltipDistance == -1) {\r\n                        if (series != closest) {\r\n                            hidden = true;\r\n                        }\r\n                    }\r\n                    if (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                        hidden = true;\r\n                    }\r\n                    else {\r\n                        if (!hidden) {\r\n                            sum += point.y;\r\n                        }\r\n                    }\r\n                    if (hidden || series.isHidden() || series.isHiding()) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show();\r\n                        tooltips.push(tooltip);\r\n                        tooltipSeries.push(series);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n        if (this.get(\"arrangeTooltips\")) {\r\n            let totalTooltipH = 0;\r\n            let tooltipCount = 0;\r\n            const tooltipContainer = this._root.tooltipContainer;\r\n            const count = tooltips.length;\r\n            const average = sum / count;\r\n            if (average > h / 2 + plotT.y) {\r\n                tooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y));\r\n                let prevY = plotB.y;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    tooltipCount++;\r\n                    totalTooltipH += height;\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    prevY = Math.min(prevY - height, tooltip._fy - height);\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                });\r\n                if (prevY < 0) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = prevY;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        tooltipCount++;\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - prevY;\r\n                            let bottom = bounds.bottom - prevY;\r\n                            if (top < prevBottom) {\r\n                                top = prevBottom;\r\n                                bottom = top + tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                tooltips.reverse();\r\n                tooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y));\r\n                let prevY = 0;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    tooltipCount++;\r\n                    let height = tooltip.height();\r\n                    totalTooltipH += height;\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) });\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                    prevY = Math.max(prevY + height, tooltip._fy + height);\r\n                });\r\n                if (prevY > hh) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = hh;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        tooltipCount++;\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - (hh - prevY);\r\n                            let bottom = bounds.bottom - (hh - prevY);\r\n                            if (bottom > prevBottom) {\r\n                                bottom = prevBottom;\r\n                                top = bottom - tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (totalTooltipH == 0 && tooltipCount > 0) {\r\n                this._disposers.push(this.root.events.once(\"frameended\", () => {\r\n                    this.arrangeTooltips();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.plotContainer.toLocal(point);\r\n    }\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    zoomOut() {\r\n        this.xAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        // Explicitly disposing cursor to avoid memory leak of cursor adding\r\n        // keyboard events after parent chart has been disposed\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(XYChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYChart\"\r\n});\r\nObject.defineProperty(XYChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([XYChart.className])\r\n});\r\n//# sourceMappingURL=XYChart.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nexport class Grid extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Grid, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Grid\"\r\n});\r\nObject.defineProperty(Grid, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Grid.className])\r\n});\r\n//# sourceMappingURL=Grid.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nexport class XYCursor extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_alwaysShow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Graphics.new(this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n        super._afterNew();\r\n        this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n        this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n        this._drawLines();\r\n        this.setPrivateRaw(\"visible\", false);\r\n        this._disposers.push(this.setTimeout(() => {\r\n            this.setPrivate(\"visible\", true);\r\n        }, 500));\r\n        this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\r\n            this._handleXLine();\r\n        }));\r\n        this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\r\n            this._handleYLine();\r\n        }));\r\n        this._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\r\n        this._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                this._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\r\n            }));\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n        }\r\n    }\r\n    _handleXLine() {\r\n        let x = this.lineX.x();\r\n        let visible = true;\r\n        if (x < 0 || x > this.width()) {\r\n            visible = false;\r\n        }\r\n        this.lineX.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleYLine() {\r\n        let y = this.lineY.y();\r\n        let visible = true;\r\n        if (y < 0 || y > this.height()) {\r\n            visible = false;\r\n        }\r\n        this.lineY.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleLineMove(key, ctrlKey) {\r\n        let dir = \"\";\r\n        const chart = this.chart;\r\n        let axis;\r\n        if (chart && chart.xAxes.length) {\r\n            if (this._root.focused(this.lineX)) {\r\n                dir = \"positionX\";\r\n                axis = chart.xAxes.getIndex(0);\r\n            }\r\n            else if (this._root.focused(this.lineY)) {\r\n                axis = chart.yAxes.getIndex(0);\r\n                dir = \"positionY\";\r\n            }\r\n            let m = 1;\r\n            if (ctrlKey) {\r\n                m = 5;\r\n            }\r\n            if (axis) {\r\n                let inversed = axis.get(\"renderer\").get(\"inversed\", false);\r\n                let step;\r\n                if (key == \"ArrowRight\" || key == \"ArrowDown\") {\r\n                    step = 1;\r\n                }\r\n                else if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\r\n                    step = -1;\r\n                }\r\n                else if (key == \"Tab\") {\r\n                    step = 0;\r\n                }\r\n                if (step != null) {\r\n                    if (inversed) {\r\n                        step *= -1;\r\n                    }\r\n                    this.set(dir, axis.nextPosition(step * m));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleLineFocus() {\r\n        this._alwaysShow = this.get(\"alwaysShow\", false);\r\n        this.setAll({\r\n            positionX: this.getPrivate(\"positionX\", 0),\r\n            positionY: this.getPrivate(\"positionY\", 0),\r\n            alwaysShow: true\r\n        });\r\n        this._handleLineMove(\"Tab\");\r\n    }\r\n    _handleLineBlur() {\r\n        if (this.lineX.isFocus() || this.lineY.isFocus()) {\r\n            this.setAll({\r\n                positionX: undefined,\r\n                positionY: undefined,\r\n                alwaysShow: this._alwaysShow\r\n            });\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"xAxis\")) {\r\n            this._tooltipX = false;\r\n            const xAxis = this.get(\"xAxis\");\r\n            if (xAxis) {\r\n                const tooltip = xAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipX = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateXLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"yAxis\")) {\r\n            this._tooltipY = false;\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis) {\r\n                const tooltip = yAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipY = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateYLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleSyncWith() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const syncWith = this.get(\"syncWith\");\r\n            const otherCharts = [];\r\n            if (syncWith) {\r\n                $array.each(syncWith, (cursor) => {\r\n                    const chart = cursor.chart;\r\n                    if (chart) {\r\n                        otherCharts.push(chart);\r\n                    }\r\n                });\r\n            }\r\n            chart._otherCharts = otherCharts;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._handleSyncWith();\r\n        if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n            const positionX = this.get(\"positionX\");\r\n            const positionY = this.get(\"positionY\");\r\n            if (positionX == null && positionY == null) {\r\n                this.hide(0);\r\n            }\r\n            else {\r\n                this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                this.handleMove();\r\n            }\r\n        }\r\n    }\r\n    _updateXLine(tooltip) {\r\n        let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\r\n        if (this._toX != x) {\r\n            this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toX = x;\r\n        }\r\n    }\r\n    _updateYLine(tooltip) {\r\n        let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\r\n        if (this._toY != y) {\r\n            this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toY = y;\r\n        }\r\n    }\r\n    _drawLines() {\r\n        this.lineX.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, this.height());\r\n        });\r\n        this.lineY.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(this.width(), 0);\r\n        });\r\n    }\r\n    updateCursor() {\r\n        if (this.get(\"alwaysShow\")) {\r\n            this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n        }\r\n        this.handleMove();\r\n    }\r\n    _setChart(chart) {\r\n        this.chart = chart;\r\n        this._handleSyncWith();\r\n        const plotContainer = chart.plotContainer;\r\n        this.events.on(\"boundschanged\", () => {\r\n            this._disposers.push(this.setTimeout(() => {\r\n                this.updateCursor();\r\n            }, 50));\r\n        });\r\n        //this._display.interactive = true;\r\n        if ($utils.supports(\"touchevents\")) {\r\n            this._disposers.push(plotContainer.events.on(\"click\", (event) => {\r\n                if ($utils.isTouchEvent(event.originalEvent)) {\r\n                    this._handleMove(event);\r\n                }\r\n            }));\r\n            this._setUpTouch();\r\n        }\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleCursorDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleCursorUp(event);\r\n            if (!event.native && !this.isHidden()) {\r\n                this._handleMove(event);\r\n            }\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            if (!this.get(\"syncWith\")) {\r\n                if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\r\n                    // Ignore mouse movement if it originates on outside element and\r\n                    // we're not dragging.\r\n                    return;\r\n                }\r\n            }\r\n            this._handleMove(event);\r\n            if (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\r\n                this._handleLineBlur();\r\n                this._lastPoint2 = event.point;\r\n            }\r\n        }));\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this.selection);\r\n        }\r\n    }\r\n    _inPlot(point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.inPlot(point);\r\n        }\r\n        return false;\r\n    }\r\n    _handleCursorDown(event) {\r\n        if (event.originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const rootPoint = event.point;\r\n        let local = this._display.toLocal(rootPoint);\r\n        const chart = this.chart;\r\n        this.selection.set(\"draw\", () => { });\r\n        if (chart && this._inPlot(local)) {\r\n            this._downPoint = local;\r\n            if (this.get(\"behavior\") != \"none\") {\r\n                this.selection.show();\r\n                const type = \"selectstarted\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n            let positionX = this._getPosition(local).x;\r\n            let positionY = this._getPosition(local).y;\r\n            this.setPrivate(\"downPositionX\", positionX);\r\n            this.setPrivate(\"downPositionY\", positionY);\r\n        }\r\n    }\r\n    _handleCursorUp(event) {\r\n        // TODO: handle multitouch\r\n        if (this._downPoint) {\r\n            const behavior = this.get(\"behavior\", \"none\");\r\n            if (behavior != \"none\") {\r\n                if (behavior.charAt(0) === \"z\") {\r\n                    this.selection.hide();\r\n                }\r\n                const rootPoint = event.point;\r\n                let local = this._display.toLocal(rootPoint);\r\n                const downPoint = this._downPoint;\r\n                const moveThreshold = this.get(\"moveThreshold\", 1);\r\n                if (local && downPoint) {\r\n                    let dispatch = false;\r\n                    if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (dispatch) {\r\n                        const type = \"selectended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                    else {\r\n                        const type = \"selectcancelled\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._downPoint = undefined;\r\n    }\r\n    _handleMove(event) {\r\n        if (this.getPrivate(\"visible\")) {\r\n            const chart = this.chart;\r\n            if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                this.set(\"forceHidden\", true);\r\n                return;\r\n            }\r\n            else {\r\n                this.set(\"forceHidden\", false);\r\n            }\r\n            // TODO: handle multitouch\r\n            const rootPoint = event.point;\r\n            const lastPoint = this._lastPoint;\r\n            if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                return;\r\n            }\r\n            this._lastPoint = rootPoint;\r\n            this.setPrivate(\"lastPoint\", rootPoint);\r\n            this.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\r\n        }\r\n    }\r\n    _getPosition(point) {\r\n        return { x: point.x / this.width(), y: point.y / this.height() };\r\n    }\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    handleMove(point, skipEvent, originalEvent) {\r\n        if (!point) {\r\n            point = this._movePoint;\r\n        }\r\n        const alwaysShow = this.get(\"alwaysShow\");\r\n        if (!point) {\r\n            this.hide(0);\r\n            return;\r\n        }\r\n        this._movePoint = point;\r\n        let local = this._display.toLocal(point);\r\n        let chart = this.chart;\r\n        if (chart && (this._inPlot(local) || this._downPoint)) {\r\n            chart._movePoint = point;\r\n            if (this.isHidden()) {\r\n                this.show();\r\n                const behavior = this.get(\"behavior\", \"\");\r\n                if (behavior.charAt(0) == \"z\") {\r\n                    this.selection.set(\"draw\", () => { });\r\n                }\r\n            }\r\n            let x = local.x;\r\n            let y = local.y;\r\n            let xyPos = this._getPosition(local);\r\n            this.setPrivate(\"point\", local);\r\n            let snapToSeries = this.get(\"snapToSeries\");\r\n            if (this._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            let userPositionX = this.get(\"positionX\");\r\n            let positionX = xyPos.x;\r\n            if ($type.isNumber(userPositionX)) {\r\n                positionX = userPositionX;\r\n            }\r\n            let userPositionY = this.get(\"positionY\");\r\n            let positionY = xyPos.y;\r\n            if ($type.isNumber(userPositionY)) {\r\n                positionY = userPositionY;\r\n            }\r\n            this.setPrivate(\"positionX\", positionX);\r\n            this.setPrivate(\"positionY\", positionY);\r\n            const xy = this._getPoint(positionX, positionY);\r\n            x = xy.x;\r\n            y = xy.y;\r\n            chart.xAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionX, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            chart.yAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionY, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            if (!skipEvent) {\r\n                chart._handleCursorPosition();\r\n                const type = \"cursormoved\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\r\n                }\r\n            }\r\n            this._updateLines(x, y);\r\n            chart.arrangeTooltips();\r\n        }\r\n        else if (!this._downPoint) {\r\n            if (!alwaysShow) {\r\n                this.hide(0);\r\n                const type = \"cursorhidden\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n        }\r\n        if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n            this._updateSelection(local);\r\n        }\r\n    }\r\n    _getPoint(positionX, positionY) {\r\n        return { x: this.width() * positionX, y: this.height() * positionY };\r\n    }\r\n    _updateLines(x, y) {\r\n        if (!this._tooltipX) {\r\n            this.lineX.set(\"x\", x);\r\n        }\r\n        if (!this._tooltipY) {\r\n            this.lineY.set(\"y\", y);\r\n        }\r\n        this._drawLines();\r\n    }\r\n    _updateSelection(point) {\r\n        const selection = this.selection;\r\n        const behavior = this.get(\"behavior\");\r\n        const w = this.width();\r\n        const h = this.height();\r\n        if (point.x < 0) {\r\n            point.x = 0;\r\n        }\r\n        if (point.x > w) {\r\n            point.x = w;\r\n        }\r\n        if (point.y < 0) {\r\n            point.y = 0;\r\n        }\r\n        if (point.y > h) {\r\n            point.y = h;\r\n        }\r\n        selection.set(\"draw\", (display) => {\r\n            const downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                    display.moveTo(downPoint.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, point.y);\r\n                    display.lineTo(point.x, point.y);\r\n                    display.lineTo(point.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, downPoint.y);\r\n                }\r\n                else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                    display.moveTo(downPoint.x, 0);\r\n                    display.lineTo(downPoint.x, h);\r\n                    display.lineTo(point.x, h);\r\n                    display.lineTo(point.x, 0);\r\n                    display.lineTo(downPoint.x, 0);\r\n                }\r\n                else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                    display.moveTo(0, downPoint.y);\r\n                    display.lineTo(w, downPoint.y);\r\n                    display.lineTo(w, point.y);\r\n                    display.lineTo(0, point.y);\r\n                    display.lineTo(0, downPoint.y);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _onHide() {\r\n        if (this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.series.each((series) => {\r\n                    series.handleCursorHide();\r\n                });\r\n            }\r\n        }\r\n        super._onHide();\r\n    }\r\n    _onShow() {\r\n        if (!this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n            }\r\n        }\r\n        super._onShow();\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this.selection.dispose();\r\n    }\r\n}\r\nObject.defineProperty(XYCursor, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYCursor\"\r\n});\r\nObject.defineProperty(XYCursor, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([XYCursor.className])\r\n});\r\n//# sourceMappingURL=XYCursor.js.map","import { __awaiter } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nexport class XYSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(this, undefined, {})\r\n        });\r\n        Object.defineProperty(this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posXDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posYDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n        this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n        this._setRawDefault(\"vcx\", 1);\r\n        this._setRawDefault(\"vcy\", 1);\r\n        // this can't go to themes, as data might be parsed before theme\r\n        this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n        this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n        this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n        this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n        this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n        this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n        this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n        this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n        this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n        this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n        this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n        this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n        super._afterNew();\r\n        this.set(\"maskContent\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axisRange) => {\r\n                    this._removeAxisRange(axisRange);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxisRange(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n        this.onPrivate(\"startIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this.onPrivate(\"endIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this._makeFieldNames();\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        const container = Container.new(this._root, {});\r\n        axisRange.container = container;\r\n        this.children.push(container);\r\n        axisRange.series = this;\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        axisDataItem.setRaw(\"isRange\", true);\r\n        const axis = axisDataItem.component;\r\n        if (axis) {\r\n            axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n            const bullet = axisDataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n            const axisFill = axisDataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                container.set(\"mask\", axisFill);\r\n            }\r\n            axis._seriesAxisRanges.push(axisDataItem);\r\n        }\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        $object.each(this._dataSets, (_key, dataItems) => {\r\n            $array.each(dataItems, (dataItem) => {\r\n                dataItem.dispose();\r\n            });\r\n            dataItems.length = 0;\r\n        });\r\n    }\r\n    _removeAxisRange(axisRange) {\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        const axis = axisDataItem.component;\r\n        axisDataItem.dispose();\r\n        $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n        const container = axisRange.container;\r\n        if (container) {\r\n            container.dispose();\r\n        }\r\n    }\r\n    _updateFields() {\r\n        super._updateFields();\r\n        this._valueXFields = [];\r\n        this._valueYFields = [];\r\n        this._valueXShowFields = [];\r\n        this._valueYShowFields = [];\r\n        this.__valueXShowFields = [];\r\n        this.__valueYShowFields = [];\r\n        if (this.valueXFields) {\r\n            $array.each(this.valueXFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueXFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueXShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueXShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueXShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.valueYFields) {\r\n            $array.each(this.valueYFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueYFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueYShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueYShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueYShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._bullets = {};\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n        $array.removeFirst(this.get(\"xAxis\").series, this);\r\n        $array.removeFirst(this.get(\"yAxis\").series, this);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _min(key, value) {\r\n        let newValue = min(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _max(key, value) {\r\n        let newValue = max(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (!xAxis.inited || !yAxis.inited) {\r\n            return false;\r\n        }\r\n        const minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n        if (minBulletDistance > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let count = endIndex - startIndex;\r\n            if (xAxis == baseAxis) {\r\n                if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (yAxis == baseAxis) {\r\n                if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _makeFieldNames() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xName = xAxis.getPrivate(\"name\");\r\n        const xCapName = $utils.capitalizeFirst(xName);\r\n        const yName = yAxis.getPrivate(\"name\");\r\n        const yCapName = $utils.capitalizeFirst(yName);\r\n        const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const open = \"open\";\r\n        const low = \"low\";\r\n        const high = \"high\";\r\n        const show = \"Show\";\r\n        if (xAxis.className === \"ValueAxis\") {\r\n            this._xField = this.get((xName + xLetter + show));\r\n            this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n            this._xLowField = this.get((low + xCapName + xLetter + show));\r\n            this._xHighField = this.get((high + xCapName + xLetter + show));\r\n        }\r\n        else {\r\n            this._xField = (xName + xLetter);\r\n            this._xOpenField = (open + xCapName + xLetter);\r\n            this._xLowField = (low + xCapName + xLetter);\r\n            this._xHighField = (high + xCapName + xLetter);\r\n        }\r\n        if (yAxis.className === \"ValueAxis\") {\r\n            this._yField = this.get((yName + yLetter + show));\r\n            this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n            this._yLowField = this.get((low + yCapName + yLetter + show));\r\n            this._yHighField = this.get((high + yCapName + yLetter + show));\r\n        }\r\n        else {\r\n            this._yField = (yName + yLetter);\r\n            this._yOpenField = (open + yCapName + yLetter);\r\n            this._yLowField = (low + yCapName + yLetter);\r\n            this._yHighField = (high + yCapName + yLetter);\r\n        }\r\n    }\r\n    _fixVC() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const hiddenState = this.states.lookup(\"hidden\");\r\n        const sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n        if (hiddenState) {\r\n            let value = 0;\r\n            if (sequencedInterpolation) {\r\n                value = 0.999999999999; // makes animate, good for stacked\r\n            }\r\n            if (xAxis === baseAxis) {\r\n                hiddenState.set(\"vcy\", value);\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n            else {\r\n                hiddenState.set(\"vcy\", value);\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n        if (this.isDirty(\"maskBullets\")) {\r\n            this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n        }\r\n    }\r\n    _fixPosition() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n        this.bulletsContainer.set(\"y\", this.y());\r\n        this.bulletsContainer.set(\"x\", this.x());\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._bullets = {};\r\n        if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\r\n            this._updateFields();\r\n            this._makeFieldNames();\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        this.set(\"width\", this.get(\"xAxis\").width());\r\n        this.set(\"height\", this.get(\"yAxis\").height());\r\n        this._handleMaskBullets();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const tooltipPositionX = this.get(\"tooltipPositionX\");\r\n        let tooltipFieldX;\r\n        switch (tooltipPositionX) {\r\n            case \"open\":\r\n                tooltipFieldX = this._xOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldX = this._xLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldX = this._xHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldX = this._xField;\r\n        }\r\n        this._tooltipFieldX = tooltipFieldX;\r\n        const tooltipPositionY = this.get(\"tooltipPositionY\");\r\n        let tooltipFieldY;\r\n        switch (tooltipPositionY) {\r\n            case \"open\":\r\n                tooltipFieldY = this._yOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldY = this._yLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldY = this._yHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldY = this._yField;\r\n        }\r\n        this._tooltipFieldY = tooltipFieldY;\r\n        if (this.isDirty(\"baseAxis\")) {\r\n            this._fixVC();\r\n        }\r\n        this._fixPosition();\r\n        const stacked = this.get(\"stacked\");\r\n        if (this.isDirty(\"stacked\")) {\r\n            if (stacked) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                }\r\n                else {\r\n                    this._stack();\r\n                }\r\n            }\r\n            else {\r\n                this._unstack();\r\n            }\r\n        }\r\n        if (this._valuesDirty && !this._dataProcessed) {\r\n            this._dataProcessed = true;\r\n            if (stacked) {\r\n                this._stack();\r\n            }\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                $array.each(this._valueXShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedXValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minX\", value);\r\n                        this._max(\"maxX\", value);\r\n                    }\r\n                });\r\n                $array.each(this._valueYShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedYValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minY\", value);\r\n                        this._max(\"maxY\", value);\r\n                    }\r\n                });\r\n                xAxis.processSeriesDataItem(dataItem, this._valueXFields);\r\n                yAxis.processSeriesDataItem(dataItem, this._valueYFields);\r\n            });\r\n            xAxis._seriesValuesDirty = true;\r\n            yAxis._seriesValuesDirty = true;\r\n            if (!this.get(\"ignoreMinMax\")) {\r\n                if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                    xAxis.markDirtyExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                    yAxis.markDirtyExtremes();\r\n                }\r\n            }\r\n            this._markStakedDirtyStack();\r\n            //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n            if (!this.get(\"tooltipDataItem\")) {\r\n                this.updateLegendValue(undefined);\r\n            }\r\n        }\r\n        if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n            this._markStakedDirtyStack();\r\n        }\r\n        if (!this._dataGrouped) {\r\n            xAxis._groupSeriesData(this);\r\n            yAxis._groupSeriesData(this);\r\n            this._dataGrouped = true;\r\n        }\r\n        if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n            if (minBulletDistance > 0 && baseAxis) {\r\n                if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                    this._showBullets = true;\r\n                }\r\n                else {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                this._selectionProcessed = true;\r\n                const vcx = this.get(\"vcx\", 1);\r\n                const vcy = this.get(\"vcy\", 1);\r\n                const stacked = this.get(\"stacked\", false);\r\n                const outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    yAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    xAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    if (this.get(\"valueYShow\") !== \"valueYWorking\" || this.get(\"useSelectionExtremes\")) {\r\n                        const selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                        if (selectionMinY != null) {\r\n                            this.setPrivateRaw(\"minY\", selectionMinY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                        if (selectionMaxY != null) {\r\n                            this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    if (this.get(\"valueXShow\") !== \"valueXWorking\" || this.get(\"useSelectionExtremes\")) {\r\n                        const selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                        if (selectionMinX != null) {\r\n                            this.setPrivateRaw(\"minX\", selectionMinX);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                        if (selectionMaxX != null) {\r\n                            this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                            xAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                // this.updateLegendValue(undefined); flickers while panning\r\n            }\r\n        }\r\n    }\r\n    _makeRangeMask() {\r\n        if (this.axisRanges.length > 0) {\r\n            let mainContainerMask = this._mainContainerMask;\r\n            if (mainContainerMask == null) {\r\n                mainContainerMask = this.children.push(Graphics.new(this._root, {}));\r\n                this._mainContainerMask = mainContainerMask;\r\n                mainContainerMask.set(\"draw\", (display, target) => {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        const w = this._root.container.width();\r\n                        const h = this._root.container.height();\r\n                        display.moveTo(-w, -h);\r\n                        display.lineTo(-w, h * 2);\r\n                        display.lineTo(w * 2, h * 2);\r\n                        display.lineTo(w * 2, -h);\r\n                        display.lineTo(-w, -h);\r\n                        this.axisRanges.each((axisRange) => {\r\n                            const fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                            if (parent) {\r\n                                if (fill) {\r\n                                    let draw = fill.get(\"draw\");\r\n                                    if (draw) {\r\n                                        draw(display, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.mainContainer._display.mask = mainContainerMask._display;\r\n                });\r\n            }\r\n            mainContainerMask.markDirty();\r\n            mainContainerMask._markDirtyKey(\"fill\");\r\n        }\r\n        else {\r\n            this.mainContainer._display.mask = null;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        // save for performance\r\n        this._x = this.x();\r\n        this._y = this.y();\r\n        this._makeRangeMask();\r\n    }\r\n    _stack() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const seriesIndex = chart.series.indexOf(this);\r\n            this._couldStackTo = [];\r\n            if (seriesIndex > 0) {\r\n                let series;\r\n                for (let i = seriesIndex - 1; i >= 0; i--) {\r\n                    series = chart.series.getIndex(i);\r\n                    if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                        this._couldStackTo.push(series);\r\n                        if (!series.get(\"stacked\")) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._stackDataItems();\r\n        }\r\n    }\r\n    _unstack() {\r\n        $object.each(this._reallyStackedTo, (_key, value) => {\r\n            delete (value._stackedSeries[this.uid]);\r\n        });\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            dataItem.setRaw(\"stackToItemY\", undefined);\r\n            dataItem.setRaw(\"stackToItemX\", undefined);\r\n        });\r\n    }\r\n    _handleRemoved() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        if (xAxis) {\r\n            xAxis._handleSeriesRemoved();\r\n        }\r\n        const yAxis = this.get(\"yAxis\");\r\n        if (yAxis) {\r\n            yAxis._handleSeriesRemoved();\r\n        }\r\n    }\r\n    _stackDataItems() {\r\n        // this works only with the same number of data @todo: search by date/category?\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        let field;\r\n        let stackToItemKey;\r\n        if (baseAxis === xAxis) {\r\n            field = \"valueY\";\r\n            stackToItemKey = \"stackToItemY\";\r\n        }\r\n        else if (baseAxis === yAxis) {\r\n            field = \"valueX\";\r\n            stackToItemKey = \"stackToItemX\";\r\n        }\r\n        let len = this._couldStackTo.length;\r\n        let index = 0;\r\n        const stackToNegative = this.get(\"stackToNegative\");\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            for (let s = 0; s < len; s++) {\r\n                let stackToSeries = this._couldStackTo[s];\r\n                let stackToItem = stackToSeries.dataItems[index];\r\n                let value = dataItem.get(field);\r\n                if (stackToItem) {\r\n                    let stackValue = stackToItem.get(field);\r\n                    if (stackToNegative) {\r\n                        if ($type.isNumber(value)) {\r\n                            if ($type.isNumber(stackValue)) {\r\n                                if (s == len - 1) {\r\n                                    dataItem.setRaw(stackToItemKey, undefined);\r\n                                }\r\n                                if (value >= 0 && stackValue >= 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                                if (value < 0 && stackValue < 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                            dataItem.setRaw(stackToItemKey, stackToItem);\r\n                            this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                            stackToSeries._stackedSeries[this.uid] = this;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        });\r\n    }\r\n    processXSelectionDataItem(dataItem, vcx, stacked) {\r\n        $array.each(this.__valueXShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedXValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinX\", value);\r\n                this._max(\"selectionMaxX\", value * vcx);\r\n            }\r\n        });\r\n    }\r\n    processYSelectionDataItem(dataItem, vcy, stacked) {\r\n        $array.each(this.__valueYShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedYValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinY\", value);\r\n                this._max(\"selectionMaxY\", value * vcy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        this.updateLegendMarker();\r\n    }\r\n    _markDirtyAxes() {\r\n        this._axesDirty = true;\r\n        this.markDirty();\r\n    }\r\n    _markDataSetDirty() {\r\n        this._afterDataChange();\r\n        this._valuesDirty = true;\r\n        this._dataProcessed = false;\r\n        this._aggregatesCalculated = false;\r\n        this.markDirty();\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._axesDirty = false;\r\n        this._selectionProcessed = false;\r\n        this._stackDirty = false;\r\n        this._dataProcessed = false;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            let dataItem = sprite.dataItem;\r\n            let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            let xAxis = this.get(\"xAxis\");\r\n            let yAxis = this.get(\"yAxis\");\r\n            let exactLocationX = this.get(\"exactLocationX\", false);\r\n            let exactLocationY = this.get(\"exactLocationY\", false);\r\n            let positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1), exactLocationX);\r\n            let positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1), exactLocationY);\r\n            let point = this.getPoint(positionX, positionY);\r\n            let left = dataItem.get(\"left\", point.x);\r\n            let right = dataItem.get(\"right\", point.x);\r\n            let top = dataItem.get(\"top\", point.y);\r\n            let bottom = dataItem.get(\"bottom\", point.y);\r\n            let x = 0;\r\n            let y = 0;\r\n            let w = right - left;\r\n            let h = bottom - top;\r\n            if (this._shouldShowBullet(positionX, positionY)) {\r\n                sprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\r\n                let field = bullet.get(\"field\");\r\n                const baseAxis = this.get(\"baseAxis\");\r\n                const xAxis = this.get(\"xAxis\");\r\n                const yAxis = this.get(\"yAxis\");\r\n                if (field != undefined) {\r\n                    let realField;\r\n                    if (baseAxis == xAxis) {\r\n                        if (field == \"value\") {\r\n                            realField = this._yField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._yOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._yHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._yLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionY = yAxis.getDataItemPositionY(dataItem, realField, 0, this.get(\"vcy\", 1), exactLocationY);\r\n                            point = yAxis.get(\"renderer\").positionToPoint(positionY);\r\n                            y = point.y;\r\n                            x = left + w * locationX;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (field == \"value\") {\r\n                            realField = this._xField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._xOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._xHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._xLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionX = xAxis.getDataItemPositionX(dataItem, realField, 0, this.get(\"vcx\", 1), exactLocationX);\r\n                            point = xAxis.get(\"renderer\").positionToPoint(positionX);\r\n                            x = point.x;\r\n                            y = bottom - h * locationY;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    x = left + w * locationX;\r\n                    y = bottom - h * locationY;\r\n                }\r\n                const stacked = bullet.get(\"stacked\");\r\n                if (stacked) {\r\n                    const chart = this.chart;\r\n                    if (baseAxis == xAxis) {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let yo = y;\r\n                            y = previousBounds.top;\r\n                            if (stacked == \"down\") {\r\n                                y = previousBounds.bottom - bounds.top;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (yo < chart.plotContainer.height() / 2) {\r\n                                        y = previousBounds.bottom - bounds.top;\r\n                                    }\r\n                                    else {\r\n                                        y += bounds.bottom;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                y += bounds.bottom;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                    else {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let xo = x;\r\n                            x = previousBounds.right;\r\n                            if (stacked == \"down\") {\r\n                                x = previousBounds.left - bounds.right;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (xo < chart.plotContainer.width() / 2) {\r\n                                        x = previousBounds.left - bounds.right;\r\n                                    }\r\n                                    else {\r\n                                        x -= bounds.left;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                x -= bounds.left;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                }\r\n                if (sprite.isType(\"Label\")) {\r\n                    sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                    sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                }\r\n                sprite.setAll({ x, y });\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _shouldShowBullet(_positionX, _positionY) {\r\n        return this._showBullets;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setDataSet(id) {\r\n        if (this._dataSets[id]) {\r\n            this._handleDataSetChange();\r\n            this._dataItems = this._dataSets[id];\r\n            this._markDataSetDirty();\r\n            this._dataSetId = id;\r\n            const type = \"datasetchanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this, id: id });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetGrouping() {\r\n        $object.each(this._dataSets, (_key, dataSet) => {\r\n            if (dataSet != this._mainDataItems) {\r\n                $array.each(dataSet, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n            }\r\n        });\r\n        this._dataSets = {};\r\n        this._dataItems = this.mainDataItems;\r\n    }\r\n    _handleDataSetChange() {\r\n        $array.each(this._dataItems, (dataItem) => {\r\n            let bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    if (bullet) {\r\n                        let sprite = bullet.get(\"sprite\");\r\n                        if (sprite) {\r\n                            sprite.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        this._selectionProcessed = false; // for totals to be calculated\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration).then(() => {\r\n                this._isShowing = false;\r\n                let xAxis = this.get(\"xAxis\");\r\n                let yAxis = this.get(\"yAxis\");\r\n                let baseAxis = this.get(\"baseAxis\");\r\n                if (yAxis !== baseAxis) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (xAxis !== baseAxis) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n            }));\r\n            promises.push(this.bulletsContainer.show(duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration).then(() => {\r\n                this._isHiding = false;\r\n            }));\r\n            promises.push(this.bulletsContainer.hide(duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            $array.each(this._valueFields, (key) => {\r\n                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const stacked = this.get(\"stacked\");\r\n            if (baseAxis === xAxis || !baseAxis) {\r\n                $array.each(this._valueYFields, (key) => {\r\n                    let min = yAxis.getPrivate(\"min\");\r\n                    let baseValue = yAxis.baseValue();\r\n                    if ($type.isNumber(min) && min > baseValue) {\r\n                        baseValue = min;\r\n                    }\r\n                    if (stacked) {\r\n                        baseValue = 0;\r\n                    }\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            if (baseAxis === yAxis || !baseAxis) {\r\n                let min = xAxis.getPrivate(\"min\");\r\n                let baseValue = xAxis.baseValue();\r\n                if ($type.isNumber(min) && min > baseValue) {\r\n                    baseValue = min;\r\n                }\r\n                if (stacked) {\r\n                    baseValue = 0;\r\n                }\r\n                $array.each(this._valueXFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _markDirtyStack() {\r\n        this._stackDirty = true;\r\n        this.markDirty();\r\n        this._markStakedDirtyStack();\r\n    }\r\n    _markStakedDirtyStack() {\r\n        const stackedSeries = this._stackedSeries;\r\n        if (stackedSeries) {\r\n            $object.each(stackedSeries, (_key, value) => {\r\n                if (!value._stackDirty) {\r\n                    value._markDirtyStack();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._skipped) {\r\n            this._markDirtyAxes();\r\n            this._skipped = false;\r\n        }\r\n    }\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    showDataItemTooltip(dataItem) {\r\n        if (!this.getPrivate(\"doNotUpdateLegend\")) {\r\n            this.updateLegendMarker(dataItem);\r\n            this.updateLegendValue(dataItem);\r\n        }\r\n        const tooltip = this.get(\"tooltip\");\r\n        const exactLocationX = this.get(\"exactLocationX\", false);\r\n        const exactLocationY = this.get(\"exactLocationY\", false);\r\n        if (tooltip) {\r\n            if (!this.isHidden() && this.get(\"visible\")) {\r\n                tooltip._setDataItem(dataItem);\r\n                if (dataItem) {\r\n                    let locationX = this.get(\"locationX\", 0);\r\n                    let locationY = this.get(\"locationY\", 1);\r\n                    let itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                    let itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                    const xAxis = this.get(\"xAxis\");\r\n                    const yAxis = this.get(\"yAxis\");\r\n                    const vcx = this.get(\"vcx\", 1);\r\n                    const vcy = this.get(\"vcy\", 1);\r\n                    const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx, exactLocationX);\r\n                    const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy, exactLocationY);\r\n                    const point = this.getPoint(xPos, yPos);\r\n                    let show = true;\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (dataItem.get(field) == null) {\r\n                            show = false;\r\n                        }\r\n                    });\r\n                    if (show) {\r\n                        const chart = this.chart;\r\n                        if (chart && chart.inPlot(point)) {\r\n                            tooltip.label.text.markDirtyText();\r\n                            tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                            tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.hideTooltip();\r\n            }\r\n        }\r\n    }\r\n    hideTooltip() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.set(\"tooltipTarget\", this);\r\n        }\r\n        return super.hideTooltip();\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets && bullets.length > 0) {\r\n                const bullet = bullets[0];\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const label = legendDataItem.get(\"label\");\r\n            if (label) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                }\r\n                else {\r\n                    label._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                }\r\n                label.set(\"text\", txt);\r\n            }\r\n            const valueLabel = legendDataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                else {\r\n                    valueLabel._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                valueLabel.set(\"text\", txt);\r\n            }\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        let text = \"X: {\" + this._xField;\r\n        if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}; Y: {\" + this._yField;\r\n        if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}\";\r\n        return text;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n        let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n        // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n        let max = 999999999;\r\n        if (y < -max) {\r\n            y = -max;\r\n        }\r\n        if (y > max) {\r\n            y = max;\r\n        }\r\n        if (x < -max) {\r\n            x = -max;\r\n        }\r\n        if (x > max) {\r\n            x = max;\r\n        }\r\n        return { x: x, y: y };\r\n    }\r\n    _shouldInclude(_position) {\r\n        return true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        this.hideTooltip();\r\n        this.updateLegendValue(undefined);\r\n        this.updateLegendMarker(undefined);\r\n    }\r\n    _afterDataChange() {\r\n        super._afterDataChange();\r\n        this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n        this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n        this.resetExtremes();\r\n    }\r\n    /**\r\n     * Resets cached axis scale values.\r\n     */\r\n    resetExtremes() {\r\n        this.setPrivate(\"selectionMinX\", undefined);\r\n        this.setPrivate(\"selectionMaxX\", undefined);\r\n        this.setPrivate(\"selectionMinY\", undefined);\r\n        this.setPrivate(\"selectionMaxY\", undefined);\r\n        this.setPrivate(\"minX\", undefined);\r\n        this.setPrivate(\"minY\", undefined);\r\n        this.setPrivate(\"maxX\", undefined);\r\n        this.setPrivate(\"maxY\", undefined);\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push({\r\n            axisDataItem: axisDataItem\r\n        });\r\n    }\r\n    /**\r\n     * A list of series's main (ungrouped) data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get mainDataItems() {\r\n        return this._mainDataItems;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (baseAxis == xAxis && xAxis.isType(\"DateAxis\")) {\r\n            const baseDuration = xAxis.baseDuration();\r\n            const minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\r\n            const dl = baseDuration * this.get(\"locationX\", 0.5);\r\n            let value = -Infinity;\r\n            while (value < minSelection) {\r\n                const dataItem = this.dataItems[index];\r\n                if (dataItem) {\r\n                    const open = dataItem.open;\r\n                    if (open) {\r\n                        value = open[\"valueX\"];\r\n                    }\r\n                    else {\r\n                        value = dataItem.get(\"valueX\", 0);\r\n                    }\r\n                    value += dl;\r\n                    if (value < minSelection) {\r\n                        index++;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n}\r\nObject.defineProperty(XYSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYSeries\"\r\n});\r\nObject.defineProperty(XYSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([XYSeries.className])\r\n});\r\n//# sourceMappingURL=XYSeries.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Array of minor data items.\r\n         */\r\n        Object.defineProperty(this, \"minorDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesAdded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\r\n        this.ghostLabel.events.disable();\r\n    }\r\n    _updateFinals(_start, _end) {\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        if (this.get(\"zoomable\", true)) {\r\n            this._updateFinals(start, end);\r\n            if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n                let sAnimation = this._sAnimation;\r\n                let eAnimation = this._eAnimation;\r\n                let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n                if (start < -maxDeviation) {\r\n                    start = -maxDeviation;\r\n                }\r\n                if (end > 1 + maxDeviation) {\r\n                    end = 1 + maxDeviation;\r\n                }\r\n                if (start > end) {\r\n                    [start, end] = [end, start];\r\n                }\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (!priority) {\r\n                    priority = \"end\";\r\n                }\r\n                let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n                let maxZoomFactorReal = maxZoomFactor;\r\n                if (end === 1 && start !== 0) {\r\n                    if (start < this.get(\"start\", 0)) {\r\n                        priority = \"start\";\r\n                    }\r\n                    else {\r\n                        priority = \"end\";\r\n                    }\r\n                }\r\n                if (start === 0 && end !== 1) {\r\n                    if (end > this.get(\"end\", 1)) {\r\n                        priority = \"end\";\r\n                    }\r\n                    else {\r\n                        priority = \"start\";\r\n                    }\r\n                }\r\n                let minZoomCount = this.get(\"minZoomCount\", 0);\r\n                let maxZoomCount = this.get(\"maxZoomCount\", Infinity);\r\n                if ($type.isNumber(minZoomCount)) {\r\n                    maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n                }\r\n                let minZoomFactor = 1;\r\n                if ($type.isNumber(maxZoomCount)) {\r\n                    minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n                }\r\n                // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n                if (priority === \"start\") {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            end = start + 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // add to the end\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                    //unless end is > 0\r\n                    if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                        //end = 1;\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                // most likely we are dragging right, so we modify left\r\n                else {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            start = end - 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // remove from start\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                    if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                        //start = 0;\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                    const chart = this.chart;\r\n                    if (chart) {\r\n                        chart._handleAxisSelection(this, true);\r\n                    }\r\n                }\r\n                if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                    return;\r\n                }\r\n                if (duration > 0) {\r\n                    let easing = this.get(\"interpolationEasing\");\r\n                    let sAnimation, eAnimation;\r\n                    if (this.get(\"start\") != start) {\r\n                        sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                    }\r\n                    if (this.get(\"end\") != end) {\r\n                        eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                    }\r\n                    this._sAnimation = sAnimation;\r\n                    this._eAnimation = eAnimation;\r\n                    if (sAnimation) {\r\n                        return sAnimation;\r\n                    }\r\n                    else if (eAnimation) {\r\n                        return eAnimation;\r\n                    }\r\n                }\r\n                else {\r\n                    this.set(\"start\", start);\r\n                    this.set(\"end\", end);\r\n                }\r\n            }\r\n            else {\r\n                if (this._sAnimation) {\r\n                    this._sAnimation.stop();\r\n                }\r\n                if (this._eAnimation) {\r\n                    this._eAnimation.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart._updateCursor();\r\n            }\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, true);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, false);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleFHDataItem(dataItem, forceHidden) {\r\n        const fh = \"forceHidden\";\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.set(fh, forceHidden);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.set(fh, forceHidden);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.set(fh, forceHidden);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.set(fh, forceHidden);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.set(fh, forceHidden);\r\n            }\r\n        }\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        const v = \"visible\";\r\n        if (label) {\r\n            label.setPrivate(v, visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(v, visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(v, visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(v, visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(v, visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags, minor) {\r\n        var _a, _b, _c;\r\n        const renderer = this.get(\"renderer\");\r\n        let m = \"minor\";\r\n        const label = dataItem.get(\"label\");\r\n        if (!label) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = label.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_a = label.parent) === null || _a === void 0 ? void 0 : _a.children.removeValue(label);\r\n                renderer.makeLabel(dataItem, tags);\r\n                label.dispose();\r\n                renderer.labels.removeValue(label);\r\n            }\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (!grid) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = grid.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_b = grid.parent) === null || _b === void 0 ? void 0 : _b.children.removeValue(grid);\r\n                renderer.makeGrid(dataItem, tags);\r\n                grid.dispose();\r\n                renderer.grid.removeValue(grid);\r\n            }\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (!tick) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        else {\r\n            let remove = false;\r\n            let themeTags = tick.get(\"themeTags\");\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_c = tick.parent) === null || _c === void 0 ? void 0 : _c.children.removeValue(tick);\r\n                renderer.makeTick(dataItem, tags);\r\n                tick.dispose();\r\n                renderer.ticks.removeValue(tick);\r\n            }\r\n        }\r\n        if (!minor && !dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n        this._seriesAdded = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        this.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = Math.ceil(bounds.right - bounds.left);\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = Math.ceil(bounds.right - bounds.left);\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                        series._settings.tooltipDataItem = dataItem;\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                        series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (this.get(\"snapTooltip\")) {\r\n                position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n            }\r\n            this.setPrivateRaw(\"tooltipPosition\", position);\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (!$type.isNaN(position)) {\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    _handleSeriesRemoved() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Converts relative position of the axis to a global position taking current\r\n     * zoom into account (opposite to what `toAxisPosition` does).\r\n     *\r\n     * @since 5.4.2\r\n     * @param position Position\r\n     * @return Global position\r\n     */\r\n    toGlobalPosition(position) {\r\n        return this.get(\"renderer\").toGlobalPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n//# sourceMappingURL=Axis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dseHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minRealLog\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        let someDirty = false;\r\n        if (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            someDirty = true;\r\n            this.ghostLabel.set(\"text\", \"\");\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\r\n            this._getMinMax();\r\n            this._dirtyExtremes = false;\r\n        }\r\n        this._handleSizeDirty();\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            const chart = this.chart;\r\n            let getMM = false;\r\n            // #1563\r\n            if (chart) {\r\n                const letter = this.get(\"renderer\").getPrivate(\"letter\");\r\n                if (letter == \"Y\") {\r\n                    chart.xAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n                else if (letter == \"X\") {\r\n                    chart.yAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (getMM) {\r\n                this._getSelectionMinMax();\r\n            }\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _handleSizeDirty() {\r\n        if (this._sizeDirty && !this._dseHandled) {\r\n            this._dirtySelectionExtremes = true;\r\n            this._dseHandled = true;\r\n            if (this.getPrivate(\"selectionMinFinal\") != this.getPrivate(\"selectionMin\") || this.getPrivate(\"selectionMaxFinal\") != this.getPrivate(\"selectionMax\")) {\r\n                this._dirtySelectionExtremes = false;\r\n            }\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._dseHandled = false;\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    minLog = 1;\r\n                    if (step < 1) {\r\n                        if ($type.isNumber(this._minRealLog)) {\r\n                            minLog = this._minRealLog;\r\n                        }\r\n                        else {\r\n                            minLog = Math.pow(10, -50);\r\n                        }\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\r\n                }\r\n            }\r\n            /// minor grid\r\n            const renderer = this.get(\"renderer\");\r\n            const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n            const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n            let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n            const stepAdjusted = Math.round(step / stepPower);\r\n            let minorGridCount = 2;\r\n            if ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\r\n                minorGridCount = 5;\r\n            }\r\n            if ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\r\n                minorGridCount = 10;\r\n            }\r\n            let minorStep = step / minorGridCount;\r\n            // end of minor grid\r\n            let i = 0;\r\n            let m = 0;\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                this._toggleDataItem(dataItem, true);\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                let nextValue = value;\r\n                if (!logarithmic) {\r\n                    nextValue += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        nextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\r\n                    }\r\n                    else {\r\n                        nextValue += step;\r\n                    }\r\n                }\r\n                // minor grid\r\n                if (minorGridEnabled) {\r\n                    let minorValue = value + minorStep;\r\n                    if (logarithmic) {\r\n                        if (differencePower > 2) {\r\n                            let minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\r\n                            minorStep = minorMinMaxStep.step;\r\n                        }\r\n                        minorValue = value + minorStep;\r\n                    }\r\n                    while (minorValue < nextValue - step * 0.00000000001) {\r\n                        let minorDataItem;\r\n                        if (this.minorDataItems.length < m + 1) {\r\n                            minorDataItem = new DataItem(this, undefined, {});\r\n                            this.minorDataItems.push(minorDataItem);\r\n                            this.processDataItem(minorDataItem);\r\n                        }\r\n                        else {\r\n                            minorDataItem = this.minorDataItems[m];\r\n                        }\r\n                        this._createAssets(minorDataItem, [\"minor\"], true);\r\n                        this._toggleDataItem(minorDataItem, true);\r\n                        minorDataItem.setRaw(\"value\", minorValue);\r\n                        const minorLabel = minorDataItem.get(\"label\");\r\n                        if (minorLabel) {\r\n                            if (minorLabelsEnabled) {\r\n                                minorLabel.set(\"text\", this._formatText(minorValue));\r\n                            }\r\n                            else {\r\n                                minorLabel.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                        this._prepareDataItem(minorDataItem);\r\n                        minorValue += minorStep;\r\n                        m++;\r\n                    }\r\n                }\r\n                value = nextValue;\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1 && !logarithmic) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                // #103520\r\n                if (logarithmic && differencePower <= 2) {\r\n                    if (value - step < step) {\r\n                        value = step;\r\n                    }\r\n                }\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this._toggleDataItem(this.dataItems[j], false);\r\n            }\r\n            for (let j = m; j < this.minorDataItems.length; j++) {\r\n                this._toggleDataItem(this.minorDataItems[j], false);\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        let labelEndPosition = endPosition;\r\n        let labelEndValue = dataItem.get(\"labelEndValue\");\r\n        if (labelEndValue != null) {\r\n            labelEndPosition = this.valueToPosition(labelEndValue);\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            dataItem.set((field + \"TotalPercent\"), value / total * 100);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minX = series.getPrivate(\"minX\");\r\n                            let maxX = series.getPrivate(\"maxX\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minX = undefined;\r\n                                maxX = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", minX);\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", maxX);\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minY = series.getPrivate(\"minY\");\r\n                            let maxY = series.getPrivate(\"maxY\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minY = undefined;\r\n                                maxY = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", minY);\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", maxY);\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                let smin = selectionMin;\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                if (selectionMin < min) {\r\n                    let d = smin - min;\r\n                    if (d == 0) {\r\n                        d = this._deltaMinMax;\r\n                    }\r\n                    selectionMin = smin - d;\r\n                    selectionMax = smin + d;\r\n                    strictMinMax = true;\r\n                }\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            let delta = selectionMax - selectionMin;\r\n            selectionMin -= delta * extraMin;\r\n            selectionMax += delta * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                if (minMaxStep.min < min) {\r\n                    minMaxStep.min = min;\r\n                }\r\n                if (minMaxStep.max > max) {\r\n                    minMaxStep.max = max;\r\n                }\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = selectionMinReal;\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = selectionMaxReal;\r\n                }\r\n                if (selectionMax - selectionMin <= 0.00000001) {\r\n                    selectionMin -= this._deltaMinMax;\r\n                    selectionMax += this._deltaMinMax;\r\n                }\r\n                let delta = selectionMax - selectionMin;\r\n                selectionMin -= delta * extraMin;\r\n                selectionMax += delta * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (!this.get(\"strictMinMax\")) {\r\n                if (this.get(\"extraMin\") == null) {\r\n                    extraMin = 0.1;\r\n                }\r\n                if (this.get(\"extraMax\") == null) {\r\n                    extraMax = 0.2;\r\n                }\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            this.setPrivate(\"minFinal\", undefined);\r\n            this.setPrivate(\"maxFinal\", undefined);\r\n            return;\r\n        }\r\n        if (min > max) {\r\n            [min, max] = [max, min];\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        this._minRealLog = min;\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            let delta = max - min;\r\n            min -= delta * extraMin;\r\n            max += delta * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n                if (step == 0) {\r\n                    step = 1;\r\n                }\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.getPrivate(\"step\", 1) / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        let value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\r\n        value += this.getPrivate(\"step\", 1) * count;\r\n        value = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\r\n        return this.toGlobalPosition(this.valueToPosition(value));\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n//# sourceMappingURL=ValueAxis.js.map","import { Axis } from \"./Axis\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { populateString } from \"../../../core/util/PopulateString\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\r\nexport class CategoryAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_itemMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.fields.push(\"category\");\r\n        this.setPrivateRaw(\"name\", \"category\");\r\n        this.addTag(\"category\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const len = this.dataItems.length;\r\n        let i = 0;\r\n        if (this._valuesDirty) {\r\n            this._itemMap = {};\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                dataItem.setRaw(\"index\", i);\r\n                this._itemMap[dataItem.get(\"category\")] = dataItem;\r\n                i++;\r\n            });\r\n            this.setPrivateRaw(\"maxZoomFactor\", len);\r\n        }\r\n        this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\r\n        this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\r\n        if (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\r\n            if (this.dataItems.length > 0) {\r\n                this._handleRangeChange();\r\n                this._prepareAxisItems();\r\n                this._updateAxisRanges();\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        $array.each(this.series, (series) => {\r\n            let startCategory = this.dataItems[this.startIndex()].get(\"category\");\r\n            let endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\r\n            let baseAxis = series.get(\"baseAxis\");\r\n            let xAxis = series.get(\"xAxis\");\r\n            let yAxis = series.get(\"yAxis\");\r\n            if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\r\n                series._markDirtyAxes();\r\n            }\r\n            else if (baseAxis === this) {\r\n                let key;\r\n                let openKey;\r\n                let otherAxis = yAxis;\r\n                if (xAxis === baseAxis) {\r\n                    if (series.get(\"categoryXField\")) {\r\n                        key = \"categoryX\";\r\n                    }\r\n                    if (series.get(\"openCategoryXField\")) {\r\n                        openKey = \"openCategoryX\";\r\n                    }\r\n                }\r\n                else if (yAxis === baseAxis) {\r\n                    if (series.get(\"categoryYField\")) {\r\n                        key = \"categoryY\";\r\n                    }\r\n                    if (series.get(\"openCategoryYField\")) {\r\n                        openKey = \"openCategoryY\";\r\n                    }\r\n                    otherAxis = xAxis;\r\n                }\r\n                if (otherAxis instanceof ValueAxis) {\r\n                    if (key || openKey) {\r\n                        let startDataItem;\r\n                        let endDataItem;\r\n                        for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let i = series.dataItems.length - 1; i >= 0; i--) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        let startIndex = 0;\r\n                        let endIndex = series.dataItems.length;\r\n                        if (startDataItem) {\r\n                            startIndex = series.dataItems.indexOf(startDataItem);\r\n                        }\r\n                        if (endDataItem) {\r\n                            endIndex = series.dataItems.indexOf(endDataItem) + 1;\r\n                        }\r\n                        series.setPrivate(\"startIndex\", startIndex);\r\n                        series.setPrivate(\"endIndex\", endIndex);\r\n                        let hasValue = false;\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            const dataItem = series.dataItems[i];\r\n                            $array.each(series.__valueXShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            $array.each(series.__valueYShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            if (hasValue) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        series.setPrivate(\"outOfSelection\", !hasValue);\r\n                    }\r\n                }\r\n                series._markDirtyAxes(); // must be outside\r\n            }\r\n        });\r\n    }\r\n    _prepareAxisItems() {\r\n        var _a;\r\n        const renderer = this.get(\"renderer\");\r\n        const len = this.dataItems.length;\r\n        let startIndex = this.startIndex();\r\n        if (startIndex > 0) {\r\n            startIndex--;\r\n        }\r\n        let endIndex = this.endIndex();\r\n        if (endIndex < len) {\r\n            endIndex++;\r\n        }\r\n        const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n        const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n        let maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1);\r\n        let frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\r\n        startIndex = Math.floor(startIndex / frequency) * frequency;\r\n        this._frequency = frequency;\r\n        for (let j = 0; j < len; j++) {\r\n            this._toggleDataItem(this.dataItems[j], false);\r\n        }\r\n        let f = this.dataItems[startIndex].get(\"index\", 0);\r\n        for (let i = startIndex; i < endIndex; i = i + frequency) {\r\n            let dataItem = this.dataItems[i];\r\n            this._createAssets(dataItem, []);\r\n            this._toggleDataItem(dataItem, true);\r\n            let count = frequency;\r\n            if (minorGridEnabled) {\r\n                count = 1;\r\n            }\r\n            this._prepareDataItem(dataItem, f, count);\r\n            f++;\r\n        }\r\n        if (renderer.get(\"minorGridEnabled\")) {\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (i % frequency != 0) {\r\n                    this._createAssets(dataItem, [\"minor\"], true);\r\n                    this._toggleDataItem(dataItem, true);\r\n                    this._prepareDataItem(dataItem, 0, 1);\r\n                    if (!minorLabelsEnabled) {\r\n                        (_a = dataItem.get(\"label\")) === null || _a === void 0 ? void 0 : _a.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _prepareDataItem(dataItem, fillIndex, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let categoryLocation = dataItem.get(\"categoryLocation\", 0);\r\n        let endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\r\n        let index = dataItem.get(\"index\");\r\n        if (!$type.isNumber(index)) {\r\n            index = this.categoryToIndex(dataItem.get(\"category\"));\r\n        }\r\n        let position = this.indexToPosition(index, categoryLocation);\r\n        let endCategory = dataItem.get(\"endCategory\");\r\n        let endIndex;\r\n        if (endCategory) {\r\n            endIndex = this.categoryToIndex(endCategory);\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = index;\r\n            }\r\n        }\r\n        else {\r\n            endIndex = index;\r\n        }\r\n        let endPosition = this.indexToPosition(endIndex, endCategoryLocation);\r\n        let fillEndIndex;\r\n        let fillEndPosition;\r\n        if (dataItem.get(\"isRange\")) {\r\n            fillEndIndex = endIndex;\r\n        }\r\n        else {\r\n            fillEndIndex = index + this._frequency - 1;\r\n        }\r\n        fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        const fillRule = this.get(\"fillRule\");\r\n        if (fillRule) {\r\n            fillRule(dataItem, fillIndex);\r\n        }\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    baseValue() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    basePosition() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         X coordinate\r\n     */\r\n    getX(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns Y coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         Y coordinate\r\n     */\r\n    getY(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * Converts category index to a relative position.\r\n     *\r\n     * `location` indicates relative position within category: 0 - start, 1 - end.\r\n     *\r\n     * If not set, will use middle (0.5) of the category.\r\n     *\r\n     * @param   index     Index\r\n     * @param   location  Location\r\n     * @return            Index\r\n     */\r\n    indexToPosition(index, location) {\r\n        if (!$type.isNumber(location)) {\r\n            location = 0.5;\r\n        }\r\n        let len = this.dataItems.length;\r\n        let startLocation = this.get(\"startLocation\", 0);\r\n        let endLocation = this.get(\"endLocation\", 1);\r\n        len -= startLocation;\r\n        len -= (1 - endLocation);\r\n        let position = (index + location - startLocation) / len;\r\n        let dataItem = this.dataItems[index];\r\n        if (dataItem) {\r\n            position += dataItem.get(\"deltaPosition\", 0);\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * Returns a position of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Position\r\n     */\r\n    categoryToPosition(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return this.indexToPosition(dataItem.get(\"index\"));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns an index of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Index\r\n     */\r\n    categoryToIndex(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return dataItem.get(\"index\");\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dataItemToPosition(dataItem) {\r\n        return this.indexToPosition(dataItem.get(\"index\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        position += (0.5 - location) / this.dataItems.length;\r\n        return this.indexToPosition(this.axisPositionToIndex(position), location);\r\n    }\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    axisPositionToIndex(position) {\r\n        let len = this.dataItems.length;\r\n        return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        //@todo number formatter + tag\r\n        const dataItem = this.dataItems[this.axisPositionToIndex(position)];\r\n        if (dataItem) {\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                return populateString(label, this.get(\"tooltipText\", \"\"));\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\r\n        tooltip.label.text.markDirtyText();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        if (this.dataItems.length > 0) {\r\n            let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n            let index = this.axisPositionToIndex(position);\r\n            // try simple first\r\n            let seriesDataItem = series.dataItems[index];\r\n            let axisDataItem = this.dataItems[index];\r\n            let category = axisDataItem.get(\"category\");\r\n            if (seriesDataItem && axisDataItem) {\r\n                if (seriesDataItem.get(fieldName) === category) {\r\n                    return seriesDataItem;\r\n                }\r\n            }\r\n            // if not found, try looking\r\n            for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                let dataItem = series.dataItems[i];\r\n                if (dataItem.get(fieldName) === category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` indexes.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start index\r\n     * @param  end       End index\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToIndexes(start, end, duration) {\r\n        let len = this.dataItems.length;\r\n        this.zoom(start / len, end / len, duration);\r\n    }\r\n    zoomToCategories(startCategory, endCategory, duration) {\r\n        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\r\n    }\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        const position = this.getPrivate(\"tooltipPosition\", 0);\r\n        const index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\r\n        return this.toGlobalPosition(this.indexToPosition(index));\r\n    }\r\n}\r\nObject.defineProperty(CategoryAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CategoryAxis\"\r\n});\r\nObject.defineProperty(CategoryAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([CategoryAxis.className])\r\n});\r\n//# sourceMappingURL=CategoryAxis.js.map","import { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabel\"\r\n});\r\nObject.defineProperty(AxisLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([AxisLabel.className])\r\n});\r\n//# sourceMappingURL=AxisLabel.js.map","import { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nexport class AxisTick extends Tick {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisTick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisTick\"\r\n});\r\nObject.defineProperty(AxisTick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Tick.classNames.concat([AxisTick.className])\r\n});\r\n//# sourceMappingURL=AxisTick.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nexport class AxisRenderer extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        // save for quick access\r\n        Object.defineProperty(this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.ticks.template])))\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Grid._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.grid.template])))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template])))\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template])))\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\r\n         */\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem, themeTags) {\r\n        const tick = this.ticks.make();\r\n        tick._setDataItem(dataItem);\r\n        dataItem.setRaw(\"tick\", tick);\r\n        tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.push(tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeGrid(dataItem, themeTags) {\r\n        const grid = this.grid.make();\r\n        grid._setDataItem(dataItem);\r\n        dataItem.setRaw(\"grid\", grid);\r\n        grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(grid);\r\n        this.grid.push(grid);\r\n        return grid;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeAxisFill(dataItem, themeTags) {\r\n        const axisFill = this.axisFills.make();\r\n        axisFill._setDataItem(dataItem);\r\n        axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(axisFill);\r\n        dataItem.setRaw(\"axisFill\", axisFill);\r\n        this.axisFills.push(axisFill);\r\n        return axisFill;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem, themeTags) {\r\n        const label = this.labels.make();\r\n        label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.moveValue(label, 0);\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    axisLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    gridCount() {\r\n        return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n    }\r\n    _updatePositions() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"isMeasured\", false);\r\n        const thumb = this.thumb;\r\n        if (thumb) {\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\r\n                this._handleThumbDown(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\r\n                this._handleThumbUp(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\r\n                this._handleThumbMove(event);\r\n            }));\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"minGridDistance\")) {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.axis.markDirtySize();\r\n            });\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pan\")) {\r\n            const thumb = this.thumb;\r\n            if (thumb) {\r\n                const labelsContainer = this.axis.labelsContainer;\r\n                const pan = this.get(\"pan\");\r\n                if (pan == \"zoom\") {\r\n                    labelsContainer.children.push(thumb);\r\n                }\r\n                else if (pan == \"none\") {\r\n                    labelsContainer.children.removeValue(thumb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThumbDown(event) {\r\n        this._thumbDownPoint = this.toLocal(event.point);\r\n        const axis = this.axis;\r\n        this._downStart = axis.get(\"start\");\r\n        this._downEnd = axis.get(\"end\");\r\n    }\r\n    _handleThumbUp(_event) {\r\n        this._thumbDownPoint = undefined;\r\n    }\r\n    _handleThumbMove(event) {\r\n        const downPoint = this._thumbDownPoint;\r\n        if (downPoint) {\r\n            const point = this.toLocal(event.point);\r\n            const downStart = this._downStart;\r\n            const downEnd = this._downEnd;\r\n            const extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\r\n            this.axis.zoom(downStart - extra, downEnd + extra, 0);\r\n        }\r\n    }\r\n    _getPan(_point1, _point2) {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) { }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position = position * (end - start);\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start);\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n    }\r\n    toggleVisibility(sprite, position, minPosition, maxPosition) {\r\n        let axis = this.axis;\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n        let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n        if (position < updatedStart || position > updatedEnd) {\r\n            sprite.setPrivate(\"visible\", false);\r\n        }\r\n        else {\r\n            sprite.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    _positionTooltip(tooltip, point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n            if (!chart.inPlot(point)) {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    }\r\n    processAxis() { }\r\n}\r\nObject.defineProperty(AxisRenderer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRenderer\"\r\n});\r\nObject.defineProperty(AxisRenderer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([AxisRenderer.className])\r\n});\r\n//# sourceMappingURL=AxisRenderer.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"x\", -1000);\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0);\r\n        axis.gridContainer.set(\"x\", x);\r\n        axis.topGridContainer.set(\"x\", x);\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"width\") == null) {\r\n            axis.set(\"width\", p100);\r\n        }\r\n        ;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"y\", -1000);\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        const w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\r\n        axis.gridContainer.set(\"y\", y);\r\n        axis.topGridContainer.set(\"y\", y);\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","import { XYSeries } from \"./XYSeries\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { line, area } from \"d3-shape\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\r\nexport class LineSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_endIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: line()\r\n        });\r\n        Object.defineProperty(this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: area()\r\n        });\r\n        Object.defineProperty(this, \"_legendStroke\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_legendFill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all line segments in series.\r\n         *\r\n         * `strokes.template` can be used to set default settings for all line\r\n         * segments, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"strokes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\r\n            }, [this.strokes.template])))\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all segment fills in series.\r\n         *\r\n         * `fills.template` can be used to set default settings for all segment\r\n         * fills, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"fills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\r\n            }, [this.fills.template])))\r\n        });\r\n        // custom set from data\r\n        Object.defineProperty(this, \"_fillTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_previousPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [0, 0, 0, 0]\r\n        });\r\n        Object.defineProperty(this, \"_dindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_sindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._fillGenerator.y0(function (p) {\r\n            return p[3];\r\n        });\r\n        this._fillGenerator.x0(function (p) {\r\n            return p[2];\r\n        });\r\n        this._fillGenerator.y1(function (p) {\r\n            return p[1];\r\n        });\r\n        this._fillGenerator.x1(function (p) {\r\n            return p[0];\r\n        });\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeStroke(strokes) {\r\n        const stroke = this.mainContainer.children.push(strokes.make());\r\n        strokes.push(stroke);\r\n        return stroke;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeFill(fills) {\r\n        const fill = this.mainContainer.children.push(fills.make());\r\n        fills.push(fill);\r\n        return fill;\r\n    }\r\n    _updateChildren() {\r\n        this._strokeTemplate = undefined;\r\n        this._fillTemplate = undefined;\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        if (this.isDirty(\"stroke\")) {\r\n            const stroke = this.get(\"stroke\");\r\n            this.strokes.template.set(\"stroke\", stroke);\r\n            const legendStroke = this._legendStroke;\r\n            if (legendStroke) {\r\n                legendStroke.states.lookup(\"default\").set(\"stroke\", stroke);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            const fill = this.get(\"fill\");\r\n            this.fills.template.set(\"fill\", fill);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fill\", fill);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillPattern\")) {\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            this.fills.template.set(\"fillPattern\", fillPattern);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fillPattern\", fillPattern);\r\n            }\r\n        }\r\n        if (this.isDirty(\"curveFactory\")) {\r\n            const curveFactory = this.get(\"curveFactory\");\r\n            if (curveFactory) {\r\n                this._strokeGenerator.curve(curveFactory);\r\n                this._fillGenerator.curve(curveFactory);\r\n            }\r\n        }\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\r\n                this.fills.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.strokes.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.axisRanges.each((axisRange) => {\r\n                    let fills = axisRange.fills;\r\n                    if (fills) {\r\n                        fills.each((fill) => {\r\n                            fill.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                    let strokes = axisRange.strokes;\r\n                    if (strokes) {\r\n                        strokes.each((stroke) => {\r\n                            stroke.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                });\r\n                let startIndex = this.startIndex();\r\n                let strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n                let fillTemplateField = this.fills.template.get(\"templateField\");\r\n                let strokeTemplateFound = true;\r\n                let fillTemplateFound = true;\r\n                if (strokeTemplateField) {\r\n                    strokeTemplateFound = false;\r\n                }\r\n                if (fillTemplateField) {\r\n                    fillTemplateFound = false;\r\n                }\r\n                for (let i = startIndex - 1; i >= 0; i--) {\r\n                    let dataItem = this.dataItems[i];\r\n                    let hasValues = true;\r\n                    let dataContext = dataItem.dataContext;\r\n                    if (strokeTemplateField) {\r\n                        if (dataContext[strokeTemplateField]) {\r\n                            strokeTemplateFound = true;\r\n                        }\r\n                    }\r\n                    if (fillTemplateField) {\r\n                        if (dataContext[fillTemplateField]) {\r\n                            fillTemplateFound = true;\r\n                        }\r\n                    }\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (!$type.isNumber(dataItem.get(field))) {\r\n                            hasValues = false;\r\n                        }\r\n                    });\r\n                    if (hasValues && strokeTemplateFound && fillTemplateFound) {\r\n                        startIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                let len = this.dataItems.length;\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < len) {\r\n                    endIndex++;\r\n                    for (let i = endIndex; i < len; i++) {\r\n                        let dataItem = this.dataItems[i];\r\n                        let hasValues = true;\r\n                        $array.each(this._valueFields, (field) => {\r\n                            if (!$type.isNumber(dataItem.get(field))) {\r\n                                hasValues = false;\r\n                            }\r\n                        });\r\n                        if (hasValues) {\r\n                            endIndex = i + 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                this._endIndex = endIndex;\r\n                this._clearGraphics();\r\n                this._sindex = 0;\r\n                this._dindex = startIndex;\r\n                if (this.dataItems.length == 1) {\r\n                    this._startSegment(0);\r\n                }\r\n                else {\r\n                    // this is done to avoid recursion with a lot of segments\r\n                    while (this._dindex < endIndex - 1) {\r\n                        this._startSegment(this._dindex);\r\n                        this._sindex++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _clearGraphics() {\r\n        this.strokes.clear();\r\n        this.fills.clear();\r\n        this.axisRanges.each((axisRange) => {\r\n            axisRange.fills.clear();\r\n            axisRange.strokes.clear();\r\n        });\r\n    }\r\n    _startSegment(dataItemIndex) {\r\n        let endIndex = this._endIndex;\r\n        let currentEndIndex = endIndex;\r\n        const autoGapCount = this.get(\"autoGapCount\");\r\n        const connect = this.get(\"connect\");\r\n        const fill = this.makeFill(this.fills);\r\n        const fillTemplate = this._fillTemplate;\r\n        const originalTemplate = this.fills.template;\r\n        if (fillTemplate && fillTemplate != originalTemplate) {\r\n            fill.template = fillTemplate;\r\n        }\r\n        fill.setPrivate(\"visible\", true);\r\n        const stroke = this.makeStroke(this.strokes);\r\n        const strokeTemplate = this._strokeTemplate;\r\n        if (strokeTemplate && strokeTemplate != this.strokes.template) {\r\n            stroke.template = strokeTemplate;\r\n        }\r\n        stroke.setPrivate(\"visible\", true);\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        let baseAxis = this.get(\"baseAxis\");\r\n        let vcx = this.get(\"vcx\", 1);\r\n        let vcy = this.get(\"vcy\", 1);\r\n        let xField = this._xField;\r\n        let yField = this._yField;\r\n        let xOpenField = this._xOpenField;\r\n        let yOpenField = this._yOpenField;\r\n        const xOpenFieldValue = this.get(\"openValueXField\");\r\n        const yOpenFieldValue = this.get(\"openValueYField\");\r\n        if (!xOpenFieldValue) {\r\n            xOpenField = this._xField;\r\n        }\r\n        if (!yOpenFieldValue) {\r\n            yOpenField = this._yField;\r\n        }\r\n        const stacked = this.get(\"stacked\");\r\n        const basePosX = xAxis.basePosition();\r\n        const basePosY = yAxis.basePosition();\r\n        let baseField;\r\n        if (baseAxis === yAxis) {\r\n            baseField = this._yField;\r\n        }\r\n        else {\r\n            baseField = this._xField;\r\n        }\r\n        const segments = [];\r\n        let points = [];\r\n        segments.push(points);\r\n        const strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n        const fillTemplateField = this.fills.template.get(\"templateField\");\r\n        let locationX = this.get(\"locationX\", 0.5);\r\n        let locationY = this.get(\"locationY\", 0.5);\r\n        let openLocationX = this.get(\"openLocationX\", locationX);\r\n        let openLocationY = this.get(\"openLocationY\", locationY);\r\n        const minDistance = this.get(\"minDistance\", 0);\r\n        let i;\r\n        let fillVisible = this.fills.template.get(\"visible\");\r\n        if (this.axisRanges.length > 0) {\r\n            fillVisible = true;\r\n        }\r\n        let getOpen = false;\r\n        if (stacked || xOpenFieldValue || yOpenFieldValue) {\r\n            getOpen = true;\r\n        }\r\n        const o = {\r\n            points, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\r\n        };\r\n        let rangeStrokeTemplate = this._strokeTemplate;\r\n        let rangeFillTemplate = this._fillTemplate;\r\n        for (i = dataItemIndex; i < currentEndIndex; i++) {\r\n            this._dindex = i;\r\n            const dataItem = this._dataItems[i];\r\n            let valueX = dataItem.get(xField);\r\n            let valueY = dataItem.get(yField);\r\n            if (valueX == null || valueY == null) {\r\n                if (!connect) {\r\n                    points = [];\r\n                    segments.push(points);\r\n                    o.points = points;\r\n                }\r\n            }\r\n            else {\r\n                this._getPoints(dataItem, o);\r\n            }\r\n            if (strokeTemplateField) {\r\n                let strokeTemplate = dataItem.dataContext[strokeTemplateField];\r\n                if (strokeTemplate) {\r\n                    if (!(strokeTemplate instanceof Template)) {\r\n                        strokeTemplate = Template.new(strokeTemplate);\r\n                    }\r\n                    this._strokeTemplate = strokeTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        rangeStrokeTemplate = strokeTemplate;\r\n                        stroke.template = strokeTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (fillTemplateField) {\r\n                let fillTemplate = dataItem.dataContext[fillTemplateField];\r\n                if (fillTemplate) {\r\n                    if (!(fillTemplate instanceof Template)) {\r\n                        fillTemplate = Template.new(fillTemplate);\r\n                    }\r\n                    this._fillTemplate = fillTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        rangeFillTemplate = fillTemplate;\r\n                        fill.template = fillTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (!connect) {\r\n                let nextItem = this.dataItems[i + 1];\r\n                if (nextItem) {\r\n                    if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\r\n                        points = [];\r\n                        segments.push(points);\r\n                        o.points = points;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n        stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        if (i === endIndex) {\r\n            this._endLine(points, segments[0][0]);\r\n        }\r\n        if (stroke) {\r\n            this._drawStroke(stroke, segments);\r\n        }\r\n        if (fill) {\r\n            this._drawFill(fill, segments);\r\n        }\r\n        this.axisRanges.each((axisRange) => {\r\n            const container = axisRange.container;\r\n            const fills = axisRange.fills;\r\n            const fill = this.makeFill(fills);\r\n            if (container) {\r\n                container.children.push(fill);\r\n            }\r\n            fill.setPrivate(\"visible\", true);\r\n            this._drawFill(fill, segments);\r\n            const strokes = axisRange.strokes;\r\n            const stroke = this.makeStroke(strokes);\r\n            if (container) {\r\n                container.children.push(stroke);\r\n            }\r\n            if (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\r\n                stroke.template = rangeStrokeTemplate;\r\n            }\r\n            if (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\r\n                fill.template = rangeFillTemplate;\r\n            }\r\n            stroke.setPrivate(\"visible\", true);\r\n            this._drawStroke(stroke, segments);\r\n            fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n            stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        });\r\n    }\r\n    _getPoints(dataItem, o) {\r\n        let points = o.points;\r\n        let itemLocationX = dataItem.get(\"locationX\", o.locationX);\r\n        let itemLocationY = dataItem.get(\"locationY\", o.locationY);\r\n        const exactLocationX = this.get(\"exactLocationX\", false);\r\n        const exactLocationY = this.get(\"exactLocationY\", false);\r\n        let xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx, exactLocationX);\r\n        let yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy, exactLocationY);\r\n        if (this._shouldInclude(xPos)) {\r\n            const iPoint = this.getPoint(xPos, yPos);\r\n            const point = [iPoint.x, iPoint.y];\r\n            iPoint.x += this._x;\r\n            iPoint.y += this._y;\r\n            dataItem.set(\"point\", iPoint);\r\n            if (o.fillVisible) {\r\n                let xPos0 = xPos;\r\n                let yPos0 = yPos;\r\n                if (o.baseAxis === o.xAxis) {\r\n                    yPos0 = o.basePosY;\r\n                }\r\n                else if (o.baseAxis === o.yAxis) {\r\n                    xPos0 = o.basePosX;\r\n                }\r\n                if (o.getOpen) {\r\n                    let valueX = dataItem.get(o.xOpenField);\r\n                    let valueY = dataItem.get(o.yOpenField);\r\n                    if (valueX != null && valueY != null) {\r\n                        let itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\r\n                        let itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\r\n                        if (o.stacked) {\r\n                            let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                            let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                            if (stackToItemX) {\r\n                                xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, stackToItemX.component.get(\"vcx\"), exactLocationX);\r\n                                if ($type.isNaN(xPos0)) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.yAxis === o.baseAxis) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                                else {\r\n                                    xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\r\n                                }\r\n                            }\r\n                            if (stackToItemY) {\r\n                                yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, stackToItemY.component.get(\"vcy\"), exactLocationY);\r\n                                if ($type.isNaN(yPos0)) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.xAxis === o.baseAxis) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                                else {\r\n                                    yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\r\n                            yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\r\n                        }\r\n                    }\r\n                }\r\n                let closeIPoint = this.getPoint(xPos0, yPos0);\r\n                point[2] = closeIPoint.x;\r\n                point[3] = closeIPoint.y;\r\n            }\r\n            if (o.minDistance > 0) {\r\n                const p0 = point[0];\r\n                const p1 = point[1];\r\n                const p2 = point[2];\r\n                const p3 = point[3];\r\n                const prev = this._previousPoint;\r\n                const pp0 = prev[0];\r\n                const pp1 = prev[1];\r\n                const pp2 = prev[2];\r\n                const pp3 = prev[3];\r\n                if (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\r\n                    points.push(point);\r\n                    this._previousPoint = point;\r\n                }\r\n            }\r\n            else {\r\n                points.push(point);\r\n            }\r\n        }\r\n    }\r\n    _endLine(_points, _firstPoint) {\r\n    }\r\n    _drawStroke(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._strokeGenerator.context(display);\r\n                    this._strokeGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _drawFill(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._fillGenerator.context(display);\r\n                    this._fillGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.fills = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\r\n        }, [this.fills.template, axisRange.fills.template]));\r\n        axisRange.strokes = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\r\n        }, [this.strokes.template, axisRange.strokes.template]));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const marker = legendDataItem.get(\"marker\");\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                markerRectangle.setPrivate(\"visible\", false);\r\n            }\r\n            marker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }));\r\n            const legendStroke = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\r\n            }, [this.strokes.template]));\r\n            this._legendStroke = legendStroke;\r\n            const legendFill = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\r\n            }, [this.fills.template]));\r\n            this._legendFill = legendFill;\r\n            const disabledColor = this._root.interfaceColors.get(\"disabled\");\r\n            legendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            legendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            if (this.bullets.length > 0) {\r\n                const bulletFunction = this.bullets.getIndex(0);\r\n                if (bulletFunction) {\r\n                    const bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\r\n                    if (bullet) {\r\n                        const sprite = bullet.get(\"sprite\");\r\n                        if (sprite instanceof Graphics) {\r\n                            sprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                        }\r\n                        if (sprite) {\r\n                            sprite.setAll({\r\n                                tooltipText: undefined,\r\n                                tooltipHTML: undefined,\r\n                                focusable: undefined,\r\n                                focusableGroup: undefined,\r\n                                ariaLabel: undefined\r\n                            });\r\n                            marker.children.push(sprite);\r\n                            sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            marker.events.on(\"boundschanged\", () => {\r\n                                sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(LineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LineSeries\"\r\n});\r\nObject.defineProperty(LineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([LineSeries.className])\r\n});\r\n//# sourceMappingURL=LineSeries.js.map","/**\r\n * @ignore\r\n */\r\nexport class MonotoneXTension {\r\n    constructor(context, tension) {\r\n        Object.defineProperty(this, \"_line\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_t0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tension\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this._context = context;\r\n        this._tension = tension;\r\n    }\r\n    areaStart() {\r\n        this._line = 0;\r\n    }\r\n    areaEnd() {\r\n        this._line = NaN;\r\n    }\r\n    lineStart() {\r\n        this._x0 = this._x1 =\r\n            this._y0 = this._y1 =\r\n                this._t0 = NaN;\r\n        this._point = 0;\r\n    }\r\n    lineEnd() {\r\n        switch (this._point) {\r\n            case 2:\r\n                this._context.lineTo(this._x1, this._y1);\r\n                break;\r\n            case 3:\r\n                point(this, this._t0, slope2(this, this._t0));\r\n                break;\r\n        }\r\n        if (this._line || (this._line !== 0 && this._point === 1))\r\n            this._context.closePath();\r\n        this._line = 1 - this._line;\r\n    }\r\n    point(x, y) {\r\n        let t1 = NaN;\r\n        x = +x, y = +y;\r\n        if (x === this._x1 && y === this._y1)\r\n            return; // Ignore coincident points.\r\n        switch (this._point) {\r\n            case 0:\r\n                this._point = 1;\r\n                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\r\n                break;\r\n            case 1:\r\n                this._point = 2;\r\n                break;\r\n            case 2:\r\n                this._point = 3;\r\n                point(this, slope2(this, t1 = slope3(this, x, y)), t1);\r\n                break;\r\n            default:\r\n                point(this, this._t0, t1 = slope3(this, x, y));\r\n                break;\r\n        }\r\n        this._x0 = this._x1, this._x1 = x;\r\n        this._y0 = this._y1, this._y1 = y;\r\n        this._t0 = t1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function curveMonotoneXTension(tension) {\r\n    function monotoneXTension(context) {\r\n        return new MonotoneXTension(context, tension);\r\n    }\r\n    return monotoneXTension;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction sign(x) {\r\n    return x < 0 ? -1 : 1;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope3(that, x2, y2) {\r\n    let h0 = (that._x1 - that._x0);\r\n    let h1 = (x2 - that._x1);\r\n    let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\r\n    let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\r\n    let p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope2(that, t) {\r\n    let h = that._x1 - that._x0;\r\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction point(that, t0, t1) {\r\n    let x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 1.5 * (1 - that._tension);\r\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\r\n}\r\n//# sourceMappingURL=MonotoneXTension.js.map","import { LineSeries } from \"./LineSeries\";\r\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\r\n/**\r\n * Smoothed line series suitable for horizontal plots.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\r\n */\r\nexport class SmoothedXLineSeries extends LineSeries {\r\n    _afterNew() {\r\n        this._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n        super._afterNew();\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"tension\")) {\r\n            this.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n            this._valuesDirty = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n}\r\nObject.defineProperty(SmoothedXLineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SmoothedXLineSeries\"\r\n});\r\nObject.defineProperty(SmoothedXLineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: LineSeries.classNames.concat([SmoothedXLineSeries.className])\r\n});\r\n//# sourceMappingURL=SmoothedXLineSeries.js.map","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\r\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class PercentDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/percent\r\n         * ========================================================================\r\n         */\r\n        r(\"PercentSeries\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{valuePercentTotal.formatNumber('0.00p')}\",\r\n            colors: ColorSet.new(this._root, {}),\r\n            width: p100,\r\n            height: p100\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/pie\r\n         * ========================================================================\r\n         */\r\n        r(\"PieChart\").setAll({\r\n            radius: percent(80),\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").setAll({\r\n            alignLabels: true,\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").states.create(\"hidden\", { endAngle: -90, opacity: 0 });\r\n        r(\"Slice\", [\"pie\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            x: 0,\r\n            y: 0,\r\n            toggleKey: \"active\",\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            role: \"figure\",\r\n            lineJoin: \"round\"\r\n        });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"active\", { shiftRadius: 20, scale: 1 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hoverActive\", { scale: 1.04 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hover\", { scale: 1.04 });\r\n        r(\"RadialLabel\", [\"pie\"]).setAll({\r\n            textType: \"aligned\",\r\n            radius: 10,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            populateText: true\r\n        });\r\n        r(\"Tick\", [\"pie\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/funnel\r\n         * ========================================================================\r\n         */\r\n        r(\"SlicedChart\").setAll({\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Funnel\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"FunnelSeries\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            orientation: \"vertical\",\r\n            alignLabels: true,\r\n            sequencedInterpolation: true\r\n        });\r\n        r(\"FunnelSlice\").setAll({\r\n            interactive: true,\r\n            expandDistance: 0,\r\n            //tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"FunnelSlice\").states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"funnel\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"funnel\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        // Class: Label\r\n        r(\"Label\", [\"funnel\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"funnel\"]).setAll({\r\n            location: 1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            strokeOpacity: 0,\r\n            expandDistance: -0.1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"vertical\"]).setAll({\r\n            height: 10,\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"horizontal\"]).setAll({\r\n            width: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pyramid\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"PyramidSeries\").setAll({\r\n            valueIs: \"area\"\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\"]).setAll({\r\n            fillOpacity: 0.5\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"vertical\"]).setAll({\r\n            height: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"horizontal\"]).setAll({\r\n            width: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).setAll({\r\n            interactive: true,\r\n            expandDistance: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"pyramid\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"pyramid\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pictorial\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: FunnelSlice\r\n        r(\"FunnelSlice\", [\"pictorial\"]).setAll({\r\n            interactive: true,\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"Label\", [\"pictorial\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pictorial\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        r(\"Tick\", [\"pictorial\"]).setAll({\r\n            location: 0.5\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"pictorial\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.2\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=PercentDefaultTheme.js.map","import { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { PercentDefaultTheme } from \"./PercentDefaultTheme\";\r\n/**\r\n * Base class for [[PieChart]].\r\n *\r\n * Also used for percent-based series, like [[FunnelSeries]], [[PyramidSeries]], etc.\r\n *\r\n * @important\r\n */\r\nexport class PercentChart extends SerialChart {\r\n    _afterNew() {\r\n        this._defaultThemes.push(PercentDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this.chartContainer.children.push(this.seriesContainer);\r\n        this.seriesContainer.children.push(this.bulletsContainer);\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        this.seriesContainer.children.moveValue(this.bulletsContainer, this.seriesContainer.children.length - 1);\r\n    }\r\n}\r\nObject.defineProperty(PercentChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentChart\"\r\n});\r\nObject.defineProperty(PercentChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([PercentChart.className])\r\n});\r\n//# sourceMappingURL=PercentChart.js.map","import { __awaiter } from \"tslib\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { visualSettings } from \"../../core/render/Graphics\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A base class for any percent chart series.\r\n */\r\nexport class PercentSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"slicesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"ticksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_lLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_rLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_hLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slices in series.\r\n         *\r\n         * `slices.template` can also be used to configure slices.\r\n         */\r\n        Object.defineProperty(this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeSlices())\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure slice labels.\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeLabels())\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice ticks in series.\r\n         *\r\n         * `ticks.template` can also be used to configure slice ticks.\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeTicks())\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeSlice(dataItem) {\r\n        const slice = this.slicesContainer.children.push(this.slices.make());\r\n        slice.on(\"fill\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"fillPattern\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"stroke\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice._setDataItem(dataItem);\r\n        dataItem.set(\"slice\", slice);\r\n        this.slices.push(slice);\r\n        return slice;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem) {\r\n        const label = this.labelsContainer.children.push(this.labels.make());\r\n        label._setDataItem(dataItem);\r\n        dataItem.set(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        if (dataItem.get(\"value\") != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem) {\r\n        const tick = this.ticksContainer.children.push(this.ticks.make());\r\n        tick._setDataItem(dataItem);\r\n        dataItem.set(\"tick\", tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"category\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    _onDataClear() {\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n        const patterns = this.get(\"patterns\");\r\n        if (patterns) {\r\n            patterns.reset();\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._lLabels = [];\r\n        this._rLabels = [];\r\n        this._hLabels = [];\r\n        if (this._valuesDirty) {\r\n            let sum = 0;\r\n            let absSum = 0;\r\n            let valueHigh = 0;\r\n            let valueLow = Infinity;\r\n            let count = 0;\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let valueWorking = dataItem.get(\"valueWorking\", 0);\r\n                sum += valueWorking;\r\n                absSum += Math.abs(valueWorking);\r\n            });\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let value = dataItem.get(\"valueWorking\", 0);\r\n                if (value > valueHigh) {\r\n                    valueHigh = value;\r\n                }\r\n                if (value < valueLow) {\r\n                    valueLow = value;\r\n                }\r\n                count++;\r\n                let percentTotal = value / absSum;\r\n                if (absSum == 0) {\r\n                    percentTotal = 0;\r\n                }\r\n                dataItem.setRaw(\"valuePercentTotal\", percentTotal * 100);\r\n            });\r\n            this.setPrivateRaw(\"valueLow\", valueLow);\r\n            this.setPrivateRaw(\"valueHigh\", valueHigh);\r\n            this.setPrivateRaw(\"valueSum\", sum);\r\n            this.setPrivateRaw(\"valueAverage\", sum / count);\r\n            this.setPrivateRaw(\"valueAbsoluteSum\", absSum);\r\n        }\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hide whole series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this._valuesDirty) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                dataItem.get(\"label\").text.markDirtyText();\r\n            });\r\n        }\r\n        if (this.isDirty(\"legendLabelText\") || this.isDirty(\"legendValueText\")) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                this.updateLegendValue(dataItem);\r\n            });\r\n        }\r\n        this._arrange();\r\n    }\r\n    _arrange() {\r\n        this._arrangeDown(this._lLabels);\r\n        this._arrangeUp(this._lLabels);\r\n        this._arrangeDown(this._rLabels);\r\n        this._arrangeUp(this._rLabels);\r\n        this._arrangeLeft(this._hLabels);\r\n        this._arrangeRight(this._hLabels);\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            this._updateTick(dataItem);\r\n        });\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        this._arrange();\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n        if (dataItem.get(\"fillPattern\") == null) {\r\n            let patterns = this.get(\"patterns\");\r\n            if (patterns) {\r\n                dataItem.setRaw(\"fillPattern\", patterns.next());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            let value = dataItem.get(\"value\");\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: value, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.show(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.show(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                promises.push(slice.show(duration));\r\n            }\r\n            if (slice.get(\"active\")) {\r\n                slice.states.applyAnimate(\"active\");\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.hide(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.hide(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            slice.hideTooltip();\r\n            if (slice) {\r\n                promises.push(slice.hide(duration));\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            this.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        let slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            this.slices.removeValue(slice);\r\n            slice.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice && !slice.isHidden()) {\r\n            slice.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            slice.unhover();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        if (dataItem) {\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const legendDataItem = dataItem.get(\"legendDataItem\");\r\n                if (legendDataItem) {\r\n                    const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                    $array.each(visualSettings, (setting) => {\r\n                        if (slice.get(setting) != null) {\r\n                            markerRectangle.set(setting, slice.get(setting));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _arrangeDown(labels) {\r\n        if (labels) {\r\n            let next = this._getNextDown();\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelTop = bounds.top;\r\n                if (l.y + labelTop < next) {\r\n                    l.y = next - labelTop;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.bottom;\r\n            });\r\n        }\r\n    }\r\n    _getNextUp() {\r\n        return this.labelsContainer.maxHeight();\r\n    }\r\n    _getNextDown() {\r\n        return 0;\r\n    }\r\n    _arrangeUp(labels) {\r\n        if (labels) {\r\n            let next = this._getNextUp();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelBottom = bounds.bottom;\r\n                if (l.y + labelBottom > next) {\r\n                    l.y = next - labelBottom;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.top;\r\n            });\r\n        }\r\n    }\r\n    _arrangeRight(labels) {\r\n        if (labels) {\r\n            let next = 0;\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelLeft = bounds.left;\r\n                if (l.y + labelLeft < next) {\r\n                    l.y = next - labelLeft;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.right;\r\n            });\r\n        }\r\n    }\r\n    _arrangeLeft(labels) {\r\n        if (labels) {\r\n            let next = this.labelsContainer.maxWidth();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelRight = bounds.right;\r\n                if (l.y + labelRight > next) {\r\n                    l.y = next - labelRight;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.left;\r\n            });\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirty();\r\n    }\r\n    _updateTick(_dataItem) {\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PercentSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentSeries\"\r\n});\r\nObject.defineProperty(PercentSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([PercentSeries.className])\r\n});\r\n//# sourceMappingURL=PercentSeries.js.map","import { Percent } from \"../../core/util/Percent\";\r\nimport { PercentChart } from \"../percent/PercentChart\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates a pie chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieChart extends PercentChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_maxRadius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.seriesContainer.setAll({ x: p50, y: p50 });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chartContainer = this.chartContainer;\r\n        const w = chartContainer.innerWidth();\r\n        const h = chartContainer.innerHeight();\r\n        const startAngle = this.get(\"startAngle\", 0);\r\n        const endAngle = this.get(\"endAngle\", 0);\r\n        const innerRadius = this.get(\"innerRadius\");\r\n        let bounds = $math.getArcBounds(0, 0, startAngle, endAngle, 1);\r\n        const wr = w / (bounds.right - bounds.left);\r\n        const hr = h / (bounds.bottom - bounds.top);\r\n        let innerBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n        if (innerRadius instanceof Percent) {\r\n            let value = innerRadius.value;\r\n            let mr = Math.min(wr, hr);\r\n            value = Math.max(mr * value, mr - Math.min(h, w)) / mr;\r\n            innerBounds = $math.getArcBounds(0, 0, startAngle, endAngle, value);\r\n            this.setPrivateRaw(\"irModifyer\", value / innerRadius.value);\r\n        }\r\n        bounds = $math.mergeBounds([bounds, innerBounds]);\r\n        const prevRadius = this._maxRadius;\r\n        this._maxRadius = Math.min(wr, hr);\r\n        const radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        this.seriesContainer.setAll({\r\n            dy: -radius * (bounds.bottom + bounds.top) / 2, dx: -radius * (bounds.right + bounds.left) / 2\r\n        });\r\n        if (this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || prevRadius != this._maxRadius) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"startAngle\");\r\n            });\r\n        }\r\n        if (this.isDirty(\"innerRadius\") || this.isDirty(\"radius\")) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"innerRadius\");\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns outer radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return outer radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    radius(series) {\r\n        let radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesRadius = series.get(\"radius\");\r\n            if (seriesRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * (index + 1);\r\n            }\r\n        }\r\n        return radius;\r\n    }\r\n    /**\r\n     * Returns inner radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return inner radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    innerRadius(series) {\r\n        const radius = this.radius();\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesInnerRadius = series.get(\"innerRadius\");\r\n            if (seriesInnerRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesInnerRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * index;\r\n            }\r\n        }\r\n        return innerRadius;\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirtyKey(\"radius\");\r\n    }\r\n}\r\nObject.defineProperty(PieChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieChart\"\r\n});\r\nObject.defineProperty(PieChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentChart.classNames.concat([PieChart.className])\r\n});\r\n//# sourceMappingURL=PieChart.js.map","import { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a series for a [[PieChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieSeries extends PercentSeries {\r\n    _makeSlices() {\r\n        return new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.slices.template]));\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => RadialLabel._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.labels.template]));\r\n    }\r\n    _makeTicks() {\r\n        return new ListTemplate(Template.new({}), () => Tick._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.ticks.template]));\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const slice = this.makeSlice(dataItem);\r\n        slice.on(\"scale\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.on(\"shiftRadius\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        const label = this.makeLabel(dataItem);\r\n        label.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        this.makeTick(dataItem);\r\n        slice.events.on(\"positionchanged\", () => {\r\n            label.markDirty();\r\n        });\r\n    }\r\n    _getNextUp() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart._maxRadius;\r\n        }\r\n        return this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _getNextDown() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return -chart._maxRadius;\r\n        }\r\n        return -this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (this.isDirty(\"alignLabels\")) {\r\n                let labelsTemplate = this.labels.template;\r\n                if (this.get(\"alignLabels\")) {\r\n                    labelsTemplate.set(\"textType\", \"aligned\");\r\n                }\r\n                else {\r\n                    let textType = labelsTemplate.get(\"textType\");\r\n                    if (textType == null || textType == \"aligned\") {\r\n                        labelsTemplate.set(\"textType\", \"adjusted\");\r\n                    }\r\n                }\r\n            }\r\n            if (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\r\n                this.markDirtyBounds();\r\n                const startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n                const endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n                const arc = endAngle - startAngle;\r\n                let currentAngle = startAngle;\r\n                const radius = chart.radius(this);\r\n                this.setPrivateRaw(\"radius\", radius);\r\n                let innerRadius = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\r\n                if (innerRadius < 0) {\r\n                    innerRadius = radius + innerRadius;\r\n                }\r\n                //if (radius > 0) {\r\n                $array.each(this._dataItems, (dataItem) => {\r\n                    this.updateLegendValue(dataItem);\r\n                    let currentArc = arc * dataItem.get(\"valuePercentTotal\") / 100;\r\n                    const slice = dataItem.get(\"slice\");\r\n                    if (slice) {\r\n                        slice.set(\"radius\", radius);\r\n                        slice.set(\"innerRadius\", innerRadius);\r\n                        slice.set(\"startAngle\", currentAngle);\r\n                        slice.set(\"arc\", currentArc);\r\n                        const color = dataItem.get(\"fill\");\r\n                        slice._setDefault(\"fill\", color);\r\n                        slice._setDefault(\"stroke\", color);\r\n                        const fillPattern = dataItem.get(\"fillPattern\");\r\n                        slice._setDefault(\"fillPattern\", fillPattern);\r\n                    }\r\n                    let middleAngle = $math.normalizeAngle(currentAngle + currentArc / 2);\r\n                    const label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.setPrivate(\"radius\", radius);\r\n                        label.setPrivate(\"innerRadius\", innerRadius);\r\n                        label.set(\"labelAngle\", middleAngle);\r\n                        if (label.get(\"textType\") == \"aligned\") {\r\n                            let labelRadius = radius + label.get(\"radius\", 0);\r\n                            let y = radius * $math.sin(middleAngle);\r\n                            if (middleAngle > 90 && middleAngle <= 270) {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._lLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius *= -1;\r\n                                labelRadius -= this.labelsContainer.get(\"paddingLeft\", 0);\r\n                                label.set(\"centerX\", p100);\r\n                                label.setPrivateRaw(\"left\", true);\r\n                            }\r\n                            else {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._rLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius += this.labelsContainer.get(\"paddingRight\", 0);\r\n                                label.set(\"centerX\", 0);\r\n                                label.setPrivateRaw(\"left\", false);\r\n                            }\r\n                            label.set(\"x\", labelRadius);\r\n                            label.set(\"y\", radius * $math.sin(middleAngle));\r\n                        }\r\n                    }\r\n                    currentAngle += currentArc;\r\n                    this._updateTick(dataItem);\r\n                });\r\n                //}\r\n            }\r\n        }\r\n    }\r\n    _updateTick(dataItem) {\r\n        const tick = dataItem.get(\"tick\");\r\n        const label = dataItem.get(\"label\");\r\n        const slice = dataItem.get(\"slice\");\r\n        const location = tick.get(\"location\", 1);\r\n        if (tick && label && slice) {\r\n            const radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\r\n            const labelAngle = label.get(\"labelAngle\", 0);\r\n            const cos = $math.cos(labelAngle);\r\n            const sin = $math.sin(labelAngle);\r\n            const labelsContainer = this.labelsContainer;\r\n            const pl = labelsContainer.get(\"paddingLeft\", 0);\r\n            const pr = labelsContainer.get(\"paddingRight\", 0);\r\n            let x = 0;\r\n            let y = 0;\r\n            x = label.x();\r\n            y = label.y();\r\n            let points = [];\r\n            if (x != 0 || y != 0) {\r\n                if (label.get(\"textType\") == \"circular\") {\r\n                    const labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\r\n                    const labelAngle = label.get(\"labelAngle\", 0);\r\n                    x = labelRadius * $math.cos(labelAngle);\r\n                    y = labelRadius * $math.sin(labelAngle);\r\n                }\r\n                let dx = -pr;\r\n                if (label.getPrivate(\"left\")) {\r\n                    dx = pl;\r\n                }\r\n                points = [{ x: slice.x() + radius * cos, y: slice.y() + radius * sin }, { x: x + dx, y: y }, { x: x, y: y }];\r\n            }\r\n            tick.set(\"points\", points);\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const innerRadius = slice.get(\"innerRadius\", 0);\r\n                const radius = slice.get(\"radius\", 0);\r\n                const startAngle = slice.get(\"startAngle\", 0);\r\n                const arc = slice.get(\"arc\", 0);\r\n                const locationX = bullet.get(\"locationX\", 0.5);\r\n                const locationY = bullet.get(\"locationY\", 0.5);\r\n                const angle = startAngle + arc * locationX;\r\n                const r = innerRadius + (radius - innerRadius) * locationY;\r\n                sprite.setAll({ x: $math.cos(angle) * r, y: $math.sin(angle) * r });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PieSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieSeries\"\r\n});\r\nObject.defineProperty(PieSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentSeries.classNames.concat([PieSeries.className])\r\n});\r\n//# sourceMappingURL=PieSeries.js.map"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","_extends","target","i","source","key","Action","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","value","message","warning","cond","createKey","getHistoryState","location","index","current","state","parsePath","_ref","path","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace","createURL","base","href","fn","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","caseSensitive","params","regexpSource","_","v","startIndex","nextChar","paths","isRouteErrorResponse","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useRoutes","useRoutesImpl","dataRouterState","future","navigator","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","defaultErrorElement","RenderErrorBoundary","props","errorInfo","RenderedRoute","routeContext","children","dataRouterContext","_dataRouterState","_future","errors","errorIndex","renderFallback","fallbackIndex","loaderData","needsToRunLoader","outlet","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","warningOnce","getChildren","DataRouterStateHook","useDataRouterState","hookName","useRouteContext","useCurrentRouteId","thisRoute","_state$errors","routeId","alreadyWarned$1","logV6DeprecationWarnings","renderFuture","routerFuture","Route","_props","Router","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","element","treePath","REACT_ROUTER_VERSION","startTransitionImpl","BrowserRouter","_ref4","historyRef","setStateImpl","v7_startTransition","setState","newState","UNSAFE_logV6DeprecationWarnings","DataRouterHook","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","reject","fulfilled","step","rejected","Percent","percent","min","max","p100","p50","isPercent","isNaN","getType","toNumber","isNumber","converted","isString","toDate","isDate","num","numberToString","negative","parsed","digits","decimals","res","exponent","zeros","repeat","string","amount","isObject","PLACEHOLDER","PLACEHOLDER2","indexOf","array","length","any","test","map","output","each","eachReverse","eachContinue","remove","found","removeFirst","move","toIndex","removeIndex","pushOne","copy","insertIndex","findIndex","findIndexReverse","find","findReverse","getSortedIndex","ordering","start","pivot","order","getFirstSortedIndex","keepIf","keep","keys","object","keysOrdered","hasKey","DisposerClass","Disposer","dispose","ArrayDisposer","$array.each","x","MultiDisposer","disposers","CounterDisposer","removeElement","el","addEventListener","dom","type","onZoom","_ev","supports","cap","getPointerId","event","blur","input","focus","getRendererEvent","isTouchEvent","ev","setStyle","property","getStyle","getEventTarget","contains","cursor","isLocalEvent","setInteractive","interactive","getEventKey","iOS","getSafeResolution","relativeToValue","full","$type.isNumber","decimalPlaces","number","padString","len","char","trimLeft","text","trimRight","trim","truncateTextWithEllipsis","maxLength","breakWords","ellipsis","lastNonAlphanumericIndex","cleanFormat","format","stripTags","escapeForRgex","splitString","rtlChar","splitPattern","parts","part","getYearDay","date","utc","diff","oneDay","getWeek","_utc","day","firstDay","getWeekYear","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","week","year","weekday","get12Hours","hours","getTimeZone","long","savings","timezone","d1","d2","wotz","wtz","getTimezoneOffset","targetDate","utcDate","capitalizeFirst","hslToRgb","color","r","hue2rgb","t","rgbToHsl","lighten","rgb","getLightnessStep","brighten","isLight","saturate","saturation","hsl","alternativeColor","lightAlternative","darkAlternative","light","dark","mergeTags","tags1","tags2","self","sameBounds","string2hex","rgba2hex","hex","val","Color","alpha","$utils.padString","$utils.rgbToHsl","$utils.hslToRgb","$type.isString","$utils.alternativeColor","from","mode","fromHSL","toHSL","range","$utils.lighten","$utils.brighten","$utils.saturate","EventDispatcher","$array.any","once","callback","context","info","$array.findIndex","count","killed","shouldClone","dispatch","_type","waitForAnimations","animations","promises","$object.each","animation","defaultInterpolate","percentInterpolate","colorInterpolate","getInterpolate","AnimationState","checkBounds","List","initial","$array.indexOf","newValue","oldValue","oldIndex","newIndex","oldValues","$array.insertIndex","value_a","value_b","$array.removeIndex","values","newArray","old","$array.eachReverse","ListAutoDispose","currentAutoDispose","ListTemplate","template","make","Children","container","change","child","childrenDisplay","PI","RADIANS","DEGREES","round","precision","floor","ceil","fitToRange","sin","angle","cos","normalizeAngle","getArcBounds","cx","cy","startAngle","endAngle","radius","minX","minY","maxX","maxY","bpoints","getArcPoint","fromAngle","toAngle","pt","arc","mergeBounds","bounds","bound","left","top","right","bottom","inBounds","point","linear","cubic","out","ease","State","entity","settings","fallback","$object.keys","seen","defaultState","duration","easing","$ease.cubic","States","name","Registry","registry","compare","compareArray","leftLength","rightLength","compareNumber","Adapters","callbacks","$array.removeFirst","Animation","loops","startingTime","_reject","stopped","currentTime","counter","Settings$1","playing","paused","_key","events","$ease.linear","Entity","Settings","root","isReal","templates","shouldApply","disposer","_name","_duration","other","$array.findReverse","$array.find","force","isConnected","defaults","themes","themeTags","tags","tag","theme","allRules","rules","rule","$array.getFirstSortedIndex","$order.compare","$order.compareArray","id","prevId","delay","$array.remove","locale","disposeSettings","$type.isObject","TemplateState","TemplateStates","TemplateAdapters","Template","_value","SpriteEventDispatcher","sprite","rendererEvent","strokeWidth","$math.inBounds","Sprite","field","dataItem","oldDataItem","eventType","parent","$array.pushOne","centerX","$utils.relativeToValue","centerY","previous","tooltipMoveDp","tooltipPointerDp","display","draggable","tooltipText","tooltipHTML","showTooltipOn","tooltip","$utils.addEventListener","toggleKey","wheelable","filter","brightness","contrast","sepia","hue","invert","$utils.isTouchEvent","pointerId","$utils.getPointerId","downPoint","y","dragEvent","scale","dragPoint","$math.cos","$math.sin","depth","oldBounds","newBounds","minWidth","minHeight","privateWidth","privateHeight","tooltipPosition","tooltipTarget","lastTooltipCoords","promise","timeout","dx","dy","_x","xx","yy","position","_y","p0","p1","p2","p3","success","_error","opacity","rotation","width","maxWidth","w","maxHeight","height","updateChildren","prevParent","$object.keysOrdered","Pattern","repetition","fill","fillOpacity","backgroundDisplay","PicturePattern","canvas","colorOpacity","image","patternWidth","patternHeight","fit","centered","src","BlendMode","visualSettings","Graphics","gradient","gradientTarget","strokeDasharray","strokeDashoffset","blendMode","draw","svgPath","fillGradient","fillPattern","stroke","strokeGradient","strokePattern","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","stops","stop","strokeOpacity","lineJoin","lineCap","Rectangle","wSign","hSign","eachChildren","Layout","HorizontalLayout","paddingLeft","availableWidth","totalPercent","childWidth","prevX","marginLeft","marginRight","VerticalLayout","paddingTop","availableHeight","childHeight","prevY","marginTop","marginBottom","GridLayout","paddingRight","minCellWidth","maxCellWidth","$math.fitToRange","columnCount","columnWidths","column","maxColumnHeight","totalWidth","TextFormatter","quotedBlocks","noFormatting","chunks","chunk","$type.PLACEHOLDER","chunks2","i2","chunk2","style","populateString","getTagValue","tagName","reg","dateFields","numericFields","durationFields","$utils.trim","reg2","matches2","getTagValueFromObject","dataContext","getCustomDataValue","prop","customData","formatApplied","tmp","numberValue","$type.toNumber","dateValue","$type.toDate","$type.isDate","$type.isNaN","durationValue","formatParts","Container","contentMask","background","verticalScrollbar","bg","visible","pWidth","pHeight","layout","horizontal","vertical","paddingBottom","childBounds","childX","childY","cl","cr","ct","cb","innerWidth","innerHeight","html","ch","contentH","pos","wheelEvent","$utils.isLocalEvent","shiftY","mask","updated","Text","textStyle","styleName","$utils.truncateTextWithEllipsis","ariaLabel","Native","entries","entry","$array.keepIf","Raf","lastTime","loop","newSize","size","observer","makeSensor","ResizeSensor","$utils.onZoom","InterfaceColors","Label","propValue","textAlign","htmlElement","PointedRectangle","bwh","xtl","ytl","xtr","ytr","xbr","ybr","xbl","ybl","stemX","stemY","Tooltip","$utils.mergeTags","outEvent","cw","parentW","parentH","tooltipContainer","layerMargin","pointTo","pointerOrientation","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","animationDuration","animationEasing","NumberFormatter","bns","sns","bs","formatted","$utils.cleanFormat","details","$object.copy","language","thousandSeparator","decimalSeparator","$type.PLACEHOLDER2","_part","item","partFormat","mods","prefix","suffix","ol","exp","$utils.decimalPlaces","$type.numberToString","ints","ip","intsr","decs","prefixes","newvalue","applied","parseDate","month","hour","minute","second","millisecond","toUTCDate","Timezone","offset","userOffset","newUserOffset","dtf","DateFormatter","ignoreTimezone","locales","originalDate","fullYear","minutes","seconds","milliseconds","timestamp","$utils.getWeekYear","$utils.getWeek","$utils.getMonthWeek","$utils.getYearDay","$utils.get12Hours","$utils.getTimeZone","$utils.getTimezoneOffset","tz","tzh","tzm","dateFormat","parsedIndexes","resValues","indexAdjust","regex","$utils.getDayFromWeek","ts","zone","dir","originalOffset","list","$utils.escapeForRgex","DurationFormatter","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","dyear","asecond","aminute","ahour","aday","aweek","amonth","ayear","baseUnit","dirs","tstamp","unit","unitValue","code","maxValue","maxUnit","currentUnit","ms","$object.eachContinue","timeUnit","en","Language","prompt","translation","localeTarget","translations","$array.map","Theme","themeClass","$array.getSortedIndex","setColor","ic","DefaultTheme","horizontalLayout","verticalLayout","$ease.out","Matrix","tx","ty","pivotX","pivotY","origin","matrix","a1","b1","c1","tx1","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_i","_s","err","TAU","mapToEllipse","rx","ry","cosphi","sinphi","centerx","centery","xp","yp","approxUnitArc","ang1","ang2","x1","y1","x2","y2","vectorAngle","ux","uy","vx","vy","sign","dot","getArcCenter","px","py","largeArcFlag","sweepFlag","pxp","pyp","rxsq","rysq","pxpsq","pypsq","radicant","centerxp","centeryp","vx1","vy1","vx2","vy2","arcToBezier","_ref2","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","_ref2$sweepFlag","curves","lambda","_getArcCenter","_getArcCenter2","ratio","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","checkArgs","actual","expected","checkMinArgs","checkEvenArgs","splitArcFlags","args","flag","assertBinary","distributeId","eachTargets","hitTarget","onPointerEvent","$utils.getRendererEvent","$utils.getEventTarget","touches","$array.copy","isTainted","clearCanvas","view","crisp","CanvasPivot","CanvasDisplayObject","renderer","status","margin","$utils.setInteractive","_bounds","resolution","layer","targetGhostLayer","subStatus","layers","ghostLayer","ghostContext","$array.move","_targetGhostLayer","CanvasContainer","deep","setPoint","Op","_context","_forceColor","forceColor","BeginPath","BeginFill","EndFill","clearShadow","EndStroke","LineStyle","LineDash","dash","LineDashOffset","dashOffset","DrawRect","DrawCircle","DrawEllipse","radiusX","radiusY","Arc","anticlockwise","arcBounds","$math.getArcBounds","$math.DEGREES","ArcTo","LineTo","MoveTo","ClosePath","BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","QuadraticCurveTo","Shadow","offsetX","offsetY","GraphicsImage","CanvasGraphics","op","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","relative","layerDirty","ghostOnly","drawGhost","CanvasText","ignoreGhost","ignoreFontWeight","fontStyle","style2","line","_index","thickness","fontSize","oversizedBehavior","metrics","rtl","truncate","wrap","refText","lines","styleRestored","currentStyle","lineInfo","currentFormat","currentDecoration","currentFill","currentChunkWidth","skipFurtherText","firstTextChunk","leftoverChunks","currentVerticalAlign","$array.eachContinue","chunkWidth","ellipsisMetrics","ellipsisWidth","excessWidth","tmpText","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","currentChunkOffset","maxW","maxH","fallbackBreakWords","fakeMetrics","div","bbox","CanvasTextStyle","CanvasRadialText","deltaAngle","orientation","inward","inside","align","kerning","clockwise","shouldReverse","maxAngle","midAngle","$math.normalizeAngle","textHeight","lineStartAngle","angleShift","charWidth","chars","$utils.splitString","CanvasImage","CanvasRendererEvent","originalPoint","$utils.supports","CanvasRenderer","GhostLayer","prevent","obj","radius1","radius2","graphics","realWidth","realHeight","calculatedWidth","calculatedHeight","willReadFrequently","CanvasLayer","existingLayer","layerIndex","next","deferredGhostLayers","layerx","native","originalEvent","adjustPoint","widthScale","heightScale","pixel","colorId","data","dispatched","originalTarget","button","dragged","$utils.setStyle","$utils.getStyle","clickevent","timer","clear","mouseup","pointercancel","mousedown","mousemove","canvasWidth","canvasHeight","minScale","maxScale","canvases","forceRender","needRerender","extraX","extraY","domWidth","domHeight","rAF","fps","Root","$utils.getSafeResolution","inner","tooltipContainerBounds","logo","rect","rootContainer","htmlElementContainer","readerAlertElement","focusElementContainer","tooltipElementContainer","eventKey","$utils.getEventKey","focusedSprite","announceText","downEvent","$utils.blur","dragOffsetX","dragOffsetY","moveEvent","upEvent","group","items","lastIndex","$utils.focus","running","allParents","objects","depths","dirtyPositions","animationDone","now","endTime","$utils.removeElement","$utils.stripTags","interfaceColors","tooltipContainerSettings","aindex","bindex","groups","focusElement","role","label","ariaLive","ariaChecked","ariaCurrent","ariaSelected","ariaOrientation","ariaValueNow","ariaValueMin","ariaValueMax","ariaValueText","ariaControls","padding","focused","direction","focusableElements","targetElement","tooltipElement","scaleWidth","scaleHeight","styles","fontHash","changed","needWrapper","wrapperTarget","htmlElementWrapper","setting","lw","lh","ll","lr","lt","lb","previousBounds","originX","originY","Bullet","RoundedRectangle","minSide","crtl","crtr","crbr","crbl","maxcr","Button","icon","Circle","ListData","DataItem","component","Component","dataItems","properties","_dataItem","sleep","firstDateOfWeek","firstDate","timeZoneOffset","wday","weekDay","newTimeZoneOffset","initialTime","tzoffset","parsedDate","offsetDif","newTime","hDuration","newDiff","Series","bullets","bullet","bulletFunction","endIndex","baseValueSeries","markerRectangle","legendDataItem","fields","sum","absSum","low","high","open","close","average","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","adjustedStartIndex","minValue","states","propertyValue","_bullet","chart","bulletsContainer","_super","show","realDuration","$time.sleep","valueLabel","txt","Legend","itemContainer","marker","nameField","fillField","strokeField","clickTarget","useDefaultMarker","clickContainer","targetA","targetB","indexA","indexB","labelText","segmentedLine","firstGroup","firstPoint","points","Line","$draw.segmentedLine","RadialText","$math.RADIANS","RadialLabel","radiusPrivate","innerRadiusPrivate","baseRadius","textType","labelAngle","constant","abs","atan2","sqrt","epsilon","pi","halfPi","tau","acos","asin","tauEpsilon","append","strings","appendRound","Path","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","a0","ccw","da","withPath","shape","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","intersect","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","innerRadius","outerRadius","cornerRadius","padRadius","padAngle","buffer","r0","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","t0","t1","oc","ax","ay","bx","by","kc","lc","Linear","curveLinear","defined","pointX","pointY","defined0","area","j","x0z","y0z","arealine","Slice","tooltipX","tooltipY","dRadius","dInnerRadius","middleAngle","shiftRadius","Chart","SerialChart","series","colors","patterns","aIndex","bIndex","Tick","ColorSet","pass","passOptions","reuse","currentStep","XYChartDefaultTheme","axisFill","gridIntervals","dateFormats","periodChangeDateFormats","tooltipDateFormats","axis","endValue","intervalDuration","baseInterval","gridInterval","$time.round","$math.round","XYChart","zoomOutButton","plotContainer","xAxis","yAxis","snapToSeries","wheelX","wheelY","plotPoint","wheelStep","shiftX","wheelZoomPositionX","wheelZoomPositionY","maxDeviation","newStart","newEnd","se","local","panX","panY","scrollbarX","panStart","panEnd","deltaX","scrollbarY","deltaY","downPoints","movePoints","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","initialDistance","currentDistance","sa","ea","downStartY","downEndY","cursorPoint","snapToSeriesBy","tooltipDataItem","minDistance","closestItem","distance","colorSet","patternSet","behavior","downPositionX","downPositionY","positionX","positionY","position0","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","axisParent","gridContainer","gridParent","topGridContainer","topGridParent","bottomAxesContainer","topAxesContainer","otherCharts","global","chartPlotContainer","documentPoint","chartRoot","hh","plotT","plotB","tooltips","maxTooltipDistance","maxTooltipDistanceBy","closest","closestPoint","tooltipSeries","hidden","totalTooltipH","tooltipCount","$order.compareNumber","prevBottom","Grid","XYCursor","ctrlKey","inversed","syncWith","rootPoint","moveThreshold","lastPoint","skipEvent","alwaysShow","xyPos","userPositionX","userPositionY","xy","selection","XYSeries","axisRange","axisDataItem","baseAxis","minBulletDistance","xName","xCapName","$utils.capitalizeFirst","yName","yCapName","xLetter","yLetter","hiddenState","sequencedInterpolation","tooltipPositionX","tooltipFieldX","tooltipPositionY","tooltipFieldY","stacked","vcx","vcy","outOfSelection","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","mainContainerMask","seriesIndex","stackToItemKey","stackToNegative","stackToSeries","stackToItem","stackValue","stackedToSeries","locationX","locationY","exactLocationX","exactLocationY","realField","previousBullet","yo","xo","_positionX","_positionY","dataSet","baseValue","stackedSeries","itemLocationX","itemLocationY","xPos","yPos","_position","baseDuration","minSelection","dl","Axis","_start","_end","sAnimation","eAnimation","maxZoomFactor","maxZoomFactorReal","minZoomCount","maxZoomCount","minZoomFactor","above","grid","rendererTags","forceHidden","fh","tick","minor","_a","_b","_c","axisBullet","ghostLabel","gWidth","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","_series","ValueAxis","syncWithAxis","someDirty","getMM","letter","numberFormat","formatter","logarithmic","selectionMin","selectionMax","differencePower","minLog","minorLabelsEnabled","minorGridEnabled","stepPower","stepAdjusted","minorGridCount","minorStep","nextValue","minorValue","minorDataItem","minorLabel","decCount","endPosition","fillEndPosition","labelEndPosition","labelEndValue","fillRule","gridCount","minMaxStep","stepDecimalPlaces","treatZeroAs","_cellLocation","axisLocation","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","strictMinMax","seriesMin","seriesMax","smin","minMaxStep2","selectionMinReal","selectionMaxReal","minDiff","initialMin","initialMax","minAdapted","maxAdapted","strictMinMaxSelection","strict","power","_min","_max","strictMode","difference","extra","stepDivisor","maxPrecision","ceiledStep","$math.ceil","minCount","maxCount","_adjustPosition","extraDecimals","fieldName","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","CategoryAxis","startCategory","endCategory","otherAxis","startDataItem","endDataItem","hasValue","frequency","fillIndex","categoryLocation","endCategoryLocation","fillEndIndex","cellLocation","_axisLocation","category","startLocation","endLocation","seriesDataItem","AxisLabel","AxisTick","AxisRenderer","thumb","labelsContainer","pan","_event","downStart","downEnd","_point1","_point2","_tooltip","minPosition","maxPosition","updatedStart","updatedEnd","AxisRendererX","gridTemplate","opposite","axisChildren","point1","point2","axisHeader","bulletPosition","previousSprite","$utils.sameBounds","AxisRendererY","LineSeries","strokes","fills","legendStroke","legendFill","curveFactory","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataItemIndex","currentEndIndex","autoGapCount","connect","fillTemplate","originalTemplate","strokeTemplate","xField","yField","xOpenField","yOpenField","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","openLocationX","openLocationY","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","valueX","valueY","nextItem","iPoint","xPos0","yPos0","stackToItemX","stackToItemY","closeIPoint","prev","pp0","pp1","pp2","pp3","_points","_firstPoint","disabledColor","MonotoneXTension","tension","slope2","slope3","curveMonotoneXTension","monotoneXTension","that","h0","h1","s0","s1","SmoothedXLineSeries","AnimatedTheme","PercentDefaultTheme","PercentChart","PercentSeries","slice","valueHigh","valueLow","valueWorking","percentTotal","labels","labelTop","labelBottom","labelLeft","labelRight","chartContainer","wr","hr","innerBounds","mr","$math.mergeBounds","prevRadius","seriesRadius","seriesInnerRadius","PieChart","PieSeries","labelsTemplate","currentAngle","currentArc","labelRadius","pl","pr"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105]}