{"version":3,"file":"analytics.build.js","sources":["../../src/Analytics/services/AnalyticsDataProvider.js","../../node_modules/date-fns/toDate.mjs","../../node_modules/date-fns/constructFrom.mjs","../../node_modules/date-fns/addDays.mjs","../../node_modules/date-fns/addMonths.mjs","../../node_modules/date-fns/constants.mjs","../../node_modules/date-fns/_lib/defaultOptions.mjs","../../node_modules/date-fns/startOfWeek.mjs","../../node_modules/date-fns/startOfISOWeek.mjs","../../node_modules/date-fns/getISOWeekYear.mjs","../../node_modules/date-fns/startOfDay.mjs","../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","../../node_modules/date-fns/differenceInCalendarDays.mjs","../../node_modules/date-fns/startOfISOWeekYear.mjs","../../node_modules/date-fns/addQuarters.mjs","../../node_modules/date-fns/addWeeks.mjs","../../node_modules/date-fns/isSameDay.mjs","../../node_modules/date-fns/isDate.mjs","../../node_modules/date-fns/isValid.mjs","../../node_modules/date-fns/differenceInDays.mjs","../../node_modules/date-fns/endOfDay.mjs","../../node_modules/date-fns/startOfYear.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","../../node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","../../node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","../../node_modules/date-fns/locale/en-US/_lib/localize.mjs","../../node_modules/date-fns/locale/_lib/buildMatchFn.mjs","../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","../../node_modules/date-fns/locale/en-US/_lib/match.mjs","../../node_modules/date-fns/locale/en-US.mjs","../../node_modules/date-fns/getDayOfYear.mjs","../../node_modules/date-fns/getISOWeek.mjs","../../node_modules/date-fns/getWeekYear.mjs","../../node_modules/date-fns/startOfWeekYear.mjs","../../node_modules/date-fns/getWeek.mjs","../../node_modules/date-fns/_lib/addLeadingZeros.mjs","../../node_modules/date-fns/_lib/format/lightFormatters.mjs","../../node_modules/date-fns/_lib/format/formatters.mjs","../../node_modules/date-fns/_lib/format/longFormatters.mjs","../../node_modules/date-fns/_lib/protectedTokens.mjs","../../node_modules/date-fns/format.mjs","../../node_modules/date-fns/isWithinInterval.mjs","../../node_modules/date-fns/subDays.mjs","../../node_modules/date-fns/subMonths.mjs","../../node_modules/date-fns/subQuarters.mjs","../../node_modules/date-fns/subWeeks.mjs","../../node_modules/tslib/tslib.es6.mjs","../../node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/List.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/States.js","../../node_modules/@amcharts/amcharts5/.internal/core/Registry.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","../../node_modules/@amcharts/amcharts5/locales/en.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","../../node_modules/@amcharts/amcharts5/.internal/core/Theme.js","../../node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","../../node_modules/svg-arc-to-cubic-bezier/modules/index.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","../../node_modules/@amcharts/amcharts5/.internal/core/Root.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js","../../node_modules/d3-shape/src/constant.js","../../node_modules/d3-shape/src/math.js","../../node_modules/d3-path/src/path.js","../../node_modules/d3-shape/src/path.js","../../node_modules/d3-shape/src/arc.js","../../node_modules/d3-shape/src/array.js","../../node_modules/d3-shape/src/curve/linear.js","../../node_modules/d3-shape/src/point.js","../../node_modules/d3-shape/src/line.js","../../node_modules/d3-shape/src/area.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/CategoryAxis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/LineSeries.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/MonotoneXTension.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/SmoothedXLineSeries.js","../../node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentDefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentSeries.js","../../node_modules/@amcharts/amcharts5/.internal/charts/pie/PieChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/pie/PieSeries.js"],"sourcesContent":["/**\n * Analytics Data Provider\n * Handles all API communication with the EmbedPress Analytics backend\n */\n\nclass AnalyticsDataProvider {\n    constructor() {\n        // Use the localized data from WordPress\n        const apiSettings = window.wpApiSettings || window.embedpressAnalyticsData || {};\n        this.baseUrl = apiSettings.root || window.embedpressAnalyticsData?.restUrl || '/wp-json/';\n        this.nonce = apiSettings.nonce || window.embedpressAnalyticsData?.nonce || '';\n        this.namespace = 'embedpress/v1/analytics/';\n\n        // Fallback for direct REST URL\n        if (window.embedpressAnalyticsData?.restUrl) {\n            this.baseUrl = window.embedpressAnalyticsData.restUrl.replace('embedpress/v1/analytics/', '');\n        }\n    }\n\n    /**\n     * Make authenticated API request\n     */\n    async makeRequest(endpoint, options = {}) {\n        const url = `${this.baseUrl}${this.namespace}${endpoint}`;\n\n        const defaultOptions = {\n            headers: {\n                'Content-Type': 'application/json',\n                'X-WP-Nonce': this.nonce,\n            },\n            credentials: 'same-origin',\n        };\n\n        const requestOptions = { ...defaultOptions, ...options };\n\n        try {\n            console.log('Making API request to:', url);\n            const response = await fetch(url, requestOptions);\n\n            if (!response.ok) {\n                console.error(`API request failed: ${response.status} ${response.statusText}`);\n\n                // If endpoint not found, return empty data\n                if (response.status === 404) {\n                    console.warn('API endpoint not found, returning empty data');\n                    return {};\n                }\n\n                throw new Error(`HTTP error! status: ${response.status} - ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            console.log('API response:', data);\n            return data;\n        } catch (error) {\n            console.error('API Request failed:', error);\n\n            // Return empty data as fallback\n            console.warn('Returning empty data as fallback');\n            return {};\n        }\n    }\n\n    /**\n     * Format date to YYYY-MM-DD in local timezone\n     */\n    formatDateToLocal(date) {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n        return `${year}-${month}-${day}`;\n    }\n\n    /**\n     * Build query parameters for date range and filters\n     */\n    buildDateRangeParams(dateRange, startDate = null, endDate = null, filters = {}) {\n        const params = new URLSearchParams();\n\n        if (startDate && endDate) {\n            // Use specific date range - format in local timezone\n            params.append('start_date', this.formatDateToLocal(startDate));\n            params.append('end_date', this.formatDateToLocal(endDate));\n        } else {\n            // Use relative date range (number of days)\n            params.append('date_range', dateRange);\n        }\n\n        // Add additional filters\n        if (filters.content_type && filters.content_type !== 'all') {\n            params.append('content_type', filters.content_type);\n        }\n\n        return params.toString();\n    }\n\n    /**\n     * Get overview analytics data\n     */\n    async getOverviewData(dateRange = 30, startDate = null, endDate = null, filters = {}) {\n        const params = this.buildDateRangeParams(dateRange, startDate, endDate, filters);\n        return this.makeRequest(`overview?${params}`);\n    }\n\n    /**\n     * Get views analytics data for charts\n     */\n    async getViewsAnalytics(dateRange = 30, startDate = null, endDate = null) {\n        const params = this.buildDateRangeParams(dateRange, startDate, endDate);\n        return this.makeRequest(`views?${params}`);\n    }\n\n    /**\n     * Get content analytics data\n     */\n    async getContentAnalytics(dateRange = 30, startDate = null, endDate = null) {\n        const params = this.buildDateRangeParams(dateRange, startDate, endDate);\n        return this.makeRequest(`content?${params}`);\n    }\n\n    /**\n     * Get browser analytics data\n     */\n    async getBrowserAnalytics(dateRange = 30, startDate = null, endDate = null) {\n        const params = this.buildDateRangeParams(dateRange, startDate, endDate);\n        return this.makeRequest(`browser?${params}`);\n    }\n\n    /**\n     * Get device analytics data (Pro feature)\n     */\n    async getDeviceAnalytics(dateRange = 30, startDate = null, endDate = null) {\n        const params = this.buildDateRangeParams(dateRange, startDate, endDate);\n        return this.makeRequest(`device?${params}`);\n    }\n\n    /**\n     * Get geo analytics data (Pro feature)\n     */\n    async getGeoAnalytics(dateRange = 30, startDate = null, endDate = null) {\n        const params = this.buildDateRangeParams(dateRange, startDate, endDate);\n        return this.makeRequest(`geo?${params}`);\n    }\n\n    /**\n     * Get referral analytics data (Pro feature)\n     */\n    async getReferralAnalytics(dateRange = 30, startDate = null, endDate = null) {\n        const params = this.buildDateRangeParams(dateRange, startDate, endDate);\n        return this.makeRequest(`referral?${params}`);\n    }\n\n    /**\n     * Get unique viewers per embed (Pro feature)\n     */\n    async getUniqueViewersPerEmbed(dateRange = 30, startDate = null, endDate = null) {\n        const params = this.buildDateRangeParams(dateRange, startDate, endDate);\n        return this.makeRequest(`unique-viewers-per-embed?${params}`);\n    }\n\n    /**\n     * Get milestone data\n     */\n    async getMilestoneData() {\n        return this.makeRequest('milestones');\n    }\n\n    /**\n     * Get feature status (free vs pro features)\n     */\n    async getFeatureStatus() {\n        return this.makeRequest('features');\n    }\n\n    /**\n     * Get all analytics data in one call\n     */\n    async getAllAnalyticsData(dateRange = 30, startDate = null, endDate = null, filters = {}) {\n        try {\n            const [\n                overview,\n                views,\n                content,\n                browser,\n                milestones,\n                features\n            ] = await Promise.all([\n                this.getOverviewData(dateRange, startDate, endDate, filters),\n                this.getViewsAnalytics(dateRange, startDate, endDate),\n                this.getContentAnalytics(dateRange, startDate, endDate),\n                this.getBrowserAnalytics(dateRange, startDate, endDate),\n                this.getMilestoneData(),\n                this.getFeatureStatus()\n            ]);\n\n            // Get device analytics (available for both free and pro)\n            let deviceAnalytics = await this.getDeviceAnalytics(dateRange, startDate, endDate);\n\n            // Get pro features if available\n            let geoAnalytics = null;\n            let referralAnalytics = null;\n            let uniqueViewersPerEmbed = null;\n\n            if (features?.features?.geo_tracking) {\n                geoAnalytics = await this.getGeoAnalytics(dateRange, startDate, endDate);\n            }\n\n            if (features?.features?.referral_tracking) {\n                referralAnalytics = await this.getReferralAnalytics(dateRange, startDate, endDate);\n            }\n\n            if (features?.features?.unique_viewers_per_embed) {\n                uniqueViewersPerEmbed = await this.getUniqueViewersPerEmbed(dateRange, startDate, endDate);\n            }\n\n            return {\n                overview,\n                views,\n                content,\n                browser,\n                milestones,\n                features,\n                deviceAnalytics,\n                geoAnalytics,\n                referralAnalytics,\n                uniqueViewersPerEmbed,\n                dateRange\n            };\n        } catch (error) {\n            console.error('Failed to load all analytics data:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Track interaction (for frontend tracking)\n     */\n    async trackInteraction(contentId, interactionType, sessionId, additionalData = {}) {\n        return this.makeRequest('track', {\n            method: 'POST',\n            body: JSON.stringify({\n                content_id: contentId,\n                interaction_type: interactionType,\n                session_id: sessionId,\n                ...additionalData\n            })\n        });\n    }\n\n    /**\n     * Export analytics data (Pro feature)\n     */\n    async exportData(format = 'csv', dateRange = 30, startDate = null, endDate = null) {\n        const dateParams = this.buildDateRangeParams(dateRange, startDate, endDate);\n        return this.makeRequest(`export?format=${format}&${dateParams}`);\n    }\n}\n\n// Create singleton instance\nconst analyticsDataProvider = new AnalyticsDataProvider();\n\nexport { analyticsDataProvider as AnalyticsDataProvider };\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of quarters to be added.\n *\n * @returns The new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * const result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nexport function addQuarters(date, amount) {\n  const months = amount * 3;\n  return addMonths(date, months);\n}\n\n// Fallback for modularized imports:\nexport default addQuarters;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount) {\n  const days = amount * 7;\n  return addDays(date, days);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full days according to the local timezone\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n *\n * @example\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n * //=> 92\n */\nexport function differenceInDays(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareLocalAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarDays(_dateLeft, _dateRight));\n\n  _dateLeft.setDate(_dateLeft.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastDayNotFull = Number(\n    compareLocalAsc(_dateLeft, _dateRight) === -sign,\n  );\n  const result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(dateLeft, dateRight) {\n  const diff =\n    dateLeft.getFullYear() - dateRight.getFullYear() ||\n    dateLeft.getMonth() - dateRight.getMonth() ||\n    dateLeft.getDate() - dateRight.getDate() ||\n    dateLeft.getHours() - dateRight.getHours() ||\n    dateLeft.getMinutes() - dateRight.getMinutes() ||\n    dateLeft.getSeconds() - dateRight.getSeconds() ||\n    dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default differenceInDays;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n * @param interval - The interval to check\n *\n * @returns The date is within the interval\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date })\n * // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end })\n * // => true\n */\nexport function isWithinInterval(date, interval) {\n  const time = +toDate(date);\n  const [startTime, endTime] = [\n    +toDate(interval.start),\n    +toDate(interval.end),\n  ].sort((a, b) => a - b);\n\n  return time >= startTime && time <= endTime;\n}\n\n// Fallback for modularized imports:\nexport default isWithinInterval;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount) {\n  return addDays(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import { addQuarters } from \"./addQuarters.mjs\";\n\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of quarters to be subtracted.\n *\n * @returns The new date with the quarters subtracted\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * const result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\nexport function subQuarters(date, amount) {\n  return addQuarters(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subQuarters;\n","import { addWeeks } from \"./addWeeks.mjs\";\n\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be subtracted.\n *\n * @returns The new date with the weeks subtracted\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * const result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\nexport function subWeeks(date, amount) {\n  return addWeeks(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subWeeks;\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nexport function assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\" && value.match(/[0-9]+/)) {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\nexport function getEventKey(event) {\r\n    if (event.key !== undefined) {\r\n        return event.key;\r\n    }\r\n    switch (event.keyCode) {\r\n        case 9: return \"Tab\";\r\n        case 13: return \"Enter\";\r\n        case 16: return \"Shift\";\r\n        case 17: return \"Control\";\r\n        case 27: return \"Escape\";\r\n        case 32: return \" \";\r\n        case 37: return \"ArrowLeft\";\r\n        case 38: return \"ArrowUp\";\r\n        case 39: return \"ArrowRight\";\r\n        case 40: return \"ArrowDown\";\r\n        case 46: return \"Delete\";\r\n    }\r\n    return \"\" + event.keyCode;\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = appendStylesheet(this._root, \":not(*)\");\r\n        }\r\n        $object.each(styles, (key, value) => {\r\n            this.setStyle(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\nexport function truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\r\n    if (text.length > maxLength) {\r\n        // Find the last non-alphanumeric character before maxLength\r\n        let lastNonAlphanumericIndex = maxLength - 1;\r\n        while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\r\n            lastNonAlphanumericIndex--;\r\n        }\r\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\r\n            return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\r\n        }\r\n        else {\r\n            // If no non-alphanumeric character found, truncate without breaking words\r\n            return text.substring(0, maxLength) + ellipsis;\r\n        }\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\r\nexport function splitString(source) {\r\n    // Regular expression to identify RTL characters\r\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\r\n    // Regular expression to capture segments ending with specific Arabic characters\r\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\r\n    // Split input string into array of words or characters, including whitespace\r\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\r\n    let result = [];\r\n    segments.forEach(segment => {\r\n        if (segment.match(/^\\s+$/)) {\r\n            // If the segment is purely whitespace\r\n            if (segment = \" \") {\r\n                segment = \"  \";\r\n            }\r\n            result.push(segment);\r\n        }\r\n        else if (rtlChar.test(segment)) {\r\n            // If the segment contains RTL characters, handle special splits\r\n            let parts = segment.split(splitPattern).filter(part => part !== '');\r\n            // Concatenate parts processed by the split pattern directly to result\r\n            result = result.concat(parts);\r\n        }\r\n        else {\r\n            // Treat this segment as LTR: split into characters\r\n            result = result.concat([...segment]);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return trim(wtz);\r\n}\r\nexport function getTimezoneOffset(timezone, targetDate) {\r\n    const date = targetDate || new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l,\r\n    };\r\n}\r\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\r\nexport function hsvToHsl(hsv) {\r\n    const l = hsv.v * (1 - (hsv.s / 2));\r\n    const s = (l === 0 || l === 1\r\n        ? 0\r\n        : (hsv.v - l) / Math.min(l, 1 - l));\r\n    return {\r\n        h: hsv.h,\r\n        s,\r\n        l,\r\n        a: hsv.a,\r\n    };\r\n}\r\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\r\nexport function hslToHsv(hsl) {\r\n    const v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\r\n    const s = (v === 0\r\n        ? 0\r\n        : 2 * (1 - (hsl.l / v)));\r\n    return {\r\n        h: hsl.h,\r\n        s,\r\n        v,\r\n        a: hsl.a,\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\nexport var AnimationState;\r\n(function (AnimationState) {\r\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\r\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\r\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return AnimationState.Playing;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return AnimationState.Stopped;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return AnimationState.Playing;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return AnimationState.Stopped;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSwap(a, b) {\r\n        if (this.events.isEnabled(\"swap\")) {\r\n            this.events.dispatch(\"swap\", {\r\n                type: \"swap\",\r\n                target: this,\r\n                a,\r\n                b\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._values[b] = value_a;\r\n            this._onSwap(value_a, value_b);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const currentAutoDispose = this.autoDispose;\r\n        this.autoDispose = false;\r\n        super.swap(a, b);\r\n        this.autoDispose = currentAutoDispose;\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    _dispose() {\r\n        if (this.autoDispose) {\r\n            $array.each(this._values, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this.autoDispose) {\r\n            this.template.dispose();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\r\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\r\n    return horizontalOverlap && verticalOverlap;\r\n}\r\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\r\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    let r = innerRadius + 0.01;\r\n    startAngle = normalizeAngle(startAngle);\r\n    endAngle = normalizeAngle(endAngle);\r\n    let angle = startAngle * RADIANS;\r\n    if (endAngle < startAngle) {\r\n        endAngle += 360;\r\n    }\r\n    let points = [];\r\n    while (r < radius + radiusStep) {\r\n        let stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        let c = Math.max(0.01, Math.min(1, r / 200));\r\n        stepSize = stepSize * c;\r\n        let degrees = angle * DEGREES;\r\n        let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + 0.01 + (degrees - startAngle) / 360 * radiusStep;\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * DEGREES > endAngle + 360 * Math.ceil((radius - innerRadius) / radiusStep)) {\r\n            break;\r\n        }\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\r\nexport function circlesOverlap(circle1, circle2) {\r\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\r\n}\r\n//# sourceMappingURL=Math.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.13.5\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id) {\r\n    let found;\r\n    registry.rootElements.forEach((item) => {\r\n        if (item.dom.id == id) {\r\n            found = item;\r\n        }\r\n    });\r\n    return found;\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { AnimationState, getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * If this is set to `false` then disposing does nothing, it's a no-op.\r\n         */\r\n        Object.defineProperty(this, \"enableDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        let state = AnimationState.Stopped;\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            let paused = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            if (playing) {\r\n                state = AnimationState.Playing;\r\n            }\r\n            else if (paused) {\r\n                state = AnimationState.Paused;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    off(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._settingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    offPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._privateSettingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */\r\n    has(key) {\r\n        return key in this._settings;\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (this.enableDispose && !this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefaultFn(key, f) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            const value = f();\r\n            this.set(key, value);\r\n            return value;\r\n        }\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes(force = false) {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected || force) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected || force) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected || force;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete this._root.entitiesById[prevId];\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (this._root.entitiesById[id] && this._root.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        this._root.entitiesById[id] = this;\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete this._root.entitiesById[id];\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport * as $type from \"./Type\";\r\nfunction disposeSettings(settings) {\r\n    $object.each(settings, (_key, value) => {\r\n        if ($type.isObject(value) && typeof value.dispose === \"function\") {\r\n            value.enableDispose = true;\r\n            value.dispose();\r\n        }\r\n    });\r\n}\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    _dispose() {\r\n        $object.each(this._states, (_key, state) => {\r\n            state._dispose();\r\n        });\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n        disposeSettings(this._privateSettings);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n    _checkDisposed() {\r\n        if (this._disposed) {\r\n            throw new Error(\"Template is disposed\");\r\n        }\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        this._checkDisposed();\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        this._checkDisposed();\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        this._checkDisposed();\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        this._checkDisposed();\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        this._checkDisposed();\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        this._checkDisposed();\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        this._checkDisposed();\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._checkDisposed();\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        //this._checkDisposed();\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._checkDisposed();\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite.getPrivate(\"trustBounds\")) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (sprite.isType(\"Graphics\")) {\r\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\r\n                    if (strokeWidth >= 1) {\r\n                        bounds.left -= strokeWidth;\r\n                        bounds.right += strokeWidth;\r\n                        bounds.top -= strokeWidth;\r\n                        bounds.bottom += strokeWidth;\r\n                    }\r\n                }\r\n                if (!$math.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */\r\n    markDirtyKey(key) {\r\n        this._markDirtyKey(key);\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => {\r\n                                const tooltip = this.getTooltip();\r\n                                if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                else {\r\n                                    this.showTooltip();\r\n                                }\r\n                            }, 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        let filter = this.get(\"filter\", \"\");\r\n        if (this.isDirty(\"blur\")) {\r\n            const blur = this.get(\"blur\", 0);\r\n            if (blur != 0) {\r\n                filter += \" blur(\" + blur + \"px)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"saturate\")) {\r\n            const saturate = this.get(\"saturate\", 1);\r\n            if (saturate != 1) {\r\n                filter += \" saturate(\" + saturate + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"brightness\")) {\r\n            const brightness = this.get(\"brightness\", 1);\r\n            if (brightness != 1) {\r\n                filter += \" brightness(\" + brightness + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"contrast\")) {\r\n            const contrast = this.get(\"contrast\", 1);\r\n            if (contrast != 1) {\r\n                filter += \" contrast(\" + contrast + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"sepia\")) {\r\n            const sepia = this.get(\"sepia\", 0);\r\n            if (sepia != 0) {\r\n                filter += \" sepia(\" + sepia + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"hue\")) {\r\n            const hue = this.get(\"hue\", 0);\r\n            if (hue != 0) {\r\n                filter += \" hue-rotate(\" + hue + \"deg)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"invert\")) {\r\n            const invert = this.get(\"invert\", 0);\r\n            if (invert != 0) {\r\n                filter += \" invert(\" + invert + \")\";\r\n            }\r\n        }\r\n        if (filter) {\r\n            display.filter = filter;\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n            this._disposers.push(events.on(\"blur\", () => {\r\n                this.setPrivateRaw(\"touchHovering\", false);\r\n            }));\r\n            this._disposers.push(events.once(\"boundschanged\", () => {\r\n                // We might need to do this to re-evaluate accessibility attributes\r\n                // once the element gains size (bounds)\r\n                this.markDirtyAccessibility();\r\n            }));\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\") && !events.isDisposed()) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", null);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            let scale = 1;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n                if (parent) {\r\n                    scale *= parent.get(\"scale\", 1);\r\n                }\r\n            }\r\n            let x = (e.point.x - dragEvent.point.x) / scale;\r\n            let y = (e.point.y - dragEvent.point.y) / scale;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        if (!this.isDisposed()) {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        if (!this.isDisposed()) {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        if (!this.isDisposed()) {\r\n            const tooltip = this.getTooltip();\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                const tooltipPosition = this.get(\"tooltipPosition\");\r\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                if (tooltipPosition == \"pointer\") {\r\n                    const lastTooltipCoords = this.getPrivate(\"lastTooltipCoords\");\r\n                    if (lastTooltipCoords && lastTooltipCoords.x == point.x && lastTooltipCoords.y == point.y) {\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.setPrivate(\"lastTooltipCoords\", point);\r\n                    }\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                const dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                const promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            this.removePrivate(\"lastTooltipCoords\");\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeScale() {\r\n        const scale = this.get(\"scale\", 1);\r\n        return this._parent ? (this._parent.compositeScale() * scale) : scale;\r\n    }\r\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeRotation() {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        return this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n        this._checkDirtyFill();\r\n    }\r\n    _checkDirtyFill() {\r\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            const backgroundDisplay = this._backgroundDisplay;\r\n            const display = this._display;\r\n            display.clear();\r\n            backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                backgroundDisplay.beginFill(fill, fillOpacity);\r\n                backgroundDisplay.drawRect(0, 0, width, height);\r\n                backgroundDisplay.endFill();\r\n            }\r\n            display.angle = this.get(\"rotation\", 0);\r\n            //display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this.set(\"width\", canvas.width);\r\n            this.set(\"height\", canvas.height);\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (colorOpacity !== undefined) {\r\n            this._display.alpha = Math.max(0, colorOpacity);\r\n        }\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n                this.markDirty();\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this._display.image(canvas, canvas.width, canvas.height, 0, 0);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map","/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw && typeof draw === \"function\") {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fill && !fillGradient) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            if (fillPattern) {\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                const lineCap = this.get(\"lineCap\");\r\n                if (stroke && !strokeGradient) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\r\n                    this._display.endStroke();\r\n                }\r\n                if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                if (strokePattern) {\r\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */\r\n                    let pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        let w = this.width();\r\n        let h = this.height();\r\n        let x = 0;\r\n        let y = 0;\r\n        let wSign = w / Math.abs(w);\r\n        let hSign = h / Math.abs(h);\r\n        if (this.get(\"containStroke\", false)) {\r\n            const strokeWidth = this.get(\"strokeWidth\", 0);\r\n            w -= strokeWidth * wSign;\r\n            h -= strokeWidth * hSign;\r\n            x += strokeWidth / 2 * wSign;\r\n            y += strokeWidth / 2 * hSign;\r\n        }\r\n        this._display.drawRect(x, y, w, h);\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxRowHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxRowHeight = Math.max(maxRowHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxRowHeight;\r\n                    maxRowHeight = 0;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes(force = false) {\r\n        if (super._applyThemes(force)) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes(force);\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        if (!this.get(\"html\")) {\r\n            let width = this.get(\"width\");\r\n            let height = this.get(\"height\");\r\n            let pWidth = this.getPrivate(\"width\");\r\n            let pHeight = this.getPrivate(\"height\");\r\n            let bounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: this.width(),\r\n                bottom: this.height()\r\n            };\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                horizontal = true;\r\n            }\r\n            if (layout instanceof VerticalLayout) {\r\n                vertical = true;\r\n            }\r\n            if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n                // void\r\n            }\r\n            else {\r\n                let m = Number.MAX_VALUE;\r\n                let l = m;\r\n                let r = -m;\r\n                let t = m;\r\n                let b = -m;\r\n                const paddingLeft = this.get(\"paddingLeft\", 0);\r\n                const paddingTop = this.get(\"paddingTop\", 0);\r\n                const paddingRight = this.get(\"paddingRight\", 0);\r\n                const paddingBottom = this.get(\"paddingBottom\", 0);\r\n                this.children.each((child) => {\r\n                    if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                        let childBounds = child.adjustedLocalBounds();\r\n                        let childX = child.x();\r\n                        let childY = child.y();\r\n                        let cl = childX + childBounds.left;\r\n                        let cr = childX + childBounds.right;\r\n                        let ct = childY + childBounds.top;\r\n                        let cb = childY + childBounds.bottom;\r\n                        if (horizontal) {\r\n                            cl -= child.get(\"marginLeft\", 0);\r\n                            cr += child.get(\"marginRight\", 0);\r\n                        }\r\n                        if (vertical) {\r\n                            ct -= child.get(\"marginTop\", 0);\r\n                            cb += child.get(\"marginBottom\", 0);\r\n                        }\r\n                        if (cl < l) {\r\n                            l = cl;\r\n                        }\r\n                        if (cr > r) {\r\n                            r = cr;\r\n                        }\r\n                        if (ct < t) {\r\n                            t = ct;\r\n                        }\r\n                        if (cb > b) {\r\n                            b = cb;\r\n                        }\r\n                    }\r\n                });\r\n                if (l == m) {\r\n                    l = 0;\r\n                }\r\n                if (r == -m) {\r\n                    r = 0;\r\n                }\r\n                if (t == m) {\r\n                    t = 0;\r\n                }\r\n                if (b == -m) {\r\n                    b = 0;\r\n                }\r\n                bounds.left = l - paddingLeft;\r\n                bounds.top = t - paddingTop;\r\n                bounds.right = r + paddingRight;\r\n                bounds.bottom = b + paddingBottom;\r\n                const minWidth = this.get(\"minWidth\");\r\n                if ($type.isNumber(minWidth) && minWidth > 0) {\r\n                    if (bounds.right - bounds.left < minWidth) {\r\n                        if (bounds.right >= minWidth) {\r\n                            bounds.left = bounds.right - minWidth;\r\n                        }\r\n                        else {\r\n                            bounds.right = bounds.left + minWidth;\r\n                        }\r\n                    }\r\n                }\r\n                const minHeight = this.get(\"minHeight\");\r\n                if ($type.isNumber(minHeight) && minHeight > 0) {\r\n                    if (bounds.bottom - bounds.top < minHeight) {\r\n                        if (bounds.bottom >= minHeight) {\r\n                            bounds.top = bounds.bottom - minHeight;\r\n                        }\r\n                        else {\r\n                            bounds.bottom = bounds.top + minHeight;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._contentWidth = bounds.right - bounds.left;\r\n            this._contentHeight = bounds.bottom - bounds.top;\r\n            if ($type.isNumber(width)) {\r\n                bounds.left = 0;\r\n                bounds.right = width;\r\n            }\r\n            if ($type.isNumber(pWidth)) {\r\n                bounds.left = 0;\r\n                bounds.right = pWidth;\r\n            }\r\n            if ($type.isNumber(height)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = height;\r\n            }\r\n            if ($type.isNumber(pHeight)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = pHeight;\r\n            }\r\n            this._localBounds = bounds;\r\n        }\r\n        else {\r\n            let bounds = this._localBounds;\r\n            if (bounds) {\r\n                this._contentWidth = bounds.right - bounds.left;\r\n                this._contentHeight = bounds.bottom - bounds.top;\r\n            }\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateHTMLContent() {\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\") {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n        else {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        this._root._positionHTMLElement(this);\r\n    }\r\n    /**\r\n     * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n     * the Container will scroll in such way so that target element becomes\r\n     * visible if its currently outside of view.\r\n     *\r\n     * @param  child  Target child\r\n     * @since 5.10.5\r\n     */\r\n    scrollToChild(child) {\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            let y = child.y();\r\n            let h = this.innerHeight();\r\n            let ch = child.height();\r\n            let contentH = this._contentHeight;\r\n            let max = 1 - (h - ch / 2) / contentH;\r\n            if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\r\n                let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\r\n                verticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            this._updateHTMLContent();\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n    contentWidth() {\r\n        return this._contentWidth;\r\n    }\r\n    contentHeight() {\r\n        return this._contentHeight;\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"maxChars\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n            let fillGradient = this.get(\"fillGradient\");\r\n            if (fillGradient) {\r\n                this._display.style.fill = fillGradient.getFill(this);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this._display.invalidateVisibility();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                textStyle.fill = fillGradient.getFill(this);\r\n            }\r\n            else if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        let text = this.get(\"text\", \"\");\r\n        if (this.get(\"maxChars\")) {\r\n            text = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\r\n        }\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    _getAccessibleText() {\r\n        const ariaLabel = this.get(\"ariaLabel\");\r\n        if (ariaLabel !== undefined) {\r\n            return this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\r\n        }\r\n        return this._getText();\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillGradient\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\",\r\n                \"maxChars\",\r\n                \"ariaLabel\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const text = this._text;\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            text.set(\"text\", this.get(\"text\"));\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\", 0);\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\", 0);\r\n                }\r\n            }\r\n            text.set(\"x\", x);\r\n        }\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            background.setPrivate(\"visible\", text._display.textVisible);\r\n        }\r\n    }\r\n    _maybeUpdateHTMLColor() {\r\n        const htmlElement = this.getPrivate(\"htmlElement\");\r\n        if (htmlElement && this.get(\"fill\")) {\r\n            htmlElement.style.color = this.get(\"fill\").toCSSHex();\r\n            //@todo support gradient\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const text = this._text;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n        this.root.events.once(\"frameended\", () => {\r\n            text.markDirtyBounds();\r\n        });\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        this._markDirtyKey(\"html\");\r\n        const text = this._text;\r\n        if (text.get(\"populateText\")) {\r\n            text.markDirtyText();\r\n        }\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._updateHTMLContent();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getAccessibleText() {\r\n        return this._text._getAccessibleText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillGrDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        const background = this._setDefaultFn(\"background\", () => {\r\n            return PointedRectangle.new(this._root, {});\r\n        });\r\n        background.set(\"themeTags\", [\"tooltip\", \"background\"]);\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                }));\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                }));\r\n            }\r\n        }));\r\n        this.on(\"visible\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this.label.events.on(\"dataitemchanged\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this._root._tooltips.push(this);\r\n    }\r\n    _handleReaderAnnouncement() {\r\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\r\n            this._root.readerAlert(this.label.getAccessibleText());\r\n        }\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    _dispose() {\r\n        super._dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\r\n        if (labelAriaLabel != null) {\r\n            this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getFillGradientFromSprite\")) {\r\n                if (this._fillGrDp) {\r\n                    this._fillGrDp.dispose();\r\n                }\r\n                let fillGradient = tooltipTarget.get(\"fillGradient\");\r\n                if (fillGradient != null) {\r\n                    background.set(\"fillGradient\", fillGradient);\r\n                }\r\n                this._fillGrDp = tooltipTarget.on(\"fillGradient\", (fillGradient) => {\r\n                    if (fillGradient != null) {\r\n                        background.set(\"fillGradient\", fillGradient);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillGrDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            const decimals = $utils.decimalPlaces(value);\r\n            if (decimals > 0) {\r\n                const d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\r\n            }\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */\r\n    format(source, format, ignoreTimezone = false) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        let originalDate = date;\r\n        if (timezone && !this._root.utc && !ignoreTimezone) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info, ignoreTimezone, originalDate);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info, ignoreTimezone = false, originalDate) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc && !ignoreTimezone) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(originalDate || date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(originalDate || date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(originalDate || date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(originalDate || date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone, originalDate || date) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format, utc) {\r\n        // If UTC is not supplied, use Root setting\r\n        if (typeof utc === \"undefined\") {\r\n            utc = this._root.utc;\r\n        }\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // Are we parsing a timestamp?\r\n        if (format == \"x\") {\r\n            return new Date(parseInt(source));\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        const values = {\r\n            millisecond: 0,\r\n            second: 0,\r\n            minute: 0,\r\n            hour: 0,\r\n            day: 0,\r\n            week: 0,\r\n            month: 0,\r\n            year: 0\r\n        };\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            // Calculate current unit value\r\n            let ints;\r\n            const unitValue = this._getUnitValue(unit);\r\n            if (i < (len - 1)) {\r\n                ints = Math.floor(tstamp / unitValue);\r\n            }\r\n            else {\r\n                ints = Math.round(tstamp / unitValue);\r\n            }\r\n            values[unit] += ints;\r\n            // Reduce timestamp\r\n            tstamp -= ints * unitValue;\r\n        }\r\n        // Check if we have full unit that we need to bump up to higher unit\r\n        $object.each(values, (unit, value) => {\r\n            if (unit == \"millisecond\" && value == 1000) {\r\n                values[\"second\"]++;\r\n                values[\"millisecond\"] = 0;\r\n            }\r\n            else if (unit == \"second\" && value == 60) {\r\n                values[\"minute\"]++;\r\n                values[\"second\"] = 0;\r\n            }\r\n            else if (unit == \"minute\" && value == 60) {\r\n                values[\"hour\"]++;\r\n                values[\"minute\"] = 0;\r\n            }\r\n            else if (unit == \"hour\" && value == 24) {\r\n                values[\"day\"]++;\r\n                values[\"hour\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 7) {\r\n                values[\"week\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 30) {\r\n                values[\"month\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"month\" && value == 12) {\r\n                values[\"year\"]++;\r\n                values[\"month\"] = 0;\r\n            }\r\n            // if (val > 0) {\r\n            // \tres = res.replace($type.PLACEHOLDER, $utils.padString(val, 2, \"0\"));\r\n            // }\r\n            // else {\r\n            // \tres = res.replace($type.PLACEHOLDER, \"\");\r\n            // }\r\n        });\r\n        // Iterate again\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(values[unit], digits, \"0\"));\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonDisabled: Color.fromHex(0xdadada),\r\n            primaryButtonTextDisabled: Color.fromHex(0xffffff),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        r(\"ZoomableContainer\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            wheelable: true,\r\n            pinchZoom: true,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            zoomStep: 2,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            animationDuration: 600,\r\n            maxPanOut: 0.4\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        r(\"GrainPattern\").setAll({\r\n            width: 200,\r\n            height: 200,\r\n            colors: [Color.fromHex(0x000000)],\r\n            size: 1,\r\n            horizontalGap: 0,\r\n            verticalGap: 0,\r\n            density: 1,\r\n            minOpacity: 0,\r\n            maxOpacity: 0.2\r\n        });\r\n        {\r\n            const rule = r(\"PatternSet\");\r\n            rule.setAll({\r\n                step: 1\r\n            });\r\n            setColor(rule, \"color\", ic, \"stroke\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"EditableLabel\").setAll({\r\n            editOn: \"click\",\r\n            //setStateOnChildren: true,\r\n            themeTags: [\"editablelabel\"],\r\n            multiLine: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\r\n            fillOpacity: 0,\r\n            fill: Color.fromHex(0x000000),\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusTR: 3,\r\n            strokeOpacity: 0,\r\n            stroke: Color.fromHex(0x000000)\r\n        });\r\n        {\r\n            r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\r\n                strokeOpacity: 0.2,\r\n            });\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        r(\"Button\").states.create(\"disabled\", {\r\n            forceInactive: true\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            rule.setAll({\r\n                forceInactive: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"Tooltip\", ['indicator']).setAll({\r\n            forceHidden: true\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10,\r\n            isMeasured: false\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\r\n        });\r\n        r(\"Button\", [\"zoomtools\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 2\r\n        });\r\n        r(\"ZoomTools\").setAll({\r\n            x: p100,\r\n            centerX: p100,\r\n            y: p100,\r\n            centerY: p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x) + .5;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    subStatus(status) {\r\n        return {\r\n            inactive: (this.inactive == null ? status.inactive : this.inactive),\r\n            layer: this._layer || status.layer,\r\n        };\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive(status) {\r\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this._isInteractive(status);\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(status, targetGhostLayer = 0) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const subStatus = this.subStatus(status);\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask(subStatus)) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            if ((subStatus.layer.order > 0) && !targetGhostLayer) {\r\n                $array.move(this._renderer._deferredGhostLayers, subStatus.layer.order);\r\n            }\r\n            this._render(subStatus, targetGhostLayer);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(status, _targetGhostLayer = 0) {\r\n        if (this.exportable === false) {\r\n            status.layer.tainted = true;\r\n        }\r\n    }\r\n    _ghostOnly(targetGhostLayer = 0) {\r\n        return targetGhostLayer > 0 ? true : false;\r\n    }\r\n    _drawGhost(status, targetGhostLayer = 0) {\r\n        const interactive = this._isInteractive(status);\r\n        const order = status.layer.order || 0;\r\n        return interactive && ((order == 0 && !this._ghostOnly(targetGhostLayer)) || order == targetGhostLayer) ? true : false;\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this.interactiveChildren || super._isInteractiveMask(status);\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(status, targetGhostLayer) {\r\n        super._render(status);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(status, targetGhostLayer);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    colorizeGhost(context, forceColor) {\r\n        this.colorize(context, forceColor);\r\n    }\r\n    path(_context) { }\r\n    pathGhost(context) {\r\n        this.path(context);\r\n    }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin, lineCap) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n        Object.defineProperty(this, \"lineCap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineCap\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n        if (this.lineCap) {\r\n            context.lineCap = this.lineCap;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n    colorizeGhost(_context, _forceColor) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin, lineCap) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin, lineCap));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        const layerDirty = status.layer.dirty;\r\n        const interactive = this._isInteractive(status);\r\n        const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n        const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n        if (layerDirty || interactive || ghostOnly) {\r\n            const context = status.layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty && !ghostOnly) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (drawGhost) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty && !ghostOnly) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (drawGhost) {\r\n                    op.pathGhost(ghostContext);\r\n                    op.colorizeGhost(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"truncated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    invalidateVisibility() {\r\n        this.textVisible = true;\r\n        this.scale = this._originalScale || 1;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(status);\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            status.layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            status.layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            status.layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(status);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(status);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (this._isInteractive(status)) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\r\n                        if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\r\n                            // Measure actual width of the text so the line fits\r\n                            const metrics = this._measureText(chunk.text, context);\r\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        }\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        if (!ghostOnly) {\r\n                            context.save();\r\n                            context.beginPath();\r\n                            if (chunk.fill) {\r\n                                context.strokeStyle = chunk.fill.toCSS();\r\n                            }\r\n                            else if (this.style.fill && this.style.fill instanceof Color) {\r\n                                context.strokeStyle = this.style.fill.toCSS();\r\n                            }\r\n                            context.lineWidth = thickness * offset;\r\n                            context.moveTo(offsetX, y);\r\n                            context.lineTo(offsetX + chunk.width, y);\r\n                            context.stroke();\r\n                            context.restore();\r\n                        }\r\n                    }\r\n                    if (interactive && this.interactive && drawGhost) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure({\r\n                inactive: this.inactive,\r\n                layer: this.getLayer(),\r\n            });\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            this.truncated = undefined;\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                                this.truncated = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width * (rtl ? -1 : 1);\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = rtl ? maxWidth : -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = rtl ? -maxWidth : maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(status, targetGhostLayer);\r\n                break;\r\n            default:\r\n                super._render(status, targetGhostLayer);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(status, targetGhostLayer = 0) {\r\n        if (this.textVisible) {\r\n            this._prerender(status);\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(status);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                if (!ghostOnly) {\r\n                    context.rotate(lineStartAngle);\r\n                }\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    if (!ghostOnly) {\r\n                        context.textBaseline = \"middle\";\r\n                        context.textAlign = \"center\";\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive && drawGhost) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(status);\r\n            default:\r\n                return super._measure(status);\r\n        }\r\n    }\r\n    _measureCircular(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    let chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars = $utils.splitString(chunk.text);\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            //totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        if (rtl) {\r\n                            // @todo still needed?\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        if (this.image) {\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                status.layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            if (status.layer.dirty && !ghostOnly) {\r\n                if (this.shadowColor) {\r\n                    status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    status.layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    status.layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    status.layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive(status) && drawGhost) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_deferredGhostLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    resetImageArray() {\r\n        this._ghostLayer.imageArray = undefined;\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        layer.view.className = \"am5-layer-\" + order;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        this._deferredGhostLayers = [];\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render({\r\n            inactive: null,\r\n            layer: this.defaultLayer,\r\n        });\r\n        const deferredGhostLayers = this._deferredGhostLayers;\r\n        if (deferredGhostLayers.length) {\r\n            deferredGhostLayers.sort((a, b) => a - b);\r\n            $array.each(deferredGhostLayers, (layerx) => {\r\n                root.render({\r\n                    inactive: null,\r\n                    layer: this.defaultLayer\r\n                }, layerx);\r\n            });\r\n        }\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    getObjectAtPoint(point) {\r\n        const data = this._ghostLayer.getImageArray(point);\r\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\r\n            return undefined;\r\n        }\r\n        const colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"imageArray\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        this._resolution = resolution;\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    getImageArray(point) {\r\n        if (!this.imageArray) {\r\n            this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\r\n        }\r\n        const data = this.imageArray;\r\n        const x = Math.round(point.x * this._resolution);\r\n        const y = Math.round(point.y * this._resolution);\r\n        const i = (y * this._width + x) * 4;\r\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","import { AnimationState } from \"./util/Animation\";\r\nimport { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent, isPercent, Percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         *\r\n         * @since 5.11.0\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n            if (settings.role) {\r\n                this._inner.setAttribute(\"role\", settings.role);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (eventKey == \"Tab\") {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                        if (announceText !== \"\") {\r\n                            this.readerAlert(announceText);\r\n                        }\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.key == \"Escape\") {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"Enter\":\r\n                            case \" \":\r\n                                const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                                if (announceText !== \"\") {\r\n                                    this.readerAlert(announceText);\r\n                                }\r\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\r\n                                    return;\r\n                                }\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case \"ArrowLeft\":\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case \"ArrowRight\":\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case \"ArrowUp\":\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case \"ArrowDown\":\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                downEvent.point = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"ArrowLeft\":\r\n                            case \"ArrowRight\":\r\n                            case \"ArrowUp\":\r\n                            case \"ArrowDown\":\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                            case \"Tab\":\r\n                                const group = focusedSprite.get(\"focusableGroup\");\r\n                                if (group && this._isShift) {\r\n                                    this._focusNext(focusedSprite.getPrivate(\"focusElement\").dom, -1, group);\r\n                                    return;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        let running = 0;\r\n        $array.keepIf(this._animations, (animation) => {\r\n            const state = animation._runAnimation(currentTime);\r\n            if (state === AnimationState.Stopped) {\r\n                return false;\r\n            }\r\n            else if (state === AnimationState.Playing) {\r\n                ++running;\r\n                return true;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n        this._isDirtyAnimation = false;\r\n        return running === 0;\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            const animationDone = this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._renderer.resetImageArray();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                animationDone &&\r\n                !this._isDirtyAnimation &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._dirty[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyParent(parent) {\r\n        this._isDirty = true;\r\n        this._isDirtyParents = true;\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._dirtyParents[parent.uid] = parent;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._dirtyBounds[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        this._isDirty = true;\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addAnimation(animation) {\r\n        this._isDirtyAnimation = true;\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            const element = this._readerAlertElement;\r\n            text = $utils.stripTags(text);\r\n            if (element.innerHTML == text) {\r\n                element.innerHTML = \"\";\r\n            }\r\n            element.innerHTML = text;\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        const ariaCurrent = target.get(\"ariaCurrent\");\r\n        if (ariaCurrent != null) {\r\n            focusElement.setAttribute(\"aria-current\", ariaCurrent);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-current\");\r\n        }\r\n        const ariaSelected = target.get(\"ariaSelected\");\r\n        if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-selected\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false && (target.height() || target.width())) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\r\n        let x = bounds.left - padding;\r\n        let y = bounds.top - padding;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + padding * 2) + \"px\";\r\n        focusElement.style.height = (height + padding * 2) + \"px\";\r\n    }\r\n    _getSpriteByFocusElement(target) {\r\n        let found;\r\n        $array.eachContinue(this._tabindexes, (item, _index) => {\r\n            if (item.getPrivate(\"focusElement\").dom === target) {\r\n                found = item;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return found;\r\n    }\r\n    _handleFocus(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        //const focused = this._tabindexes[index];\r\n        const focused = this._getSpriteByFocusElement(ev.target);\r\n        if (!focused) {\r\n            return;\r\n        }\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction, group) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        const targetElement = focusableElements[index];\r\n        if (group && direction == -1) {\r\n            const target = this._getSpriteByFocusElement(targetElement);\r\n            if (target && target.get(\"focusableGroup\") == group) {\r\n                this._focusNext(targetElement, direction);\r\n                return;\r\n            }\r\n        }\r\n        targetElement.focus();\r\n    }\r\n    _handleBlur(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        // Should we put this into a wrapper?\r\n        let needWrapper = false;\r\n        let wrapperTarget;\r\n        target._walkParents((parent) => {\r\n            if (parent.get(\"verticalScrollbar\")) {\r\n                needWrapper = true;\r\n                wrapperTarget = parent;\r\n                return false;\r\n            }\r\n        });\r\n        let htmlElementWrapper;\r\n        if (needWrapper) {\r\n            htmlElementWrapper = document.createElement(\"div\");\r\n            target.setPrivate(\"htmlElementWrapper\", htmlElementWrapper);\r\n            target.setPrivate(\"wrapperContainer\", wrapperTarget);\r\n            htmlElementWrapper.style.position = \"absolute\";\r\n            htmlElementWrapper.style.overflow = \"hidden\";\r\n            htmlElementWrapper.style.boxSizing = \"border-box\";\r\n            htmlElementWrapper.style.top = \"0px\";\r\n            htmlElementWrapper.style.left = \"0px\";\r\n            htmlElementWrapper.style.width = \"100%\";\r\n            htmlElementWrapper.style.height = \"100%\";\r\n            wrapperTarget.events.on(\"boundschanged\", () => {\r\n                this._positionHTMLElement(target);\r\n            });\r\n        }\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        if (needWrapper) {\r\n            htmlElementWrapper.append(htmlElement);\r\n            container.append(htmlElementWrapper);\r\n        }\r\n        else {\r\n            container.append(htmlElement);\r\n        }\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        if (htmlElementWrapper) {\r\n            const wrapperTarget = target.getPrivate(\"wrapperContainer\");\r\n            if (wrapperTarget) {\r\n                const bounds = wrapperTarget.globalBounds();\r\n                htmlElementWrapper.style.clipPath = \"rect(\" + bounds.top + \"px \" + bounds.right + \"px \" + bounds.bottom + \"px \" + bounds.left + \"px)\";\r\n            }\r\n        }\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\r\n                \"paddingTop\",\r\n                \"paddingRight\",\r\n                \"paddingBottom\",\r\n                \"paddingLeft\",\r\n                \"minWidth\",\r\n                \"minHeight\",\r\n                \"maxWidth\",\r\n                \"maxHeight\"\r\n            ];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            const strtingSettings = [\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\"\r\n            ];\r\n            $array.each(strtingSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    if (setting == \"fontSize\" && !$type.isString(value)) {\r\n                        htmlElement.style[setting] = value + \"px\";\r\n                    }\r\n                    else {\r\n                        htmlElement.style[setting] = value + \"\";\r\n                    }\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Init and reset scale / rotation\r\n            const scale = target.compositeScale() || 1;\r\n            const rotation = target.compositeRotation() || 0;\r\n            htmlElement.style.transform = \"\";\r\n            htmlElement.style.transformOrigin = \"\";\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            // const bounds = target.globalBounds();\r\n            // htmlElement.style.top = (bounds.top) + \"px\";\r\n            // htmlElement.style.left = (bounds.left) + \"px\";\r\n            let pos = {\r\n                x: target.x() + target.get(\"dx\", 0),\r\n                y: target.y() + target.get(\"dy\", 0)\r\n            };\r\n            if (target.parent) {\r\n                pos = target.parent.toGlobal(pos);\r\n            }\r\n            htmlElement.style.top = pos.y + \"px\";\r\n            htmlElement.style.left = pos.x + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                if (!width)\r\n                    w = bbox.width;\r\n                if (!height)\r\n                    h = bbox.height;\r\n                let lw = w / scale;\r\n                let lh = h / scale;\r\n                let cx = target.get(\"centerX\", 0);\r\n                let cy = target.get(\"centerY\", 0);\r\n                let ll = 0;\r\n                let lr = 0;\r\n                let lt = 0;\r\n                let lb = 0;\r\n                if (cx instanceof Percent) {\r\n                    ll = -cx.value * lw;\r\n                    lr = (1 - cx.value) * lw;\r\n                }\r\n                else {\r\n                    ll = -cx;\r\n                    lr = lw - cx;\r\n                }\r\n                if (cy instanceof Percent) {\r\n                    lt = -cy.value * lh;\r\n                    lb = (1 - cy.value) * lh;\r\n                }\r\n                else {\r\n                    lt = -cy;\r\n                    lb = lh - cy;\r\n                }\r\n                target._localBounds = { left: ll, right: lr, top: lt, bottom: lb };\r\n                let previousBounds = target._adjustedLocalBounds;\r\n                let newBounds = target._display.getAdjustedBounds(target._localBounds);\r\n                target._adjustedLocalBounds = newBounds;\r\n                // compare each value of the bounds\r\n                if (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\r\n                    target.markDirtyBounds();\r\n                }\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n            // Center position\r\n            const x = target.get(\"centerX\", 0);\r\n            const originX = isPercent(x) ? x.percent + \"%\" : x + \"px\";\r\n            const y = target.get(\"centerY\", 0);\r\n            const originY = isPercent(y) ? y.percent + \"%\" : y + \"px\";\r\n            if (x || y) {\r\n                htmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\r\n            }\r\n            // Deal with scale\r\n            if (scale != 1) {\r\n                htmlElement.style.transform += \"scale(\" + scale + \")\";\r\n            }\r\n            if (rotation != 0) {\r\n                htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\r\n            }\r\n            if (htmlElement.style.transform != \"\") {\r\n                htmlElement.style.transformOrigin = originX + \" \" + originY;\r\n                //htmlElement.style.transformOrigin = \"0% 0%\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n            if (!this.autoResize) {\r\n                this.resize();\r\n            }\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElementWrapper) {\r\n            this._htmlElementContainer.removeChild(htmlElementWrapper);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"htmlElementWrapper\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        else if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import { Entity } from \"../../core/util/Entity\";\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nexport class Bullet extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because bullet will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                this._disposers.push(sprite);\r\n            }\r\n        }\r\n        if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n            if (this.series) {\r\n                this.series._positionBullet(this);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Bullet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Bullet\"\r\n});\r\nObject.defineProperty(Bullet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Bullet.className])\r\n});\r\n//# sourceMappingURL=Bullet.js.map","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let wSign = width / Math.abs(width);\r\n        let hSign = height / Math.abs(height);\r\n        let x = 0;\r\n        let y = 0;\r\n        const strokeWidth = this.get(\"strokeWidth\", 0);\r\n        if (this.get(\"containStroke\", false)) {\r\n            width -= wSign * strokeWidth;\r\n            height -= hSign * strokeWidth;\r\n            x += wSign * strokeWidth / 2;\r\n            y += hSign * strokeWidth / 2;\r\n        }\r\n        let w = width;\r\n        let h = height;\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(x + crtl * wSign, y);\r\n            display.lineTo(x + w - crtr * wSign, y);\r\n            if (crtr > 0) {\r\n                display.arcTo(x + w, y, x + w, y + crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(x + w, y + h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(x + w, y + h, x + w - crbr * wSign, y + h, crbr);\r\n            }\r\n            display.lineTo(x + crbl * wSign, y + h);\r\n            if (crbl > 0) {\r\n                display.arcTo(x, y + h, x, y + h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(x, y + crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(x, y, x + crtl * wSign, y, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n        this.setPrivate(\"trustBounds\", true);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    makeDataItem(data, dataContext) {\r\n        let dataItem = new DataItem(this, dataContext, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    pushDataItem(data, dataContext) {\r\n        const dataItem = this.makeDataItem(data, dataContext);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            const endDays = date.getUTCDate();\r\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            if (endDays > startDays) {\r\n                date.setUTCMonth(month + count, startDays);\r\n            }\r\n            else {\r\n                date.setUTCMonth(month + count);\r\n            }\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function roun(time, unit, count, root, firstTime) {\r\n    let firstDate;\r\n    if (firstTime != null) {\r\n        firstDate = new Date(firstTime);\r\n    }\r\n    return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                if (count > 1) {\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"week\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"week\") / count);\r\n                        let duration = getDuration(\"week\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let initialTime = date.getTime();\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        let offsetDif = tzoffset - timeZoneOffset;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        // fix to solve #101989\r\n        const newTime = date.getTime();\r\n        let hDuration = 3600000;\r\n        if (unit == \"hour\") {\r\n            hDuration = 3600000 * count;\r\n        }\r\n        if (newTime + hDuration <= initialTime) {\r\n            if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n                date = new Date(newTime + hDuration);\r\n            }\r\n        }\r\n        // end of fix\r\n        let newTimeZoneOffset = date.getTimezoneOffset();\r\n        let newTzoffset = timezone.offsetUTC(date);\r\n        let newDiff = newTzoffset - newTimeZoneOffset;\r\n        if (newDiff != offsetDif) {\r\n            date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n//import { Animations } from \"../../core/util/Animation\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseSeriesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\", \"customValue\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            bullet._index = index;\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _makeBulletReal(dataItem, bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            sprite._setDataItem(dataItem);\r\n            sprite.setRaw(\"position\", \"absolute\");\r\n            this.bulletsContainer.children.push(sprite);\r\n        }\r\n        bullet.series = this;\r\n        dataItem.bullets.push(bullet);\r\n    }\r\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */\r\n    addBullet(dataItem, bullet) {\r\n        if (!dataItem.bullets) {\r\n            dataItem.bullets = [];\r\n        }\r\n        if (bullet) {\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._baseSeriesDirty = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"name\")) {\r\n            this.updateLegendValue();\r\n        }\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this._baseSeriesDirty = true;\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                    if (startIndex != 0) {\r\n                        this._psi = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleRemoved() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        return index;\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\r\n            for (let i = adjustedStartIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            if (endIndex < this.dataItems.length - 1) {\r\n                const dataItem = this.dataItems[endIndex];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                }\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            delete previous[key];\r\n            for (let i = startIndex; i < adjustedStartIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (previous[key] == null) {\r\n                        previous[key] = value;\r\n                    }\r\n                    if (value != null) {\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState && rule.neutral) {\r\n                                defaultState.set(rule.key, rule.neutral);\r\n                            }\r\n                        }\r\n                        if (!rule.customFunction) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState) {\r\n                                defaultState.set(rule.key, propertyValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n            dataItem.bullets = undefined;\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n//# sourceMappingURL=Line.js.map","import { Text } from \"./Text\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport class RadialText extends Text {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeRadialText(\"\", this.textStyle)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._display.clear();\r\n        if (this.isDirty(\"textType\")) {\r\n            this._display.textType = this.get(\"textType\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"radius\")) {\r\n            this._display.radius = this.get(\"radius\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"startAngle\")) {\r\n            this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"inside\")) {\r\n            this._display.inside = this.get(\"inside\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"orientation\")) {\r\n            this._display.orientation = this.get(\"orientation\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"kerning\")) {\r\n            this._display.kerning = this.get(\"kerning\");\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RadialText, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialText\"\r\n});\r\nObject.defineProperty(RadialText, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Text.classNames.concat([RadialText.className])\r\n});\r\n//# sourceMappingURL=RadialText.js.map","// import * as $object from \"../util/Object\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { Label } from \"./Label\";\r\nimport { RadialText } from \"./RadialText\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nexport class RadialLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_flipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._textKeys.push(\"textType\", \"kerning\");\r\n        super._afterNew();\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(RadialText.new(this._root, {}));\r\n    }\r\n    /**\r\n     * Returns base radius in pixels.\r\n     *\r\n     * @return Base radius\r\n     */\r\n    baseRadius() {\r\n        const radiusPrivate = this.getPrivate(\"radius\", 0);\r\n        const innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\r\n        const baseRadius = this.get(\"baseRadius\", 0);\r\n        return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\r\n    }\r\n    /**\r\n     * Returns radius adjustment in pixels.\r\n     *\r\n     * @return Radius\r\n     */\r\n    radius() {\r\n        const inside = this.get(\"inside\", false);\r\n        return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\r\n            const textType = this.get(\"textType\", \"adjusted\");\r\n            const inside = this.get(\"inside\", false);\r\n            const orientation = this.get(\"orientation\");\r\n            let labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\r\n            this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\r\n            this._text.set(\"inside\", inside);\r\n            const sin = $math.sin(labelAngle);\r\n            const cos = $math.cos(labelAngle);\r\n            let baseRadius = this.baseRadius();\r\n            let radius = this.radius();\r\n            this._display.angle = 0;\r\n            if (textType == \"circular\") {\r\n                this.setAll({\r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                    paddingLeft: 0,\r\n                    paddingRight: 0\r\n                });\r\n                this.setRaw(\"x\", undefined);\r\n                this.setRaw(\"y\", undefined);\r\n                // Circular labels are handled and positioned differently\r\n                this._text.set(\"orientation\", orientation);\r\n                this._text.set(\"radius\", radius);\r\n            }\r\n            else {\r\n                if (baseRadius == 0) {\r\n                    labelAngle = 0;\r\n                    radius = 0;\r\n                }\r\n                // Positioning of radial/regular labels are teh same\r\n                let x = radius * cos;\r\n                let y = radius * sin;\r\n                if (textType == \"radial\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                    if ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\r\n                        this._display.angle = labelAngle; // + 90;\r\n                        this._flipped = false;\r\n                    }\r\n                    else {\r\n                        this._display.angle = labelAngle + 180;\r\n                        this._flipped = true;\r\n                    }\r\n                    this._dirty.rotation = false;\r\n                }\r\n                else if (textType == \"adjusted\") {\r\n                    this.setRaw(\"centerX\", p50);\r\n                    this.setRaw(\"centerY\", p50);\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n                else if (textType == \"regular\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const textType = this.get(\"textType\", \"regular\");\r\n        const inside = this.get(\"inside\", false);\r\n        let dx = 0;\r\n        let dy = 0;\r\n        let labelAngle = this.get(\"labelAngle\", 0);\r\n        let bounds = this.localBounds();\r\n        let w = bounds.right - bounds.left;\r\n        let h = bounds.bottom - bounds.top;\r\n        if (textType == \"radial\") {\r\n            if (this._flipped) {\r\n                let centerX = this.get(\"centerX\");\r\n                if (centerX instanceof Percent) {\r\n                    w = w * (1 - centerX.value * 2);\r\n                }\r\n                dx = w * $math.cos(labelAngle);\r\n                dy = w * $math.sin(labelAngle);\r\n            }\r\n        }\r\n        else if (!inside && textType == \"adjusted\") {\r\n            dx = w / 2 * $math.cos(labelAngle);\r\n            dy = h / 2 * $math.sin(labelAngle);\r\n        }\r\n        this.setRaw(\"dx\", dx);\r\n        this.setRaw(\"dy\", dy);\r\n        super._updatePosition();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n}\r\nObject.defineProperty(RadialLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialLabel\"\r\n});\r\nObject.defineProperty(RadialLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([RadialLabel.className])\r\n});\r\n//# sourceMappingURL=RadialLabel.js.map","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import { Graphics } from \"./Graphics\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Slice extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"iy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_generator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if ($type.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if ($type.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        let radius = this.get(\"radius\", 0);\r\n        let innerRadius = this.get(\"innerRadius\", 0);\r\n        let dRadius = this.get(\"dRadius\", 0);\r\n        let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n        radius += dRadius;\r\n        innerRadius += dInnerRadius;\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (tooltipX instanceof Percent) {\r\n            x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\r\n        }\r\n        if (tooltipY instanceof Percent) {\r\n            y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\r\n        }\r\n        if (this.get(\"arc\") >= 360 && innerRadius == 0) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        return { x, y };\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            let startAngle = this.get(\"startAngle\", 0);\r\n            let arc = this.get(\"arc\", 0);\r\n            const generator = this._generator;\r\n            if (arc < 0) {\r\n                startAngle = startAngle + arc;\r\n                arc = arc * -1;\r\n            }\r\n            if (arc > 0.1) { // this fixes bug with full circle when arc is very small\r\n                generator.cornerRadius(this.get(\"cornerRadius\", 0));\r\n            }\r\n            generator.context(this._display);\r\n            let radius = this.get(\"radius\", 0);\r\n            let innerRadius = this.get(\"innerRadius\", 0);\r\n            let dRadius = this.get(\"dRadius\", 0);\r\n            let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n            radius += dRadius;\r\n            innerRadius += dInnerRadius;\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            generator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\r\n            let middleAngle = startAngle + arc / 2;\r\n            this.ix = $math.cos(middleAngle);\r\n            this.iy = $math.sin(middleAngle);\r\n            const shiftRadius = this.get(\"shiftRadius\", 0);\r\n            this.setRaw(\"dx\", this.ix * shiftRadius);\r\n            this.setRaw(\"dy\", this.iy * shiftRadius);\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Slice, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slice\"\r\n});\r\nObject.defineProperty(Slice, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Slice.className])\r\n});\r\n//# sourceMappingURL=Slice.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n                const patterns = this.get(\"patterns\");\r\n                if (patterns) {\r\n                    patterns.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else if (change.type === \"swap\") {\r\n                const a = change.a;\r\n                const b = change.b;\r\n                const aIndex = this.series.indexOf(a);\r\n                const bIndex = this.series.indexOf(b);\r\n                children.moveValue(a, bIndex);\r\n                children.moveValue(b, aIndex);\r\n                this.series.each((series) => {\r\n                    this._processSeries(series);\r\n                    series.markDirtyValues();\r\n                });\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        series._handleRemoved();\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n//# sourceMappingURL=Tick.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const language = this._root.language;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         */\r\n        r(\"XYChart\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            panX: false,\r\n            panY: false,\r\n            wheelStep: 0.25,\r\n            arrangeTooltips: true,\r\n            pinchZoomX: false,\r\n            pinchZoomY: false\r\n        });\r\n        r(\"XYSeries\").setAll({\r\n            legendLabelText: \"{name}\"\r\n        });\r\n        r(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: XYChartScrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingRight: 0,\r\n            colors: ColorSet.new(this._root, {\r\n                saturation: 0\r\n            })\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusBL: 0,\r\n            fillOpacity: 0,\r\n            focusable: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n            cornerRadiusBL: 40,\r\n            cornerRadiusBR: 40,\r\n            cornerRadiusTL: 40,\r\n            cornerRadiusTR: 40\r\n        });\r\n        r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true\r\n        });\r\n        r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true,\r\n            minGridDistance: 5\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5,\r\n            centerY: p100,\r\n            minPosition: 0.01,\r\n            maxPosition: 0.99,\r\n            fontSize: \"0.8em\"\r\n        });\r\n        r(\"AxisLabel\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"AxisLabel\", [\"x\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"minor\"]).setAll({\r\n            fontSize: \"0.6em\"\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Cursor\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYCursor\").setAll({\r\n            behavior: \"none\",\r\n            layer: 30,\r\n            exportable: false,\r\n            snapToSeriesBy: \"xy\",\r\n            moveThreshold: 1\r\n        });\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.15,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Axes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Axis\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            minZoomCount: 1,\r\n            maxZoomCount: Infinity,\r\n            maxZoomFactor: 1000,\r\n            maxDeviation: 0.1,\r\n            snapTooltip: true,\r\n            tooltipLocation: 0.5,\r\n            panX: true,\r\n            panY: true,\r\n            zoomX: true,\r\n            zoomY: true,\r\n            fixAxisSize: true\r\n        });\r\n        r(\"AxisLabel\").setAll({\r\n            location: 0.5,\r\n            multiLocation: 0,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            paddingTop: 3,\r\n            paddingBottom: 3,\r\n            paddingLeft: 5,\r\n            paddingRight: 5\r\n        });\r\n        // The following is deprecated following text measuring updates in 5.0.5\r\n        // r(\"AxisLabel\", [\"y\"]).setAll({\r\n        // \ttextAlign: \"right\"\r\n        // });\r\n        // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n        // \ttextAlign: \"left\"\r\n        // });\r\n        r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n            layer: 30\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n            crisp: true\r\n        });\r\n        {\r\n            const rule = r(\"AxisRenderer\");\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"AxisRendererX\").setAll({\r\n            minGridDistance: 120,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            width: p100\r\n        });\r\n        r(\"AxisRendererY\").setAll({\r\n            minGridDistance: 40,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            height: p100\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n        }\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        {\r\n            const rule = r(\"Grid\");\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.15,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"minor\"]);\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.07,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Grid\", [\"base\"]).setAll({\r\n            strokeOpacity: 0.3\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n            rule.setAll({\r\n                visible: false,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                fillOpacity: 0.05,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n            isMeasured: true\r\n        });\r\n        // hides all elements of series axis range\r\n        r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n            visible: false,\r\n            isMeasured: true\r\n        });\r\n        r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"AxisTick\");\r\n            rule.setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                strokeOpacity: 1,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                visible: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"CategoryAxis\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            fillRule: (dataItem, index) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        axisFill.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        axisFill.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const gridIntervals = [\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ];\r\n        const dateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_hour\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const periodChangeDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_day\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const tooltipDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n            \"second\": language.translate(\"_date_second_full\"),\r\n            \"minute\": language.translate(\"_date_minute_full\"),\r\n            \"hour\": language.translate(\"_date_hour_full\"),\r\n            \"day\": language.translate(\"_date_day_full\"),\r\n            \"week\": language.translate(\"_date_week_full\"),\r\n            \"month\": language.translate(\"_date_month_full\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        r(\"CategoryDateAxis\").setAll({\r\n            markUnitChange: true,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n        });\r\n        r(\"DateAxis\").setAll({\r\n            maxZoomFactor: null,\r\n            strictMinMax: true,\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            markUnitChange: true,\r\n            groupData: false,\r\n            groupCount: 500,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n            tooltipDateFormats: tooltipDateFormats,\r\n            groupIntervals: [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"year\", count: 1 }\r\n            ],\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const endValue = dataItem.get(\"endValue\");\r\n                    const intervalDuration = axis.intervalDuration();\r\n                    const baseInterval = axis.getPrivate(\"baseInterval\");\r\n                    const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                    let min = axis.getPrivate(\"min\", 0);\r\n                    min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value != null && endValue != null) {\r\n                        const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                        if (val == Math.round(val)) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"GaplessDateAxis\").setAll({\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const index = dataItem.get(\"index\");\r\n                    let visible = false;\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        visible = true;\r\n                    }\r\n                    axisFill.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        });\r\n        r(\"ValueAxis\").setAll({\r\n            baseValue: 0,\r\n            logarithmic: false,\r\n            strictMinMax: false,\r\n            autoZoom: true,\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const step = axis.getPrivate(\"step\");\r\n                    if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                        if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"DurationAxis\").setAll({\r\n            baseUnit: \"second\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYSeries\").setAll({\r\n            maskBullets: true,\r\n            stackToNegative: true,\r\n            locationX: 0.5,\r\n            locationY: 0.5,\r\n            snapTooltip: false,\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\",\r\n            seriesTooltipTarget: \"series\"\r\n        });\r\n        r(\"BaseColumnSeries\").setAll({\r\n            adjustBulletPosition: true\r\n        });\r\n        r(\"ColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(70),\r\n            height: percent(70),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"LineSeries\").setAll({\r\n            connect: true,\r\n            autoGapCount: 1.1,\r\n            stackToNegative: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n            position: \"absolute\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n            visible: false,\r\n            fillOpacity: 0,\r\n            position: \"absolute\",\r\n            strokeWidth: 0,\r\n            strokeOpacity: 0,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, h / 2);\r\n                    display.lineTo(w, h / 2);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"SmoothedXYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedXLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"Candlestick\").setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(50),\r\n            height: percent(50),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"OHLC\").setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"CandlestickSeries\").setAll({\r\n            lowValueXGrouped: \"low\",\r\n            lowValueYGrouped: \"low\",\r\n            highValueXGrouped: \"high\",\r\n            highValueYGrouped: \"high\",\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\"\r\n        });\r\n        // These rules can be used for regular columns, too\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // Hollow\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // AXIS RANGE GRIP\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                strokeWidth: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(2, 0.5);\r\n                    display.lineTo(2, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"rangegrip\"]).setAll({\r\n            draggable: true,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n            centerY: p100\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map",";\r\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.topPlotContainer.children.push(Button.new(this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this._disposers.push(this.xAxes);\r\n        this._disposers.push(this.yAxes);\r\n        const root = this._root;\r\n        let verticalLayout = this._root.verticalLayout;\r\n        const zoomOutButton = this.zoomOutButton;\r\n        zoomOutButton.events.on(\"click\", () => {\r\n            this.zoomOut();\r\n        });\r\n        zoomOutButton.hide(0);\r\n        zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n        this.chartContainer.set(\"layout\", verticalLayout);\r\n        const plotContainer = this.plotContainer;\r\n        plotContainer.children.push(this.seriesContainer);\r\n        this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n        this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n        plotContainer.children.push(this.topGridContainer);\r\n        plotContainer.children.push(this.bulletsContainer);\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        plotContainer.set(\"interactive\", true);\r\n        plotContainer.set(\"interactiveChildren\", false);\r\n        plotContainer.set(\"background\", Rectangle.new(root, {\r\n            themeTags: [\"plotbackground\", \"xy\", \"background\"]\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handlePlotDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handlePlotUp(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handlePlotMove(event);\r\n        }));\r\n        this._maskGrid();\r\n        this._setUpTouch();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.plotContainer._display.cancelTouch) {\r\n            this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    _maskGrid() {\r\n        this.gridContainer.set(\"maskContent\", true);\r\n        this.topGridContainer.set(\"maskContent\", true);\r\n    }\r\n    _removeSeries(series) {\r\n        series._unstack();\r\n        if (series._posXDp) {\r\n            series._posXDp.dispose();\r\n        }\r\n        if (series._posYDp) {\r\n            series._posYDp.dispose();\r\n        }\r\n        series.set(\"baseAxis\", undefined);\r\n        const xAxis = series.get(\"xAxis\");\r\n        if (xAxis) {\r\n            $array.remove(xAxis.series, series);\r\n            xAxis.markDirtyExtremes();\r\n        }\r\n        const yAxis = series.get(\"yAxis\");\r\n        if (yAxis) {\r\n            $array.remove(yAxis.series, series);\r\n            yAxis.markDirtyExtremes();\r\n        }\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (snapToSeries) {\r\n                $array.remove(snapToSeries, series);\r\n            }\r\n        }\r\n        super._removeSeries(series);\r\n    }\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    handleWheel(event) {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        const wheelEvent = event.originalEvent;\r\n        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n        // some page element is over the chart.\r\n        let prevent = false;\r\n        if ($utils.isLocalEvent(wheelEvent, this)) {\r\n            prevent = true;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const plotPoint = plotContainer.toLocal(event.point);\r\n        const wheelStep = this.get(\"wheelStep\", 0.2);\r\n        const shiftY = wheelEvent.deltaY / 100;\r\n        const shiftX = wheelEvent.deltaX / 100;\r\n        const wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n        const wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n        if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start - delta;\r\n                    let newEnd = end - delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if (prevent) {\r\n            wheelEvent.preventDefault();\r\n        }\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n            this._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\r\n                const wheelEvent = event.originalEvent;\r\n                if ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\r\n                    this.handleWheel(event);\r\n                }\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _getWheelSign(axis) {\r\n        let sign = 1;\r\n        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n            sign = -1;\r\n        }\r\n        return sign;\r\n    }\r\n    _fixWheel(start, end) {\r\n        const diff = end - start;\r\n        if (start < 0) {\r\n            start = 0;\r\n            end = start + diff;\r\n        }\r\n        if (end > 1) {\r\n            end = 1;\r\n            start = end - diff;\r\n        }\r\n        return [start, end];\r\n    }\r\n    _handlePlotDown(event) {\r\n        const originalEvent = event.originalEvent;\r\n        if (originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const plotContainer = this.plotContainer;\r\n        let local = plotContainer.toLocal(event.point);\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const pointerId = originalEvent.pointerId;\r\n            if (pointerId) {\r\n                if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                    const xAxis = this.xAxes.getIndex(0);\r\n                    const yAxis = this.yAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        this._downStartX = xAxis.get(\"start\", 0);\r\n                        this._downEndX = xAxis.get(\"end\", 1);\r\n                    }\r\n                    if (yAxis) {\r\n                        this._downStartY = yAxis.get(\"start\", 0);\r\n                        this._downEndY = yAxis.get(\"end\", 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.get(\"panX\") || this.get(\"panY\")) {\r\n            if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                //this._downPoint = local;\r\n                this._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    this.xAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                if (panY) {\r\n                    this.yAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                const eventType = \"panstarted\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelAnimation(animation) {\r\n        if (animation) {\r\n            animation.events.on(\"stopped\", () => {\r\n                this._dispatchWheelAnimation();\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchWheelAnimation();\r\n        }\r\n    }\r\n    _dispatchWheelAnimation() {\r\n        const eventType = \"wheelended\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    _handlePlotUp(event) {\r\n        const downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                if (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\r\n                    const eventType = \"pancancelled\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                    }\r\n                }\r\n                const eventType = \"panended\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n        // TODO: handle multitouch\r\n        this._downPoint = undefined;\r\n        this.xAxes.each((xAxis) => {\r\n            xAxis._isPanning = false;\r\n        });\r\n        this.yAxes.each((yAxis) => {\r\n            yAxis._isPanning = false;\r\n        });\r\n    }\r\n    _handlePlotMove(event) {\r\n        const plotContainer = this.plotContainer;\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event.originalEvent;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n            let local = plotContainer.toLocal(event.point);\r\n            const panX = this.get(\"panX\");\r\n            const panY = this.get(\"panY\");\r\n            if (panX) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.disableType(\"rangechanged\");\r\n                }\r\n                this.xAxes.each((axis) => {\r\n                    if (axis.get(\"panX\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaX *= -1;\r\n                        }\r\n                        let start = panStart + deltaX;\r\n                        let end = panEnd + deltaX;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n            if (panY) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.disableType(\"rangechanged\");\r\n                }\r\n                this.yAxes.each((axis) => {\r\n                    if (axis.get(\"panY\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaY *= -1;\r\n                        }\r\n                        let start = panStart - deltaY;\r\n                        let end = panEnd - deltaY;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        const plotContainer = this.plotContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(plotContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const w = plotContainer.width();\r\n            const h = plotContainer.height();\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                movePoint0 = plotContainer.toLocal(movePoint0);\r\n                movePoint1 = plotContainer.toLocal(movePoint1);\r\n                downPoint0 = plotContainer.toLocal(downPoint0);\r\n                downPoint1 = plotContainer.toLocal(downPoint1);\r\n                if (this.get(\"pinchZoomX\")) {\r\n                    const downStartX = this._downStartX;\r\n                    const downEndX = this._downEndX;\r\n                    if (downStartX != null && downEndX != null) {\r\n                        if (downPoint0.x > downPoint1.x) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                        let downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                        let movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                        let movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartX * d + downPos0 - movePos0 * d;\r\n                        let e = downEndX * d + downPos1 - movePos1 * d;\r\n                        this.xAxes.each((xAxis) => {\r\n                            let sa = xAxis.fixPosition(s);\r\n                            let ea = xAxis.fixPosition(e);\r\n                            xAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n                if (this.get(\"pinchZoomY\")) {\r\n                    const downStartY = this._downStartY;\r\n                    const downEndY = this._downEndY;\r\n                    if (downStartY != null && downEndY != null) {\r\n                        if (downPoint0.y < downPoint1.y) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                        let downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                        let movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                        let movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartY * d + downPos0 - movePos0 * d;\r\n                        let e = downEndY * d + downPos1 - movePos1 * d;\r\n                        this.yAxes.each((yAxis) => {\r\n                            let sa = yAxis.fixPosition(s);\r\n                            let ea = yAxis.fixPosition(e);\r\n                            yAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleCursorPosition() {\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const cursorPoint = cursor.getPrivate(\"point\");\r\n            let snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (cursor._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            if (snapToSeries && cursorPoint) {\r\n                const snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\r\n                const dataItems = [];\r\n                $array.each(snapToSeries, (series) => {\r\n                    if (!series.isHidden() && !series.isHiding()) {\r\n                        if (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\r\n                            const startIndex = series.startIndex();\r\n                            const endIndex = series.endIndex();\r\n                            for (let i = startIndex; i < endIndex; i++) {\r\n                                const dataItem = series.dataItems[i];\r\n                                if (dataItem && !dataItem.isHidden()) {\r\n                                    dataItems.push(dataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                            if (tooltipDataItem) {\r\n                                dataItems.push(tooltipDataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                let minDistance = Infinity;\r\n                let closestItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    const point = dataItem.get(\"point\");\r\n                    if (point) {\r\n                        let distance = 0;\r\n                        if (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\r\n                            distance = Math.abs(cursorPoint.x - point.x);\r\n                        }\r\n                        else if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\r\n                            distance = Math.abs(cursorPoint.y - point.y);\r\n                        }\r\n                        else {\r\n                            distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closestItem = dataItem;\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(snapToSeries, (series) => {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                });\r\n                if (closestItem) {\r\n                    let series = closestItem.component;\r\n                    series.showDataItemTooltip(closestItem);\r\n                    series.setRaw(\"tooltipDataItem\", closestItem);\r\n                    const point = closestItem.get(\"point\");\r\n                    if (point) {\r\n                        // removing x and y to solve #72225\r\n                        cursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateCursor() {\r\n        let cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.updateCursor();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.plotContainer.children.push(cursor);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this.series.each((series) => {\r\n            this._colorize(series);\r\n        });\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this.isDirty(\"cursor\")) {\r\n            const previous = this._prevSettings.cursor;\r\n            const cursor = this.get(\"cursor\");\r\n            if (cursor !== previous) {\r\n                this._disposeProperty(\"cursor\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (cursor) {\r\n                    cursor._setChart(this);\r\n                    this._addCursor(cursor);\r\n                    this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\r\n                        this._handleCursorSelectEnd();\r\n                    }));\r\n                }\r\n                //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                this._prevSettings.cursor = cursor;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarX\")) {\r\n            const previous = this._prevSettings.scrollbarX;\r\n            const scrollbarX = this.get(\"scrollbarX\");\r\n            if (scrollbarX !== previous) {\r\n                this._disposeProperty(\"scrollbarX\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarX) {\r\n                    if (!scrollbarX.parent) {\r\n                        this.topAxesContainer.children.push(scrollbarX);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\r\n                        this.xAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarX.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.xAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarX = scrollbarX;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarY\")) {\r\n            const previous = this._prevSettings.scrollbarY;\r\n            const scrollbarY = this.get(\"scrollbarY\");\r\n            if (scrollbarY !== previous) {\r\n                this._disposeProperty(\"scrollbarY\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarY) {\r\n                    if (!scrollbarY.parent) {\r\n                        this.rightAxesContainer.children.push(scrollbarY);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\r\n                        this.yAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarY.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.yAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarY = scrollbarY;\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        const xAxis = series.get(\"xAxis\");\r\n        const yAxis = series.get(\"yAxis\");\r\n        $array.move(xAxis.series, series);\r\n        $array.move(yAxis.series, series);\r\n        series._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        series._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        if (!series.get(\"baseAxis\")) {\r\n            if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                series.set(\"baseAxis\", yAxis);\r\n            }\r\n            else {\r\n                series.set(\"baseAxis\", xAxis);\r\n            }\r\n        }\r\n        if (series.get(\"stacked\")) {\r\n            series._markDirtyKey(\"stacked\");\r\n            $array.each(series.dataItems, (dataItem) => {\r\n                dataItem.set(\"stackToItemY\", undefined);\r\n                dataItem.set(\"stackToItemX\", undefined);\r\n            });\r\n        }\r\n        series._markDirtyAxes();\r\n        yAxis.markDirtyExtremes();\r\n        xAxis.markDirtyExtremes();\r\n        xAxis._seriesAdded = true;\r\n        yAxis._seriesAdded = true;\r\n        this._colorize(series);\r\n    }\r\n    _colorize(series) {\r\n        const colorSet = this.get(\"colors\");\r\n        if (colorSet) {\r\n            if (series.get(\"fill\") == null) {\r\n                const color = colorSet.next();\r\n                series._setSoft(\"stroke\", color);\r\n                series._setSoft(\"fill\", color);\r\n            }\r\n        }\r\n        const patternSet = this.get(\"patterns\");\r\n        if (patternSet) {\r\n            if (series.get(\"fillPattern\") == null) {\r\n                const pattern = patternSet.next();\r\n                series._setSoft(\"fillPattern\", pattern);\r\n            }\r\n        }\r\n    }\r\n    _handleCursorSelectEnd() {\r\n        const cursor = this.get(\"cursor\");\r\n        const behavior = cursor.get(\"behavior\");\r\n        const downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n        const downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n        const positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\r\n        const positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\r\n        this.xAxes.each((axis) => {\r\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionX);\r\n                let position1 = axis.toAxisPosition(positionX);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionY);\r\n                let position1 = axis.toAxisPosition(positionY);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n    }\r\n    _handleScrollbar(axes, start, end, priority) {\r\n        axes.each((axis) => {\r\n            let axisStart = axis.fixPosition(start);\r\n            let axisEnd = axis.fixPosition(end);\r\n            let zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n            const updateScrollbar = \"updateScrollbar\";\r\n            axis.setPrivateRaw(updateScrollbar, false);\r\n            if (zoomAnimation) {\r\n                zoomAnimation.events.on(\"stopped\", () => {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                });\r\n            }\r\n            else {\r\n                axis.setPrivateRaw(updateScrollbar, true);\r\n            }\r\n        });\r\n    }\r\n    _processAxis(axes, container) {\r\n        return axes.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axis) => {\r\n                    this._removeAxis(axis);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                container.children.push(change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                container.children.setIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                container.children.insertIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxis(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                container.children.moveValue(change.value, change.newIndex);\r\n                change.value.processChart(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _removeAxis(axis) {\r\n        if (!axis.isDisposed()) {\r\n            const axisParent = axis.parent;\r\n            if (axisParent) {\r\n                axisParent.children.removeValue(axis);\r\n            }\r\n            const gridContainer = axis.gridContainer;\r\n            const gridParent = gridContainer.parent;\r\n            if (gridParent) {\r\n                gridParent.children.removeValue(gridContainer);\r\n            }\r\n            const topGridContainer = axis.topGridContainer;\r\n            const topGridParent = topGridContainer.parent;\r\n            if (topGridParent) {\r\n                topGridParent.children.removeValue(topGridContainer);\r\n            }\r\n        }\r\n    }\r\n    _updateChartLayout() {\r\n        const left = this.leftAxesContainer.width();\r\n        const right = this.rightAxesContainer.width();\r\n        const bottomAxesContainer = this.bottomAxesContainer;\r\n        bottomAxesContainer.set(\"paddingLeft\", left);\r\n        bottomAxesContainer.set(\"paddingRight\", right);\r\n        const topAxesContainer = this.topAxesContainer;\r\n        topAxesContainer.set(\"paddingLeft\", left);\r\n        topAxesContainer.set(\"paddingRight\", right);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(axis) {\r\n        var cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            this.addDisposer(axis.on(\"start\", () => {\r\n                this._updateCursor();\r\n            }));\r\n            this.addDisposer(axis.on(\"end\", () => {\r\n                this._updateCursor();\r\n            }));\r\n        }\r\n    }\r\n    _handleAxisSelection(axis, force) {\r\n        let start = axis.fixPosition(axis.get(\"start\", 0));\r\n        let end = axis.fixPosition(axis.get(\"end\", 1));\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n        }\r\n        if (this.xAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarX.setRaw(\"start\", start);\r\n                    scrollbarX.setRaw(\"end\", end);\r\n                    scrollbarX.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        else if (this.yAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarY.setRaw(\"start\", start);\r\n                    scrollbarY.setRaw(\"end\", end);\r\n                    scrollbarY.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _handleZoomOut() {\r\n        let zoomOutButton = this.zoomOutButton;\r\n        if (zoomOutButton && zoomOutButton.parent) {\r\n            let visible = false;\r\n            this.xAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            this.yAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            if (visible) {\r\n                if (zoomOutButton.isHidden()) {\r\n                    zoomOutButton.show();\r\n                }\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    inPlot(point) {\r\n        const plotContainer = this.plotContainer;\r\n        const otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n        const global = plotContainer.toGlobal(point);\r\n        if (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\r\n            return true;\r\n        }\r\n        if (otherCharts) {\r\n            for (let i = otherCharts.length - 1; i >= 0; i--) {\r\n                const chart = otherCharts[i];\r\n                if (chart != this) {\r\n                    const chartPlotContainer = chart.plotContainer;\r\n                    const documentPoint = this._root.rootPointToDocument(global);\r\n                    const chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                    const local = chartPlotContainer.toLocal(chartRoot);\r\n                    if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    arrangeTooltips() {\r\n        const plotContainer = this.plotContainer;\r\n        const w = plotContainer.width();\r\n        const h = plotContainer.height();\r\n        let hh = this.height();\r\n        const bounds = this._root.tooltipContainer.get(\"layerMargin\");\r\n        if (bounds) {\r\n            if (bounds.bottom > hh) {\r\n                hh = bounds.bottom;\r\n            }\r\n        }\r\n        let plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n        let plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n        const tooltips = [];\r\n        let sum = 0;\r\n        let minDistance = Infinity;\r\n        let movePoint = this._movePoint;\r\n        let maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n        let maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n        let closest;\r\n        let closestPoint;\r\n        if ($type.isNumber(maxTooltipDistance)) {\r\n            this.series.each((series) => {\r\n                if (!series.isHidden()) {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            let distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                            if (maxTooltipDistanceBy == \"x\") {\r\n                                distance = Math.abs(movePoint.x - point.x);\r\n                            }\r\n                            else if (maxTooltipDistanceBy == \"y\") {\r\n                                distance = Math.abs(movePoint.y - point.y);\r\n                            }\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closest = series;\r\n                                closestPoint = point;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const tooltipSeries = [];\r\n        this.series.each((series) => {\r\n            const tooltip = series.get(\"tooltip\");\r\n            if (tooltip && !tooltip.get(\"forceHidden\")) {\r\n                let hidden = false;\r\n                let point = tooltip.get(\"pointTo\");\r\n                if (point) {\r\n                    if (maxTooltipDistance >= 0) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point && closestPoint) {\r\n                            if (series != closest) {\r\n                                let distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\r\n                                if (maxTooltipDistanceBy == \"x\") {\r\n                                    distance = Math.abs(closestPoint.x - point.x);\r\n                                }\r\n                                else if (maxTooltipDistanceBy == \"y\") {\r\n                                    distance = Math.abs(closestPoint.y - point.y);\r\n                                }\r\n                                if (distance > maxTooltipDistance) {\r\n                                    hidden = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (maxTooltipDistance == -1) {\r\n                        if (series != closest) {\r\n                            hidden = true;\r\n                        }\r\n                    }\r\n                    if (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                        hidden = true;\r\n                    }\r\n                    else {\r\n                        if (!hidden) {\r\n                            sum += point.y;\r\n                        }\r\n                    }\r\n                    if (hidden || series.isHidden() || series.isHiding()) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show();\r\n                        tooltips.push(tooltip);\r\n                        tooltipSeries.push(series);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n        if (this.get(\"arrangeTooltips\")) {\r\n            let totalTooltipH = 0;\r\n            let tooltipCount = 0;\r\n            const tooltipContainer = this._root.tooltipContainer;\r\n            const count = tooltips.length;\r\n            const average = sum / count;\r\n            if (average > h / 2 + plotT.y) {\r\n                tooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y));\r\n                let prevY = plotB.y;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    tooltipCount++;\r\n                    totalTooltipH += height;\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    prevY = Math.min(prevY - height, tooltip._fy - height);\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                });\r\n                if (prevY < 0) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = prevY;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        tooltipCount++;\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - prevY;\r\n                            let bottom = bounds.bottom - prevY;\r\n                            if (top < prevBottom) {\r\n                                top = prevBottom;\r\n                                bottom = top + tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                tooltips.reverse();\r\n                tooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y));\r\n                let prevY = 0;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    tooltipCount++;\r\n                    let height = tooltip.height();\r\n                    totalTooltipH += height;\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) });\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                    prevY = Math.max(prevY + height, tooltip._fy + height);\r\n                });\r\n                if (prevY > hh) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = hh;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        tooltipCount++;\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - (hh - prevY);\r\n                            let bottom = bounds.bottom - (hh - prevY);\r\n                            if (bottom > prevBottom) {\r\n                                bottom = prevBottom;\r\n                                top = bottom - tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (totalTooltipH == 0 && tooltipCount > 0) {\r\n                this._disposers.push(this.root.events.once(\"frameended\", () => {\r\n                    this.arrangeTooltips();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.plotContainer.toLocal(point);\r\n    }\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    zoomOut() {\r\n        this.xAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        // Explicitly disposing cursor to avoid memory leak of cursor adding\r\n        // keyboard events after parent chart has been disposed\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(XYChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYChart\"\r\n});\r\nObject.defineProperty(XYChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([XYChart.className])\r\n});\r\n//# sourceMappingURL=XYChart.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nexport class Grid extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Grid, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Grid\"\r\n});\r\nObject.defineProperty(Grid, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Grid.className])\r\n});\r\n//# sourceMappingURL=Grid.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nexport class XYCursor extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_alwaysShow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Graphics.new(this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n        super._afterNew();\r\n        this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n        this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n        this._drawLines();\r\n        this.setPrivateRaw(\"visible\", false);\r\n        this._disposers.push(this.setTimeout(() => {\r\n            this.setPrivate(\"visible\", true);\r\n        }, 500));\r\n        this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\r\n            this._handleXLine();\r\n        }));\r\n        this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\r\n            this._handleYLine();\r\n        }));\r\n        this._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\r\n        this._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                this._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\r\n            }));\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n        }\r\n    }\r\n    _handleXLine() {\r\n        let x = this.lineX.x();\r\n        let visible = true;\r\n        if (x < 0 || x > this.width()) {\r\n            visible = false;\r\n        }\r\n        this.lineX.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleYLine() {\r\n        let y = this.lineY.y();\r\n        let visible = true;\r\n        if (y < 0 || y > this.height()) {\r\n            visible = false;\r\n        }\r\n        this.lineY.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleLineMove(key, ctrlKey) {\r\n        let dir = \"\";\r\n        const chart = this.chart;\r\n        let axis;\r\n        if (chart && chart.xAxes.length) {\r\n            if (this._root.focused(this.lineX)) {\r\n                dir = \"positionX\";\r\n                axis = chart.xAxes.getIndex(0);\r\n            }\r\n            else if (this._root.focused(this.lineY)) {\r\n                axis = chart.yAxes.getIndex(0);\r\n                dir = \"positionY\";\r\n            }\r\n            let m = 1;\r\n            if (ctrlKey) {\r\n                m = 5;\r\n            }\r\n            if (axis) {\r\n                let inversed = axis.get(\"renderer\").get(\"inversed\", false);\r\n                let step;\r\n                if (key == \"ArrowRight\" || key == \"ArrowDown\") {\r\n                    step = 1;\r\n                }\r\n                else if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\r\n                    step = -1;\r\n                }\r\n                else if (key == \"Tab\") {\r\n                    step = 0;\r\n                }\r\n                if (step != null) {\r\n                    if (inversed) {\r\n                        step *= -1;\r\n                    }\r\n                    this.set(dir, axis.nextPosition(step * m));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleLineFocus() {\r\n        this._alwaysShow = this.get(\"alwaysShow\", false);\r\n        this.setAll({\r\n            positionX: this.getPrivate(\"positionX\", 0),\r\n            positionY: this.getPrivate(\"positionY\", 0),\r\n            alwaysShow: true\r\n        });\r\n        this._handleLineMove(\"Tab\");\r\n    }\r\n    _handleLineBlur() {\r\n        if (this.lineX.isFocus() || this.lineY.isFocus()) {\r\n            this.setAll({\r\n                positionX: undefined,\r\n                positionY: undefined,\r\n                alwaysShow: this._alwaysShow\r\n            });\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"xAxis\")) {\r\n            this._tooltipX = false;\r\n            const xAxis = this.get(\"xAxis\");\r\n            if (xAxis) {\r\n                const tooltip = xAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipX = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateXLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"yAxis\")) {\r\n            this._tooltipY = false;\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis) {\r\n                const tooltip = yAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipY = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateYLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleSyncWith() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const syncWith = this.get(\"syncWith\");\r\n            const otherCharts = [];\r\n            if (syncWith) {\r\n                $array.each(syncWith, (cursor) => {\r\n                    const chart = cursor.chart;\r\n                    if (chart) {\r\n                        otherCharts.push(chart);\r\n                    }\r\n                });\r\n            }\r\n            chart._otherCharts = otherCharts;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._handleSyncWith();\r\n        if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n            const positionX = this.get(\"positionX\");\r\n            const positionY = this.get(\"positionY\");\r\n            if (positionX == null && positionY == null) {\r\n                this.hide(0);\r\n            }\r\n            else {\r\n                this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                this.handleMove();\r\n            }\r\n        }\r\n    }\r\n    _updateXLine(tooltip) {\r\n        let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\r\n        if (this._toX != x) {\r\n            this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toX = x;\r\n        }\r\n    }\r\n    _updateYLine(tooltip) {\r\n        let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\r\n        if (this._toY != y) {\r\n            this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toY = y;\r\n        }\r\n    }\r\n    _drawLines() {\r\n        this.lineX.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, this.height());\r\n        });\r\n        this.lineY.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(this.width(), 0);\r\n        });\r\n    }\r\n    updateCursor() {\r\n        if (this.get(\"alwaysShow\")) {\r\n            this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n        }\r\n        this.handleMove();\r\n    }\r\n    _setChart(chart) {\r\n        this.chart = chart;\r\n        this._handleSyncWith();\r\n        const plotContainer = chart.plotContainer;\r\n        this.events.on(\"boundschanged\", () => {\r\n            this._disposers.push(this.setTimeout(() => {\r\n                this.updateCursor();\r\n            }, 50));\r\n        });\r\n        //this._display.interactive = true;\r\n        if ($utils.supports(\"touchevents\")) {\r\n            this._disposers.push(plotContainer.events.on(\"click\", (event) => {\r\n                if ($utils.isTouchEvent(event.originalEvent)) {\r\n                    this._handleMove(event);\r\n                }\r\n            }));\r\n            this._setUpTouch();\r\n        }\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleCursorDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleCursorUp(event);\r\n            if (!event.native && !this.isHidden()) {\r\n                this._handleMove(event);\r\n            }\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            if (!this.get(\"syncWith\")) {\r\n                if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\r\n                    // Ignore mouse movement if it originates on outside element and\r\n                    // we're not dragging.\r\n                    return;\r\n                }\r\n            }\r\n            this._handleMove(event);\r\n            if (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\r\n                this._handleLineBlur();\r\n                this._lastPoint2 = event.point;\r\n            }\r\n        }));\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this.selection);\r\n        }\r\n    }\r\n    _inPlot(point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.inPlot(point);\r\n        }\r\n        return false;\r\n    }\r\n    _handleCursorDown(event) {\r\n        if (event.originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const rootPoint = event.point;\r\n        let local = this._display.toLocal(rootPoint);\r\n        const chart = this.chart;\r\n        this.selection.set(\"draw\", () => { });\r\n        if (chart && this._inPlot(local)) {\r\n            this._downPoint = local;\r\n            if (this.get(\"behavior\") != \"none\") {\r\n                this.selection.show();\r\n                const type = \"selectstarted\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n            let positionX = this._getPosition(local).x;\r\n            let positionY = this._getPosition(local).y;\r\n            this.setPrivate(\"downPositionX\", positionX);\r\n            this.setPrivate(\"downPositionY\", positionY);\r\n        }\r\n    }\r\n    _handleCursorUp(event) {\r\n        // TODO: handle multitouch\r\n        if (this._downPoint) {\r\n            const behavior = this.get(\"behavior\", \"none\");\r\n            if (behavior != \"none\") {\r\n                if (behavior.charAt(0) === \"z\") {\r\n                    this.selection.hide();\r\n                }\r\n                const rootPoint = event.point;\r\n                let local = this._display.toLocal(rootPoint);\r\n                const downPoint = this._downPoint;\r\n                const moveThreshold = this.get(\"moveThreshold\", 1);\r\n                if (local && downPoint) {\r\n                    let dispatch = false;\r\n                    if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (dispatch) {\r\n                        const type = \"selectended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                    else {\r\n                        const type = \"selectcancelled\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._downPoint = undefined;\r\n    }\r\n    _handleMove(event) {\r\n        if (this.getPrivate(\"visible\")) {\r\n            const chart = this.chart;\r\n            if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                this.set(\"forceHidden\", true);\r\n                return;\r\n            }\r\n            else {\r\n                this.set(\"forceHidden\", false);\r\n            }\r\n            // TODO: handle multitouch\r\n            const rootPoint = event.point;\r\n            const lastPoint = this._lastPoint;\r\n            if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                return;\r\n            }\r\n            this._lastPoint = rootPoint;\r\n            this.setPrivate(\"lastPoint\", rootPoint);\r\n            this.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\r\n        }\r\n    }\r\n    _getPosition(point) {\r\n        return { x: point.x / this.width(), y: point.y / this.height() };\r\n    }\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    handleMove(point, skipEvent, originalEvent) {\r\n        if (!point) {\r\n            point = this._movePoint;\r\n        }\r\n        const alwaysShow = this.get(\"alwaysShow\");\r\n        if (!point) {\r\n            this.hide(0);\r\n            return;\r\n        }\r\n        this._movePoint = point;\r\n        let local = this._display.toLocal(point);\r\n        let chart = this.chart;\r\n        if (chart && (this._inPlot(local) || this._downPoint)) {\r\n            chart._movePoint = point;\r\n            if (this.isHidden()) {\r\n                this.show();\r\n                const behavior = this.get(\"behavior\", \"\");\r\n                if (behavior.charAt(0) == \"z\") {\r\n                    this.selection.set(\"draw\", () => { });\r\n                }\r\n            }\r\n            let x = local.x;\r\n            let y = local.y;\r\n            let xyPos = this._getPosition(local);\r\n            this.setPrivate(\"point\", local);\r\n            let snapToSeries = this.get(\"snapToSeries\");\r\n            if (this._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            let userPositionX = this.get(\"positionX\");\r\n            let positionX = xyPos.x;\r\n            if ($type.isNumber(userPositionX)) {\r\n                positionX = userPositionX;\r\n            }\r\n            let userPositionY = this.get(\"positionY\");\r\n            let positionY = xyPos.y;\r\n            if ($type.isNumber(userPositionY)) {\r\n                positionY = userPositionY;\r\n            }\r\n            this.setPrivate(\"positionX\", positionX);\r\n            this.setPrivate(\"positionY\", positionY);\r\n            const xy = this._getPoint(positionX, positionY);\r\n            x = xy.x;\r\n            y = xy.y;\r\n            chart.xAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionX, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            chart.yAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionY, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            if (!skipEvent) {\r\n                chart._handleCursorPosition();\r\n                const type = \"cursormoved\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\r\n                }\r\n            }\r\n            this._updateLines(x, y);\r\n            chart.arrangeTooltips();\r\n        }\r\n        else if (!this._downPoint) {\r\n            if (!alwaysShow) {\r\n                this.hide(0);\r\n                const type = \"cursorhidden\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n        }\r\n        if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n            this._updateSelection(local);\r\n        }\r\n    }\r\n    _getPoint(positionX, positionY) {\r\n        return { x: this.width() * positionX, y: this.height() * positionY };\r\n    }\r\n    _updateLines(x, y) {\r\n        if (!this._tooltipX) {\r\n            this.lineX.set(\"x\", x);\r\n        }\r\n        if (!this._tooltipY) {\r\n            this.lineY.set(\"y\", y);\r\n        }\r\n        this._drawLines();\r\n    }\r\n    _updateSelection(point) {\r\n        const selection = this.selection;\r\n        const behavior = this.get(\"behavior\");\r\n        const w = this.width();\r\n        const h = this.height();\r\n        if (point.x < 0) {\r\n            point.x = 0;\r\n        }\r\n        if (point.x > w) {\r\n            point.x = w;\r\n        }\r\n        if (point.y < 0) {\r\n            point.y = 0;\r\n        }\r\n        if (point.y > h) {\r\n            point.y = h;\r\n        }\r\n        selection.set(\"draw\", (display) => {\r\n            const downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                    display.moveTo(downPoint.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, point.y);\r\n                    display.lineTo(point.x, point.y);\r\n                    display.lineTo(point.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, downPoint.y);\r\n                }\r\n                else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                    display.moveTo(downPoint.x, 0);\r\n                    display.lineTo(downPoint.x, h);\r\n                    display.lineTo(point.x, h);\r\n                    display.lineTo(point.x, 0);\r\n                    display.lineTo(downPoint.x, 0);\r\n                }\r\n                else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                    display.moveTo(0, downPoint.y);\r\n                    display.lineTo(w, downPoint.y);\r\n                    display.lineTo(w, point.y);\r\n                    display.lineTo(0, point.y);\r\n                    display.lineTo(0, downPoint.y);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _onHide() {\r\n        if (this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.series.each((series) => {\r\n                    series.handleCursorHide();\r\n                });\r\n            }\r\n        }\r\n        super._onHide();\r\n    }\r\n    _onShow() {\r\n        if (!this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n            }\r\n        }\r\n        super._onShow();\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this.selection.dispose();\r\n    }\r\n}\r\nObject.defineProperty(XYCursor, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYCursor\"\r\n});\r\nObject.defineProperty(XYCursor, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([XYCursor.className])\r\n});\r\n//# sourceMappingURL=XYCursor.js.map","import { __awaiter } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nexport class XYSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(this, undefined, {})\r\n        });\r\n        Object.defineProperty(this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posXDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posYDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n        this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n        this._setRawDefault(\"vcx\", 1);\r\n        this._setRawDefault(\"vcy\", 1);\r\n        // this can't go to themes, as data might be parsed before theme\r\n        this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n        this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n        this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n        this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n        this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n        this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n        this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n        this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n        this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n        this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n        this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n        this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n        super._afterNew();\r\n        this.set(\"maskContent\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axisRange) => {\r\n                    this._removeAxisRange(axisRange);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxisRange(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n        this.onPrivate(\"startIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this.onPrivate(\"endIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this._makeFieldNames();\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        const container = Container.new(this._root, {});\r\n        axisRange.container = container;\r\n        this.children.push(container);\r\n        axisRange.series = this;\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        axisDataItem.setRaw(\"isRange\", true);\r\n        const axis = axisDataItem.component;\r\n        if (axis) {\r\n            axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n            const bullet = axisDataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n            const axisFill = axisDataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                container.set(\"mask\", axisFill);\r\n            }\r\n            axis._seriesAxisRanges.push(axisDataItem);\r\n        }\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        $object.each(this._dataSets, (_key, dataItems) => {\r\n            $array.each(dataItems, (dataItem) => {\r\n                dataItem.dispose();\r\n            });\r\n            dataItems.length = 0;\r\n        });\r\n    }\r\n    _removeAxisRange(axisRange) {\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        const axis = axisDataItem.component;\r\n        axisDataItem.dispose();\r\n        $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n        const container = axisRange.container;\r\n        if (container) {\r\n            container.dispose();\r\n        }\r\n    }\r\n    _updateFields() {\r\n        super._updateFields();\r\n        this._valueXFields = [];\r\n        this._valueYFields = [];\r\n        this._valueXShowFields = [];\r\n        this._valueYShowFields = [];\r\n        this.__valueXShowFields = [];\r\n        this.__valueYShowFields = [];\r\n        if (this.valueXFields) {\r\n            $array.each(this.valueXFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueXFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueXShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueXShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueXShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.valueYFields) {\r\n            $array.each(this.valueYFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueYFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueYShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueYShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueYShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._bullets = {};\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n        $array.removeFirst(this.get(\"xAxis\").series, this);\r\n        $array.removeFirst(this.get(\"yAxis\").series, this);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _min(key, value) {\r\n        let newValue = min(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _max(key, value) {\r\n        let newValue = max(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (!xAxis.inited || !yAxis.inited) {\r\n            return false;\r\n        }\r\n        const minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n        if (minBulletDistance > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let count = endIndex - startIndex;\r\n            if (xAxis == baseAxis) {\r\n                if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (yAxis == baseAxis) {\r\n                if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _makeFieldNames() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xName = xAxis.getPrivate(\"name\");\r\n        const xCapName = $utils.capitalizeFirst(xName);\r\n        const yName = yAxis.getPrivate(\"name\");\r\n        const yCapName = $utils.capitalizeFirst(yName);\r\n        const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const open = \"open\";\r\n        const low = \"low\";\r\n        const high = \"high\";\r\n        const show = \"Show\";\r\n        if (xAxis.className === \"ValueAxis\") {\r\n            this._xField = this.get((xName + xLetter + show));\r\n            this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n            this._xLowField = this.get((low + xCapName + xLetter + show));\r\n            this._xHighField = this.get((high + xCapName + xLetter + show));\r\n        }\r\n        else {\r\n            this._xField = (xName + xLetter);\r\n            this._xOpenField = (open + xCapName + xLetter);\r\n            this._xLowField = (low + xCapName + xLetter);\r\n            this._xHighField = (high + xCapName + xLetter);\r\n        }\r\n        if (yAxis.className === \"ValueAxis\") {\r\n            this._yField = this.get((yName + yLetter + show));\r\n            this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n            this._yLowField = this.get((low + yCapName + yLetter + show));\r\n            this._yHighField = this.get((high + yCapName + yLetter + show));\r\n        }\r\n        else {\r\n            this._yField = (yName + yLetter);\r\n            this._yOpenField = (open + yCapName + yLetter);\r\n            this._yLowField = (low + yCapName + yLetter);\r\n            this._yHighField = (high + yCapName + yLetter);\r\n        }\r\n    }\r\n    _fixVC() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const hiddenState = this.states.lookup(\"hidden\");\r\n        const sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n        if (hiddenState) {\r\n            let value = 0;\r\n            if (sequencedInterpolation) {\r\n                value = 0.999999999999; // makes animate, good for stacked\r\n            }\r\n            if (xAxis === baseAxis) {\r\n                hiddenState.set(\"vcy\", value);\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n            else {\r\n                hiddenState.set(\"vcy\", value);\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n        if (this.isDirty(\"maskBullets\")) {\r\n            this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n        }\r\n    }\r\n    _fixPosition() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n        this.bulletsContainer.set(\"y\", this.y());\r\n        this.bulletsContainer.set(\"x\", this.x());\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._bullets = {};\r\n        if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\r\n            this._updateFields();\r\n            this._makeFieldNames();\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        this.set(\"width\", this.get(\"xAxis\").width());\r\n        this.set(\"height\", this.get(\"yAxis\").height());\r\n        this._handleMaskBullets();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const tooltipPositionX = this.get(\"tooltipPositionX\");\r\n        let tooltipFieldX;\r\n        switch (tooltipPositionX) {\r\n            case \"open\":\r\n                tooltipFieldX = this._xOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldX = this._xLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldX = this._xHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldX = this._xField;\r\n        }\r\n        this._tooltipFieldX = tooltipFieldX;\r\n        const tooltipPositionY = this.get(\"tooltipPositionY\");\r\n        let tooltipFieldY;\r\n        switch (tooltipPositionY) {\r\n            case \"open\":\r\n                tooltipFieldY = this._yOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldY = this._yLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldY = this._yHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldY = this._yField;\r\n        }\r\n        this._tooltipFieldY = tooltipFieldY;\r\n        if (this.isDirty(\"baseAxis\")) {\r\n            this._fixVC();\r\n        }\r\n        this._fixPosition();\r\n        const stacked = this.get(\"stacked\");\r\n        if (this.isDirty(\"stacked\")) {\r\n            if (stacked) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                }\r\n                else {\r\n                    this._stack();\r\n                }\r\n            }\r\n            else {\r\n                this._unstack();\r\n            }\r\n        }\r\n        if (this._valuesDirty && !this._dataProcessed) {\r\n            this._dataProcessed = true;\r\n            if (stacked) {\r\n                this._stack();\r\n            }\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                $array.each(this._valueXShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedXValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minX\", value);\r\n                        this._max(\"maxX\", value);\r\n                    }\r\n                });\r\n                $array.each(this._valueYShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedYValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minY\", value);\r\n                        this._max(\"maxY\", value);\r\n                    }\r\n                });\r\n                xAxis.processSeriesDataItem(dataItem, this._valueXFields);\r\n                yAxis.processSeriesDataItem(dataItem, this._valueYFields);\r\n            });\r\n            xAxis._seriesValuesDirty = true;\r\n            yAxis._seriesValuesDirty = true;\r\n            if (!this.get(\"ignoreMinMax\")) {\r\n                if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                    xAxis.markDirtyExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                    yAxis.markDirtyExtremes();\r\n                }\r\n            }\r\n            this._markStakedDirtyStack();\r\n            //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n            if (!this.get(\"tooltipDataItem\")) {\r\n                this.updateLegendValue(undefined);\r\n            }\r\n        }\r\n        if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n            this._markStakedDirtyStack();\r\n        }\r\n        if (!this._dataGrouped) {\r\n            xAxis._groupSeriesData(this);\r\n            yAxis._groupSeriesData(this);\r\n            this._dataGrouped = true;\r\n        }\r\n        if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n            if (minBulletDistance > 0 && baseAxis) {\r\n                if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                    this._showBullets = true;\r\n                }\r\n                else {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                this._selectionProcessed = true;\r\n                const vcx = this.get(\"vcx\", 1);\r\n                const vcy = this.get(\"vcy\", 1);\r\n                const stacked = this.get(\"stacked\", false);\r\n                const outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    yAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    xAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    if (this.get(\"valueYShow\") !== \"valueYWorking\" || this.get(\"useSelectionExtremes\")) {\r\n                        const selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                        if (selectionMinY != null) {\r\n                            this.setPrivateRaw(\"minY\", selectionMinY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                        if (selectionMaxY != null) {\r\n                            this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    if (this.get(\"valueXShow\") !== \"valueXWorking\" || this.get(\"useSelectionExtremes\")) {\r\n                        const selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                        if (selectionMinX != null) {\r\n                            this.setPrivateRaw(\"minX\", selectionMinX);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                        if (selectionMaxX != null) {\r\n                            this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                            xAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                // this.updateLegendValue(undefined); flickers while panning\r\n            }\r\n        }\r\n    }\r\n    _makeRangeMask() {\r\n        if (this.axisRanges.length > 0) {\r\n            let mainContainerMask = this._mainContainerMask;\r\n            if (mainContainerMask == null) {\r\n                mainContainerMask = this.children.push(Graphics.new(this._root, {}));\r\n                this._mainContainerMask = mainContainerMask;\r\n                mainContainerMask.set(\"draw\", (display, target) => {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        const w = this._root.container.width();\r\n                        const h = this._root.container.height();\r\n                        display.moveTo(-w, -h);\r\n                        display.lineTo(-w, h * 2);\r\n                        display.lineTo(w * 2, h * 2);\r\n                        display.lineTo(w * 2, -h);\r\n                        display.lineTo(-w, -h);\r\n                        this.axisRanges.each((axisRange) => {\r\n                            const fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                            if (parent) {\r\n                                if (fill) {\r\n                                    let draw = fill.get(\"draw\");\r\n                                    if (draw) {\r\n                                        draw(display, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.mainContainer._display.mask = mainContainerMask._display;\r\n                });\r\n            }\r\n            mainContainerMask.markDirty();\r\n            mainContainerMask._markDirtyKey(\"fill\");\r\n        }\r\n        else {\r\n            this.mainContainer._display.mask = null;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        // save for performance\r\n        this._x = this.x();\r\n        this._y = this.y();\r\n        this._makeRangeMask();\r\n    }\r\n    _stack() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const seriesIndex = chart.series.indexOf(this);\r\n            this._couldStackTo = [];\r\n            if (seriesIndex > 0) {\r\n                let series;\r\n                for (let i = seriesIndex - 1; i >= 0; i--) {\r\n                    series = chart.series.getIndex(i);\r\n                    if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                        this._couldStackTo.push(series);\r\n                        if (!series.get(\"stacked\")) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._stackDataItems();\r\n        }\r\n    }\r\n    _unstack() {\r\n        $object.each(this._reallyStackedTo, (_key, value) => {\r\n            delete (value._stackedSeries[this.uid]);\r\n        });\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            dataItem.setRaw(\"stackToItemY\", undefined);\r\n            dataItem.setRaw(\"stackToItemX\", undefined);\r\n        });\r\n    }\r\n    _handleRemoved() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        if (xAxis) {\r\n            xAxis._handleSeriesRemoved();\r\n        }\r\n        const yAxis = this.get(\"yAxis\");\r\n        if (yAxis) {\r\n            yAxis._handleSeriesRemoved();\r\n        }\r\n    }\r\n    _stackDataItems() {\r\n        // this works only with the same number of data @todo: search by date/category?\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        let field;\r\n        let stackToItemKey;\r\n        if (baseAxis === xAxis) {\r\n            field = \"valueY\";\r\n            stackToItemKey = \"stackToItemY\";\r\n        }\r\n        else if (baseAxis === yAxis) {\r\n            field = \"valueX\";\r\n            stackToItemKey = \"stackToItemX\";\r\n        }\r\n        let len = this._couldStackTo.length;\r\n        let index = 0;\r\n        const stackToNegative = this.get(\"stackToNegative\");\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            for (let s = 0; s < len; s++) {\r\n                let stackToSeries = this._couldStackTo[s];\r\n                let stackToItem = stackToSeries.dataItems[index];\r\n                let value = dataItem.get(field);\r\n                if (stackToItem) {\r\n                    let stackValue = stackToItem.get(field);\r\n                    if (stackToNegative) {\r\n                        if ($type.isNumber(value)) {\r\n                            if ($type.isNumber(stackValue)) {\r\n                                if (s == len - 1) {\r\n                                    dataItem.setRaw(stackToItemKey, undefined);\r\n                                }\r\n                                if (value >= 0 && stackValue >= 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                                if (value < 0 && stackValue < 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                            dataItem.setRaw(stackToItemKey, stackToItem);\r\n                            this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                            stackToSeries._stackedSeries[this.uid] = this;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        });\r\n    }\r\n    processXSelectionDataItem(dataItem, vcx, stacked) {\r\n        $array.each(this.__valueXShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedXValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinX\", value);\r\n                this._max(\"selectionMaxX\", value * vcx);\r\n            }\r\n        });\r\n    }\r\n    processYSelectionDataItem(dataItem, vcy, stacked) {\r\n        $array.each(this.__valueYShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedYValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinY\", value);\r\n                this._max(\"selectionMaxY\", value * vcy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        this.updateLegendMarker();\r\n    }\r\n    _markDirtyAxes() {\r\n        this._axesDirty = true;\r\n        this.markDirty();\r\n    }\r\n    _markDataSetDirty() {\r\n        this._afterDataChange();\r\n        this._valuesDirty = true;\r\n        this._dataProcessed = false;\r\n        this._aggregatesCalculated = false;\r\n        this.markDirty();\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._axesDirty = false;\r\n        this._selectionProcessed = false;\r\n        this._stackDirty = false;\r\n        this._dataProcessed = false;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            let dataItem = sprite.dataItem;\r\n            let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            let xAxis = this.get(\"xAxis\");\r\n            let yAxis = this.get(\"yAxis\");\r\n            let exactLocationX = this.get(\"exactLocationX\", false);\r\n            let exactLocationY = this.get(\"exactLocationY\", false);\r\n            let positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1), exactLocationX);\r\n            let positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1), exactLocationY);\r\n            let point = this.getPoint(positionX, positionY);\r\n            let left = dataItem.get(\"left\", point.x);\r\n            let right = dataItem.get(\"right\", point.x);\r\n            let top = dataItem.get(\"top\", point.y);\r\n            let bottom = dataItem.get(\"bottom\", point.y);\r\n            let x = 0;\r\n            let y = 0;\r\n            let w = right - left;\r\n            let h = bottom - top;\r\n            if (this._shouldShowBullet(positionX, positionY)) {\r\n                sprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\r\n                let field = bullet.get(\"field\");\r\n                const baseAxis = this.get(\"baseAxis\");\r\n                const xAxis = this.get(\"xAxis\");\r\n                const yAxis = this.get(\"yAxis\");\r\n                if (field != undefined) {\r\n                    let realField;\r\n                    if (baseAxis == xAxis) {\r\n                        if (field == \"value\") {\r\n                            realField = this._yField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._yOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._yHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._yLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionY = yAxis.getDataItemPositionY(dataItem, realField, 0, this.get(\"vcy\", 1), exactLocationY);\r\n                            point = yAxis.get(\"renderer\").positionToPoint(positionY);\r\n                            y = point.y;\r\n                            x = left + w * locationX;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (field == \"value\") {\r\n                            realField = this._xField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._xOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._xHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._xLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionX = xAxis.getDataItemPositionX(dataItem, realField, 0, this.get(\"vcx\", 1), exactLocationX);\r\n                            point = xAxis.get(\"renderer\").positionToPoint(positionX);\r\n                            x = point.x;\r\n                            y = bottom - h * locationY;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    x = left + w * locationX;\r\n                    y = bottom - h * locationY;\r\n                }\r\n                const stacked = bullet.get(\"stacked\");\r\n                if (stacked) {\r\n                    const chart = this.chart;\r\n                    if (baseAxis == xAxis) {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let yo = y;\r\n                            y = previousBounds.top;\r\n                            if (stacked == \"down\") {\r\n                                y = previousBounds.bottom - bounds.top;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (yo < chart.plotContainer.height() / 2) {\r\n                                        y = previousBounds.bottom - bounds.top;\r\n                                    }\r\n                                    else {\r\n                                        y += bounds.bottom;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                y += bounds.bottom;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                    else {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let xo = x;\r\n                            x = previousBounds.right;\r\n                            if (stacked == \"down\") {\r\n                                x = previousBounds.left - bounds.right;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (xo < chart.plotContainer.width() / 2) {\r\n                                        x = previousBounds.left - bounds.right;\r\n                                    }\r\n                                    else {\r\n                                        x -= bounds.left;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                x -= bounds.left;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                }\r\n                if (sprite.isType(\"Label\")) {\r\n                    sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                    sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                }\r\n                sprite.setAll({ x, y });\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _shouldShowBullet(_positionX, _positionY) {\r\n        return this._showBullets;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setDataSet(id) {\r\n        if (this._dataSets[id]) {\r\n            this._handleDataSetChange();\r\n            this._dataItems = this._dataSets[id];\r\n            this._markDataSetDirty();\r\n            this._dataSetId = id;\r\n            const type = \"datasetchanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this, id: id });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetGrouping() {\r\n        $object.each(this._dataSets, (_key, dataSet) => {\r\n            if (dataSet != this._mainDataItems) {\r\n                $array.each(dataSet, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n            }\r\n        });\r\n        this._dataSets = {};\r\n        this._dataItems = this.mainDataItems;\r\n    }\r\n    _handleDataSetChange() {\r\n        $array.each(this._dataItems, (dataItem) => {\r\n            let bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    if (bullet) {\r\n                        let sprite = bullet.get(\"sprite\");\r\n                        if (sprite) {\r\n                            sprite.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        this._selectionProcessed = false; // for totals to be calculated\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration).then(() => {\r\n                this._isShowing = false;\r\n                let xAxis = this.get(\"xAxis\");\r\n                let yAxis = this.get(\"yAxis\");\r\n                let baseAxis = this.get(\"baseAxis\");\r\n                if (yAxis !== baseAxis) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (xAxis !== baseAxis) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n            }));\r\n            promises.push(this.bulletsContainer.show(duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration).then(() => {\r\n                this._isHiding = false;\r\n            }));\r\n            promises.push(this.bulletsContainer.hide(duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            $array.each(this._valueFields, (key) => {\r\n                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const stacked = this.get(\"stacked\");\r\n            if (baseAxis === xAxis || !baseAxis) {\r\n                $array.each(this._valueYFields, (key) => {\r\n                    let min = yAxis.getPrivate(\"min\");\r\n                    let baseValue = yAxis.baseValue();\r\n                    if ($type.isNumber(min) && min > baseValue) {\r\n                        baseValue = min;\r\n                    }\r\n                    if (stacked) {\r\n                        baseValue = 0;\r\n                    }\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            if (baseAxis === yAxis || !baseAxis) {\r\n                let min = xAxis.getPrivate(\"min\");\r\n                let baseValue = xAxis.baseValue();\r\n                if ($type.isNumber(min) && min > baseValue) {\r\n                    baseValue = min;\r\n                }\r\n                if (stacked) {\r\n                    baseValue = 0;\r\n                }\r\n                $array.each(this._valueXFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _markDirtyStack() {\r\n        this._stackDirty = true;\r\n        this.markDirty();\r\n        this._markStakedDirtyStack();\r\n    }\r\n    _markStakedDirtyStack() {\r\n        const stackedSeries = this._stackedSeries;\r\n        if (stackedSeries) {\r\n            $object.each(stackedSeries, (_key, value) => {\r\n                if (!value._stackDirty) {\r\n                    value._markDirtyStack();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._skipped) {\r\n            this._markDirtyAxes();\r\n            this._skipped = false;\r\n        }\r\n    }\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    showDataItemTooltip(dataItem) {\r\n        if (!this.getPrivate(\"doNotUpdateLegend\")) {\r\n            this.updateLegendMarker(dataItem);\r\n            this.updateLegendValue(dataItem);\r\n        }\r\n        const tooltip = this.get(\"tooltip\");\r\n        const exactLocationX = this.get(\"exactLocationX\", false);\r\n        const exactLocationY = this.get(\"exactLocationY\", false);\r\n        if (tooltip) {\r\n            if (!this.isHidden() && this.get(\"visible\")) {\r\n                tooltip._setDataItem(dataItem);\r\n                if (dataItem) {\r\n                    let locationX = this.get(\"locationX\", 0);\r\n                    let locationY = this.get(\"locationY\", 1);\r\n                    let itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                    let itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                    const xAxis = this.get(\"xAxis\");\r\n                    const yAxis = this.get(\"yAxis\");\r\n                    const vcx = this.get(\"vcx\", 1);\r\n                    const vcy = this.get(\"vcy\", 1);\r\n                    const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx, exactLocationX);\r\n                    const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy, exactLocationY);\r\n                    const point = this.getPoint(xPos, yPos);\r\n                    let show = true;\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (dataItem.get(field) == null) {\r\n                            show = false;\r\n                        }\r\n                    });\r\n                    if (show) {\r\n                        const chart = this.chart;\r\n                        if (chart && chart.inPlot(point)) {\r\n                            tooltip.label.text.markDirtyText();\r\n                            tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                            tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.hideTooltip();\r\n            }\r\n        }\r\n    }\r\n    hideTooltip() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.set(\"tooltipTarget\", this);\r\n        }\r\n        return super.hideTooltip();\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets && bullets.length > 0) {\r\n                const bullet = bullets[0];\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const label = legendDataItem.get(\"label\");\r\n            if (label) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                }\r\n                else {\r\n                    label._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                }\r\n                label.set(\"text\", txt);\r\n            }\r\n            const valueLabel = legendDataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                else {\r\n                    valueLabel._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                valueLabel.set(\"text\", txt);\r\n            }\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        let text = \"X: {\" + this._xField;\r\n        if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}; Y: {\" + this._yField;\r\n        if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}\";\r\n        return text;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n        let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n        // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n        let max = 999999999;\r\n        if (y < -max) {\r\n            y = -max;\r\n        }\r\n        if (y > max) {\r\n            y = max;\r\n        }\r\n        if (x < -max) {\r\n            x = -max;\r\n        }\r\n        if (x > max) {\r\n            x = max;\r\n        }\r\n        return { x: x, y: y };\r\n    }\r\n    _shouldInclude(_position) {\r\n        return true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        this.hideTooltip();\r\n        this.updateLegendValue(undefined);\r\n        this.updateLegendMarker(undefined);\r\n    }\r\n    _afterDataChange() {\r\n        super._afterDataChange();\r\n        this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n        this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n        this.resetExtremes();\r\n    }\r\n    /**\r\n     * Resets cached axis scale values.\r\n     */\r\n    resetExtremes() {\r\n        this.setPrivate(\"selectionMinX\", undefined);\r\n        this.setPrivate(\"selectionMaxX\", undefined);\r\n        this.setPrivate(\"selectionMinY\", undefined);\r\n        this.setPrivate(\"selectionMaxY\", undefined);\r\n        this.setPrivate(\"minX\", undefined);\r\n        this.setPrivate(\"minY\", undefined);\r\n        this.setPrivate(\"maxX\", undefined);\r\n        this.setPrivate(\"maxY\", undefined);\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push({\r\n            axisDataItem: axisDataItem\r\n        });\r\n    }\r\n    /**\r\n     * A list of series's main (ungrouped) data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get mainDataItems() {\r\n        return this._mainDataItems;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (baseAxis == xAxis && xAxis.isType(\"DateAxis\")) {\r\n            const baseDuration = xAxis.baseDuration();\r\n            const minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\r\n            const dl = baseDuration * this.get(\"locationX\", 0.5);\r\n            let value = -Infinity;\r\n            while (value < minSelection) {\r\n                const dataItem = this.dataItems[index];\r\n                if (dataItem) {\r\n                    const open = dataItem.open;\r\n                    if (open) {\r\n                        value = open[\"valueX\"];\r\n                    }\r\n                    else {\r\n                        value = dataItem.get(\"valueX\", 0);\r\n                    }\r\n                    value += dl;\r\n                    if (value < minSelection) {\r\n                        index++;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n}\r\nObject.defineProperty(XYSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYSeries\"\r\n});\r\nObject.defineProperty(XYSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([XYSeries.className])\r\n});\r\n//# sourceMappingURL=XYSeries.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Array of minor data items.\r\n         */\r\n        Object.defineProperty(this, \"minorDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesAdded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\r\n        this.ghostLabel.events.disable();\r\n    }\r\n    _updateFinals(_start, _end) {\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        if (this.get(\"zoomable\", true)) {\r\n            this._updateFinals(start, end);\r\n            if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n                let sAnimation = this._sAnimation;\r\n                let eAnimation = this._eAnimation;\r\n                if (start > end) {\r\n                    [start, end] = [end, start];\r\n                }\r\n                let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n                if (start < -maxDeviation) {\r\n                    start = -maxDeviation;\r\n                }\r\n                if (end > 1 + maxDeviation) {\r\n                    end = 1 + maxDeviation;\r\n                }\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (!priority) {\r\n                    priority = \"end\";\r\n                }\r\n                let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n                let maxZoomFactorReal = maxZoomFactor;\r\n                if (end === 1 && start !== 0) {\r\n                    if (start < this.get(\"start\", 0)) {\r\n                        priority = \"start\";\r\n                    }\r\n                    else {\r\n                        priority = \"end\";\r\n                    }\r\n                }\r\n                if (start === 0 && end !== 1) {\r\n                    if (end > this.get(\"end\", 1)) {\r\n                        priority = \"end\";\r\n                    }\r\n                    else {\r\n                        priority = \"start\";\r\n                    }\r\n                }\r\n                let minZoomCount = this.get(\"minZoomCount\", 0);\r\n                let maxZoomCount = this.get(\"maxZoomCount\", Infinity);\r\n                if ($type.isNumber(minZoomCount)) {\r\n                    maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n                }\r\n                let minZoomFactor = 1;\r\n                if ($type.isNumber(maxZoomCount)) {\r\n                    minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n                }\r\n                // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n                if (priority === \"start\") {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            end = start + 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // add to the end\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                    //unless end is > 0\r\n                    if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                        //end = 1;\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                // most likely we are dragging right, so we modify left\r\n                else {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            start = end - 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // remove from start\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                    if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                        //start = 0;\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                    const chart = this.chart;\r\n                    if (chart) {\r\n                        chart._handleAxisSelection(this, true);\r\n                    }\r\n                }\r\n                if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                    return;\r\n                }\r\n                if (duration > 0) {\r\n                    let easing = this.get(\"interpolationEasing\");\r\n                    let sAnimation, eAnimation;\r\n                    if (this.get(\"start\") != start) {\r\n                        sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                    }\r\n                    if (this.get(\"end\") != end) {\r\n                        eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                    }\r\n                    this._sAnimation = sAnimation;\r\n                    this._eAnimation = eAnimation;\r\n                    if (sAnimation) {\r\n                        return sAnimation;\r\n                    }\r\n                    else if (eAnimation) {\r\n                        return eAnimation;\r\n                    }\r\n                }\r\n                else {\r\n                    this.set(\"start\", start);\r\n                    this.set(\"end\", end);\r\n                }\r\n            }\r\n            else {\r\n                if (this._sAnimation) {\r\n                    this._sAnimation.stop();\r\n                }\r\n                if (this._eAnimation) {\r\n                    this._eAnimation.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart._updateCursor();\r\n            }\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, true);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, false);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleFHDataItem(dataItem, forceHidden) {\r\n        const fh = \"forceHidden\";\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.set(fh, forceHidden);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.set(fh, forceHidden);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.set(fh, forceHidden);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.set(fh, forceHidden);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.set(fh, forceHidden);\r\n            }\r\n        }\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        const v = \"visible\";\r\n        if (label) {\r\n            label.setPrivate(v, visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(v, visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(v, visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(v, visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(v, visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags, minor) {\r\n        var _a, _b, _c;\r\n        const renderer = this.get(\"renderer\");\r\n        let m = \"minor\";\r\n        const label = dataItem.get(\"label\");\r\n        if (!label) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = label.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_a = label.parent) === null || _a === void 0 ? void 0 : _a.children.removeValue(label);\r\n                renderer.makeLabel(dataItem, tags);\r\n                label.dispose();\r\n                renderer.labels.removeValue(label);\r\n            }\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (!grid) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = grid.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_b = grid.parent) === null || _b === void 0 ? void 0 : _b.children.removeValue(grid);\r\n                renderer.makeGrid(dataItem, tags);\r\n                grid.dispose();\r\n                renderer.grid.removeValue(grid);\r\n            }\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (!tick) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        else {\r\n            let remove = false;\r\n            let themeTags = tick.get(\"themeTags\");\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_c = tick.parent) === null || _c === void 0 ? void 0 : _c.children.removeValue(tick);\r\n                renderer.makeTick(dataItem, tags);\r\n                tick.dispose();\r\n                renderer.ticks.removeValue(tick);\r\n            }\r\n        }\r\n        if (!minor && !dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n        this._seriesAdded = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        this.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = Math.ceil(bounds.right - bounds.left);\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = Math.ceil(bounds.right - bounds.left);\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                        series._settings.tooltipDataItem = dataItem;\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                        series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (this.get(\"snapTooltip\")) {\r\n                position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n            }\r\n            this.setPrivateRaw(\"tooltipPosition\", position);\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (!$type.isNaN(position)) {\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    _handleSeriesRemoved() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Converts relative position of the axis to a global position taking current\r\n     * zoom into account (opposite to what `toAxisPosition` does).\r\n     *\r\n     * @since 5.4.2\r\n     * @param position Position\r\n     * @return Global position\r\n     */\r\n    toGlobalPosition(position) {\r\n        return this.get(\"renderer\").toGlobalPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n//# sourceMappingURL=Axis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dseHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minRealLog\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        let someDirty = false;\r\n        if (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            someDirty = true;\r\n            this.ghostLabel.set(\"text\", \"\");\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\r\n            this._getMinMax();\r\n            this._dirtyExtremes = false;\r\n        }\r\n        this._handleSizeDirty();\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            const chart = this.chart;\r\n            let getMM = false;\r\n            // #1563\r\n            if (chart) {\r\n                const letter = this.get(\"renderer\").getPrivate(\"letter\");\r\n                if (letter == \"Y\") {\r\n                    chart.xAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n                else if (letter == \"X\") {\r\n                    chart.yAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (getMM) {\r\n                this._getSelectionMinMax();\r\n            }\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _handleSizeDirty() {\r\n        if (this._sizeDirty && !this._dseHandled) {\r\n            this._dirtySelectionExtremes = true;\r\n            this._dseHandled = true;\r\n            if (this.getPrivate(\"selectionMinFinal\") != this.getPrivate(\"selectionMin\") || this.getPrivate(\"selectionMaxFinal\") != this.getPrivate(\"selectionMax\")) {\r\n                this._dirtySelectionExtremes = false;\r\n            }\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._dseHandled = false;\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    let minRealLog = this._minRealLog;\r\n                    if (!$type.isNumber(minRealLog)) {\r\n                        minRealLog = 1;\r\n                    }\r\n                    minLog = Math.pow(10, Math.log(minRealLog) * Math.LOG10E);\r\n                    if (step < 1) {\r\n                        if ($type.isNumber(this._minRealLog)) {\r\n                            minLog = this._minRealLog;\r\n                        }\r\n                        else {\r\n                            minLog = Math.pow(10, -50);\r\n                        }\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\r\n                }\r\n            }\r\n            /// minor grid\r\n            const renderer = this.get(\"renderer\");\r\n            const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n            const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n            let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n            const stepAdjusted = Math.round(step / stepPower);\r\n            let minorGridCount = 2;\r\n            if ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\r\n                minorGridCount = 5;\r\n            }\r\n            if ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\r\n                minorGridCount = 10;\r\n            }\r\n            let minorStep = step / minorGridCount;\r\n            // end of minor grid\r\n            let i = 0;\r\n            let m = 0;\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                this._toggleDataItem(dataItem, true);\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                let nextValue = value;\r\n                if (!logarithmic) {\r\n                    nextValue += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        nextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\r\n                    }\r\n                    else {\r\n                        nextValue += step;\r\n                    }\r\n                }\r\n                // minor grid\r\n                if (minorGridEnabled) {\r\n                    let minorValue = value + minorStep;\r\n                    if (logarithmic) {\r\n                        if (differencePower > 2) {\r\n                            let minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\r\n                            minorStep = minorMinMaxStep.step;\r\n                        }\r\n                        minorValue = value + minorStep;\r\n                    }\r\n                    while (minorValue < nextValue - step * 0.00000000001) {\r\n                        let minorDataItem;\r\n                        if (this.minorDataItems.length < m + 1) {\r\n                            minorDataItem = new DataItem(this, undefined, {});\r\n                            this.minorDataItems.push(minorDataItem);\r\n                            this.processDataItem(minorDataItem);\r\n                        }\r\n                        else {\r\n                            minorDataItem = this.minorDataItems[m];\r\n                        }\r\n                        this._createAssets(minorDataItem, [\"minor\"], true);\r\n                        this._toggleDataItem(minorDataItem, true);\r\n                        minorDataItem.setRaw(\"value\", minorValue);\r\n                        const minorLabel = minorDataItem.get(\"label\");\r\n                        if (minorLabel) {\r\n                            if (minorLabelsEnabled) {\r\n                                minorLabel.set(\"text\", this._formatText(minorValue));\r\n                            }\r\n                            else {\r\n                                minorLabel.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                        this._prepareDataItem(minorDataItem);\r\n                        minorValue += minorStep;\r\n                        m++;\r\n                    }\r\n                }\r\n                value = nextValue;\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1 && !logarithmic) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                // #103520\r\n                if (logarithmic && differencePower <= 2) {\r\n                    if (value - step < step) {\r\n                        value = step;\r\n                    }\r\n                }\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this._toggleDataItem(this.dataItems[j], false);\r\n            }\r\n            for (let j = m; j < this.minorDataItems.length; j++) {\r\n                this._toggleDataItem(this.minorDataItems[j], false);\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        let labelEndPosition = endPosition;\r\n        let labelEndValue = dataItem.get(\"labelEndValue\");\r\n        if (labelEndValue != null) {\r\n            labelEndPosition = this.valueToPosition(labelEndValue);\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            let totalPercent = value / total * 100;\r\n                                            if (total == 0) {\r\n                                                totalPercent = 0;\r\n                                            }\r\n                                            dataItem.set((field + \"TotalPercent\"), totalPercent);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minX = series.getPrivate(\"minX\");\r\n                            let maxX = series.getPrivate(\"maxX\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minX = undefined;\r\n                                maxX = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", minX);\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", maxX);\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minY = series.getPrivate(\"minY\");\r\n                            let maxY = series.getPrivate(\"maxY\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minY = undefined;\r\n                                maxY = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", minY);\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", maxY);\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                let smin = selectionMin;\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                if (selectionMin < min) {\r\n                    let d = smin - min;\r\n                    if (d == 0) {\r\n                        d = this._deltaMinMax;\r\n                    }\r\n                    selectionMin = smin - d;\r\n                    selectionMax = smin + d;\r\n                    strictMinMax = true;\r\n                }\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            let delta = selectionMax - selectionMin;\r\n            selectionMin -= delta * extraMin;\r\n            selectionMax += delta * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                if (minMaxStep.min < min) {\r\n                    minMaxStep.min = min;\r\n                }\r\n                if (minMaxStep.max > max) {\r\n                    minMaxStep.max = max;\r\n                }\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = selectionMinReal;\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = selectionMaxReal;\r\n                }\r\n                if (selectionMax - selectionMin <= 0.00000001) {\r\n                    selectionMin -= this._deltaMinMax;\r\n                    selectionMax += this._deltaMinMax;\r\n                }\r\n                let delta = selectionMax - selectionMin;\r\n                selectionMin -= delta * extraMin;\r\n                selectionMax += delta * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (!this.get(\"strictMinMax\")) {\r\n                if (this.get(\"extraMin\") == null) {\r\n                    extraMin = 0.1;\r\n                }\r\n                if (this.get(\"extraMax\") == null) {\r\n                    extraMax = 0.2;\r\n                }\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            this.setPrivate(\"minFinal\", undefined);\r\n            this.setPrivate(\"maxFinal\", undefined);\r\n            return;\r\n        }\r\n        if (min > max) {\r\n            [min, max] = [max, min];\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        this._minRealLog = min;\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            let delta = max - min;\r\n            min -= delta * extraMin;\r\n            max += delta * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n                if (step == 0) {\r\n                    step = 1;\r\n                }\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.getPrivate(\"step\", 1) / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        let value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\r\n        value += this.getPrivate(\"step\", 1) * count;\r\n        value = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\r\n        return this.toGlobalPosition(this.valueToPosition(value));\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n//# sourceMappingURL=ValueAxis.js.map","import { Axis } from \"./Axis\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { populateString } from \"../../../core/util/PopulateString\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\r\nexport class CategoryAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_itemMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.fields.push(\"category\");\r\n        this.setPrivateRaw(\"name\", \"category\");\r\n        this.addTag(\"category\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const len = this.dataItems.length;\r\n        let i = 0;\r\n        if (this._valuesDirty) {\r\n            this._itemMap = {};\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                dataItem.setRaw(\"index\", i);\r\n                this._itemMap[dataItem.get(\"category\")] = dataItem;\r\n                i++;\r\n            });\r\n            this.setPrivateRaw(\"maxZoomFactor\", len);\r\n        }\r\n        this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\r\n        this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\r\n        if (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\r\n            if (this.dataItems.length > 0) {\r\n                this._handleRangeChange();\r\n                this._prepareAxisItems();\r\n                this._updateAxisRanges();\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        $array.each(this.series, (series) => {\r\n            let startCategory = this.dataItems[this.startIndex()].get(\"category\");\r\n            let endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\r\n            let baseAxis = series.get(\"baseAxis\");\r\n            let xAxis = series.get(\"xAxis\");\r\n            let yAxis = series.get(\"yAxis\");\r\n            if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\r\n                series._markDirtyAxes();\r\n            }\r\n            else if (baseAxis === this) {\r\n                let key;\r\n                let openKey;\r\n                let otherAxis = yAxis;\r\n                if (xAxis === baseAxis) {\r\n                    if (series.get(\"categoryXField\")) {\r\n                        key = \"categoryX\";\r\n                    }\r\n                    if (series.get(\"openCategoryXField\")) {\r\n                        openKey = \"openCategoryX\";\r\n                    }\r\n                }\r\n                else if (yAxis === baseAxis) {\r\n                    if (series.get(\"categoryYField\")) {\r\n                        key = \"categoryY\";\r\n                    }\r\n                    if (series.get(\"openCategoryYField\")) {\r\n                        openKey = \"openCategoryY\";\r\n                    }\r\n                    otherAxis = xAxis;\r\n                }\r\n                if (otherAxis instanceof ValueAxis) {\r\n                    if (key || openKey) {\r\n                        let startDataItem;\r\n                        let endDataItem;\r\n                        for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let i = series.dataItems.length - 1; i >= 0; i--) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        let startIndex = 0;\r\n                        let endIndex = series.dataItems.length;\r\n                        if (startDataItem) {\r\n                            startIndex = series.dataItems.indexOf(startDataItem);\r\n                        }\r\n                        if (endDataItem) {\r\n                            endIndex = series.dataItems.indexOf(endDataItem) + 1;\r\n                        }\r\n                        series.setPrivate(\"startIndex\", startIndex);\r\n                        series.setPrivate(\"endIndex\", endIndex);\r\n                        let hasValue = false;\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            const dataItem = series.dataItems[i];\r\n                            $array.each(series.__valueXShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            $array.each(series.__valueYShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            if (hasValue) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        series.setPrivate(\"outOfSelection\", !hasValue);\r\n                    }\r\n                }\r\n                series._markDirtyAxes(); // must be outside\r\n            }\r\n        });\r\n    }\r\n    _prepareAxisItems() {\r\n        var _a;\r\n        const renderer = this.get(\"renderer\");\r\n        const len = this.dataItems.length;\r\n        let startIndex = this.startIndex();\r\n        if (startIndex > 0) {\r\n            startIndex--;\r\n        }\r\n        let endIndex = this.endIndex();\r\n        if (endIndex < len) {\r\n            endIndex++;\r\n        }\r\n        const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n        const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n        let maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1);\r\n        let frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\r\n        startIndex = Math.floor(startIndex / frequency) * frequency;\r\n        this._frequency = frequency;\r\n        for (let j = 0; j < len; j++) {\r\n            this._toggleDataItem(this.dataItems[j], false);\r\n        }\r\n        let f = this.dataItems[startIndex].get(\"index\", 0);\r\n        for (let i = startIndex; i < endIndex; i = i + frequency) {\r\n            let dataItem = this.dataItems[i];\r\n            this._createAssets(dataItem, []);\r\n            this._toggleDataItem(dataItem, true);\r\n            let count = frequency;\r\n            if (minorGridEnabled) {\r\n                count = 1;\r\n            }\r\n            this._prepareDataItem(dataItem, f, count);\r\n            f++;\r\n        }\r\n        if (renderer.get(\"minorGridEnabled\")) {\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (i % frequency != 0) {\r\n                    this._createAssets(dataItem, [\"minor\"], true);\r\n                    this._toggleDataItem(dataItem, true);\r\n                    this._prepareDataItem(dataItem, 0, 1);\r\n                    if (!minorLabelsEnabled) {\r\n                        (_a = dataItem.get(\"label\")) === null || _a === void 0 ? void 0 : _a.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _prepareDataItem(dataItem, fillIndex, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let categoryLocation = dataItem.get(\"categoryLocation\", 0);\r\n        let endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\r\n        let index = dataItem.get(\"index\");\r\n        if (!$type.isNumber(index)) {\r\n            index = this.categoryToIndex(dataItem.get(\"category\"));\r\n        }\r\n        let position = this.indexToPosition(index, categoryLocation);\r\n        let endCategory = dataItem.get(\"endCategory\");\r\n        let endIndex;\r\n        if (endCategory) {\r\n            endIndex = this.categoryToIndex(endCategory);\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = index;\r\n            }\r\n        }\r\n        else {\r\n            endIndex = index;\r\n        }\r\n        let endPosition = this.indexToPosition(endIndex, endCategoryLocation);\r\n        let fillEndIndex;\r\n        let fillEndPosition;\r\n        if (dataItem.get(\"isRange\")) {\r\n            fillEndIndex = endIndex;\r\n        }\r\n        else {\r\n            fillEndIndex = index + this._frequency - 1;\r\n        }\r\n        fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        const fillRule = this.get(\"fillRule\");\r\n        if (fillRule) {\r\n            fillRule(dataItem, fillIndex);\r\n        }\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    baseValue() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    basePosition() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         X coordinate\r\n     */\r\n    getX(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns Y coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         Y coordinate\r\n     */\r\n    getY(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * Converts category index to a relative position.\r\n     *\r\n     * `location` indicates relative position within category: 0 - start, 1 - end.\r\n     *\r\n     * If not set, will use middle (0.5) of the category.\r\n     *\r\n     * @param   index     Index\r\n     * @param   location  Location\r\n     * @return            Index\r\n     */\r\n    indexToPosition(index, location) {\r\n        if (!$type.isNumber(location)) {\r\n            location = 0.5;\r\n        }\r\n        let len = this.dataItems.length;\r\n        let startLocation = this.get(\"startLocation\", 0);\r\n        let endLocation = this.get(\"endLocation\", 1);\r\n        len -= startLocation;\r\n        len -= (1 - endLocation);\r\n        let position = (index + location - startLocation) / len;\r\n        let dataItem = this.dataItems[index];\r\n        if (dataItem) {\r\n            position += dataItem.get(\"deltaPosition\", 0);\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * Returns a position of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Position\r\n     */\r\n    categoryToPosition(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return this.indexToPosition(dataItem.get(\"index\"));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns an index of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Index\r\n     */\r\n    categoryToIndex(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return dataItem.get(\"index\");\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dataItemToPosition(dataItem) {\r\n        return this.indexToPosition(dataItem.get(\"index\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        position += (0.5 - location) / this.dataItems.length;\r\n        return this.indexToPosition(this.axisPositionToIndex(position), location);\r\n    }\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    axisPositionToIndex(position) {\r\n        let len = this.dataItems.length;\r\n        return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        //@todo number formatter + tag\r\n        const dataItem = this.dataItems[this.axisPositionToIndex(position)];\r\n        if (dataItem) {\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                return populateString(label, this.get(\"tooltipText\", \"\"));\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\r\n        tooltip.label.text.markDirtyText();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        if (this.dataItems.length > 0) {\r\n            let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n            let index = this.axisPositionToIndex(position);\r\n            // try simple first\r\n            let seriesDataItem = series.dataItems[index];\r\n            let axisDataItem = this.dataItems[index];\r\n            let category = axisDataItem.get(\"category\");\r\n            if (seriesDataItem && axisDataItem) {\r\n                if (seriesDataItem.get(fieldName) === category) {\r\n                    return seriesDataItem;\r\n                }\r\n            }\r\n            // if not found, try looking\r\n            for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                let dataItem = series.dataItems[i];\r\n                if (dataItem.get(fieldName) === category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` indexes.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start index\r\n     * @param  end       End index\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToIndexes(start, end, duration) {\r\n        let len = this.dataItems.length;\r\n        this.zoom(start / len, end / len, duration);\r\n    }\r\n    zoomToCategories(startCategory, endCategory, duration) {\r\n        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\r\n    }\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        const position = this.getPrivate(\"tooltipPosition\", 0);\r\n        const index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\r\n        return this.toGlobalPosition(this.indexToPosition(index));\r\n    }\r\n}\r\nObject.defineProperty(CategoryAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CategoryAxis\"\r\n});\r\nObject.defineProperty(CategoryAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([CategoryAxis.className])\r\n});\r\n//# sourceMappingURL=CategoryAxis.js.map","import { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabel\"\r\n});\r\nObject.defineProperty(AxisLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([AxisLabel.className])\r\n});\r\n//# sourceMappingURL=AxisLabel.js.map","import { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nexport class AxisTick extends Tick {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisTick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisTick\"\r\n});\r\nObject.defineProperty(AxisTick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Tick.classNames.concat([AxisTick.className])\r\n});\r\n//# sourceMappingURL=AxisTick.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nexport class AxisRenderer extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        // save for quick access\r\n        Object.defineProperty(this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.ticks.template])))\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Grid._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.grid.template])))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template])))\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template])))\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\r\n         */\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem, themeTags) {\r\n        const tick = this.ticks.make();\r\n        tick._setDataItem(dataItem);\r\n        dataItem.setRaw(\"tick\", tick);\r\n        tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.push(tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeGrid(dataItem, themeTags) {\r\n        const grid = this.grid.make();\r\n        grid._setDataItem(dataItem);\r\n        dataItem.setRaw(\"grid\", grid);\r\n        grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(grid);\r\n        this.grid.push(grid);\r\n        return grid;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeAxisFill(dataItem, themeTags) {\r\n        const axisFill = this.axisFills.make();\r\n        axisFill._setDataItem(dataItem);\r\n        axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(axisFill);\r\n        dataItem.setRaw(\"axisFill\", axisFill);\r\n        this.axisFills.push(axisFill);\r\n        return axisFill;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem, themeTags) {\r\n        const label = this.labels.make();\r\n        label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.moveValue(label, 0);\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    axisLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    gridCount() {\r\n        return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n    }\r\n    _updatePositions() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"isMeasured\", false);\r\n        const thumb = this.thumb;\r\n        if (thumb) {\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\r\n                this._handleThumbDown(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\r\n                this._handleThumbUp(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\r\n                this._handleThumbMove(event);\r\n            }));\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"minGridDistance\")) {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.axis.markDirtySize();\r\n            });\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pan\")) {\r\n            const thumb = this.thumb;\r\n            if (thumb) {\r\n                const labelsContainer = this.axis.labelsContainer;\r\n                const pan = this.get(\"pan\");\r\n                if (pan == \"zoom\") {\r\n                    labelsContainer.children.push(thumb);\r\n                }\r\n                else if (pan == \"none\") {\r\n                    labelsContainer.children.removeValue(thumb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThumbDown(event) {\r\n        this._thumbDownPoint = this.toLocal(event.point);\r\n        const axis = this.axis;\r\n        this._downStart = axis.get(\"start\");\r\n        this._downEnd = axis.get(\"end\");\r\n    }\r\n    _handleThumbUp(_event) {\r\n        this._thumbDownPoint = undefined;\r\n    }\r\n    _handleThumbMove(event) {\r\n        const downPoint = this._thumbDownPoint;\r\n        if (downPoint) {\r\n            const point = this.toLocal(event.point);\r\n            const downStart = this._downStart;\r\n            const downEnd = this._downEnd;\r\n            const extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\r\n            this.axis.zoom(downStart - extra, downEnd + extra, 0);\r\n        }\r\n    }\r\n    _getPan(_point1, _point2) {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) { }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position = position * (end - start);\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start);\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n    }\r\n    toggleVisibility(sprite, position, minPosition, maxPosition) {\r\n        let axis = this.axis;\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n        let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n        if (position < updatedStart || position > updatedEnd) {\r\n            sprite.setPrivate(\"visible\", false);\r\n        }\r\n        else {\r\n            sprite.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    _positionTooltip(tooltip, point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n            if (!chart.inPlot(point)) {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    }\r\n    processAxis() { }\r\n}\r\nObject.defineProperty(AxisRenderer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRenderer\"\r\n});\r\nObject.defineProperty(AxisRenderer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([AxisRenderer.className])\r\n});\r\n//# sourceMappingURL=AxisRenderer.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"x\", -1000);\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0);\r\n        axis.gridContainer.set(\"x\", x);\r\n        axis.topGridContainer.set(\"x\", x);\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"width\") == null) {\r\n            axis.set(\"width\", p100);\r\n        }\r\n        ;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"y\", -1000);\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        const w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\r\n        axis.gridContainer.set(\"y\", y);\r\n        axis.topGridContainer.set(\"y\", y);\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","import { XYSeries } from \"./XYSeries\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { line, area } from \"d3-shape\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\r\nexport class LineSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_endIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: line()\r\n        });\r\n        Object.defineProperty(this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: area()\r\n        });\r\n        Object.defineProperty(this, \"_legendStroke\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_legendFill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all line segments in series.\r\n         *\r\n         * `strokes.template` can be used to set default settings for all line\r\n         * segments, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"strokes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\r\n            }, [this.strokes.template])))\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all segment fills in series.\r\n         *\r\n         * `fills.template` can be used to set default settings for all segment\r\n         * fills, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"fills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\r\n            }, [this.fills.template])))\r\n        });\r\n        // custom set from data\r\n        Object.defineProperty(this, \"_fillTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_previousPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [0, 0, 0, 0]\r\n        });\r\n        Object.defineProperty(this, \"_dindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_sindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._fillGenerator.y0(function (p) {\r\n            return p[3];\r\n        });\r\n        this._fillGenerator.x0(function (p) {\r\n            return p[2];\r\n        });\r\n        this._fillGenerator.y1(function (p) {\r\n            return p[1];\r\n        });\r\n        this._fillGenerator.x1(function (p) {\r\n            return p[0];\r\n        });\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeStroke(strokes) {\r\n        const stroke = this.mainContainer.children.push(strokes.make());\r\n        strokes.push(stroke);\r\n        return stroke;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeFill(fills) {\r\n        const fill = this.mainContainer.children.push(fills.make());\r\n        fills.push(fill);\r\n        return fill;\r\n    }\r\n    _updateChildren() {\r\n        this._strokeTemplate = undefined;\r\n        this._fillTemplate = undefined;\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        if (this.isDirty(\"stroke\")) {\r\n            const stroke = this.get(\"stroke\");\r\n            this.strokes.template.set(\"stroke\", stroke);\r\n            const legendStroke = this._legendStroke;\r\n            if (legendStroke) {\r\n                legendStroke.states.lookup(\"default\").set(\"stroke\", stroke);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            const fill = this.get(\"fill\");\r\n            this.fills.template.set(\"fill\", fill);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fill\", fill);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillPattern\")) {\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            this.fills.template.set(\"fillPattern\", fillPattern);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fillPattern\", fillPattern);\r\n            }\r\n        }\r\n        if (this.isDirty(\"curveFactory\")) {\r\n            const curveFactory = this.get(\"curveFactory\");\r\n            if (curveFactory) {\r\n                this._strokeGenerator.curve(curveFactory);\r\n                this._fillGenerator.curve(curveFactory);\r\n            }\r\n        }\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\r\n                this.fills.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.strokes.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.axisRanges.each((axisRange) => {\r\n                    let fills = axisRange.fills;\r\n                    if (fills) {\r\n                        fills.each((fill) => {\r\n                            fill.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                    let strokes = axisRange.strokes;\r\n                    if (strokes) {\r\n                        strokes.each((stroke) => {\r\n                            stroke.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                });\r\n                let startIndex = this.startIndex();\r\n                let strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n                let fillTemplateField = this.fills.template.get(\"templateField\");\r\n                let strokeTemplateFound = true;\r\n                let fillTemplateFound = true;\r\n                if (strokeTemplateField) {\r\n                    strokeTemplateFound = false;\r\n                }\r\n                if (fillTemplateField) {\r\n                    fillTemplateFound = false;\r\n                }\r\n                for (let i = startIndex - 1; i >= 0; i--) {\r\n                    let dataItem = this.dataItems[i];\r\n                    let hasValues = true;\r\n                    let dataContext = dataItem.dataContext;\r\n                    if (strokeTemplateField) {\r\n                        if (dataContext[strokeTemplateField]) {\r\n                            strokeTemplateFound = true;\r\n                        }\r\n                    }\r\n                    if (fillTemplateField) {\r\n                        if (dataContext[fillTemplateField]) {\r\n                            fillTemplateFound = true;\r\n                        }\r\n                    }\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (!$type.isNumber(dataItem.get(field))) {\r\n                            hasValues = false;\r\n                        }\r\n                    });\r\n                    if (hasValues && strokeTemplateFound && fillTemplateFound) {\r\n                        startIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                let len = this.dataItems.length;\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < len) {\r\n                    endIndex++;\r\n                    for (let i = endIndex; i < len; i++) {\r\n                        let dataItem = this.dataItems[i];\r\n                        let hasValues = true;\r\n                        $array.each(this._valueFields, (field) => {\r\n                            if (!$type.isNumber(dataItem.get(field))) {\r\n                                hasValues = false;\r\n                            }\r\n                        });\r\n                        if (hasValues) {\r\n                            endIndex = i + 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                this._endIndex = endIndex;\r\n                this._clearGraphics();\r\n                this._sindex = 0;\r\n                this._dindex = startIndex;\r\n                if (this.dataItems.length == 1) {\r\n                    this._startSegment(0);\r\n                }\r\n                else {\r\n                    // this is done to avoid recursion with a lot of segments\r\n                    while (this._dindex < endIndex - 1) {\r\n                        this._startSegment(this._dindex);\r\n                        this._sindex++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _clearGraphics() {\r\n        this.strokes.clear();\r\n        this.fills.clear();\r\n        this.axisRanges.each((axisRange) => {\r\n            axisRange.fills.clear();\r\n            axisRange.strokes.clear();\r\n        });\r\n    }\r\n    _startSegment(dataItemIndex) {\r\n        let endIndex = this._endIndex;\r\n        let currentEndIndex = endIndex;\r\n        const autoGapCount = this.get(\"autoGapCount\");\r\n        const connect = this.get(\"connect\");\r\n        const fill = this.makeFill(this.fills);\r\n        const fillTemplate = this._fillTemplate;\r\n        const originalTemplate = this.fills.template;\r\n        if (fillTemplate && fillTemplate != originalTemplate) {\r\n            fill.template = fillTemplate;\r\n        }\r\n        fill.setPrivate(\"visible\", true);\r\n        const stroke = this.makeStroke(this.strokes);\r\n        const strokeTemplate = this._strokeTemplate;\r\n        if (strokeTemplate && strokeTemplate != this.strokes.template) {\r\n            stroke.template = strokeTemplate;\r\n        }\r\n        stroke.setPrivate(\"visible\", true);\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        let baseAxis = this.get(\"baseAxis\");\r\n        let vcx = this.get(\"vcx\", 1);\r\n        let vcy = this.get(\"vcy\", 1);\r\n        let xField = this._xField;\r\n        let yField = this._yField;\r\n        let xOpenField = this._xOpenField;\r\n        let yOpenField = this._yOpenField;\r\n        const xOpenFieldValue = this.get(\"openValueXField\");\r\n        const yOpenFieldValue = this.get(\"openValueYField\");\r\n        if (!xOpenFieldValue) {\r\n            xOpenField = this._xField;\r\n        }\r\n        if (!yOpenFieldValue) {\r\n            yOpenField = this._yField;\r\n        }\r\n        const stacked = this.get(\"stacked\");\r\n        const basePosX = xAxis.basePosition();\r\n        const basePosY = yAxis.basePosition();\r\n        let baseField;\r\n        if (baseAxis === yAxis) {\r\n            baseField = this._yField;\r\n        }\r\n        else {\r\n            baseField = this._xField;\r\n        }\r\n        const segments = [];\r\n        let points = [];\r\n        segments.push(points);\r\n        const strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n        const fillTemplateField = this.fills.template.get(\"templateField\");\r\n        let locationX = this.get(\"locationX\", 0.5);\r\n        let locationY = this.get(\"locationY\", 0.5);\r\n        let openLocationX = this.get(\"openLocationX\", locationX);\r\n        let openLocationY = this.get(\"openLocationY\", locationY);\r\n        const minDistance = this.get(\"minDistance\", 0);\r\n        let i;\r\n        let fillVisible = this.fills.template.get(\"visible\");\r\n        if (this.axisRanges.length > 0) {\r\n            fillVisible = true;\r\n        }\r\n        let getOpen = false;\r\n        if (stacked || xOpenFieldValue || yOpenFieldValue) {\r\n            getOpen = true;\r\n        }\r\n        const o = {\r\n            points, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\r\n        };\r\n        let rangeStrokeTemplate = this._strokeTemplate;\r\n        let rangeFillTemplate = this._fillTemplate;\r\n        for (i = dataItemIndex; i < currentEndIndex; i++) {\r\n            this._dindex = i;\r\n            const dataItem = this._dataItems[i];\r\n            let valueX = dataItem.get(xField);\r\n            let valueY = dataItem.get(yField);\r\n            if (valueX == null || valueY == null) {\r\n                if (!connect) {\r\n                    points = [];\r\n                    segments.push(points);\r\n                    o.points = points;\r\n                }\r\n            }\r\n            else {\r\n                this._getPoints(dataItem, o);\r\n            }\r\n            if (strokeTemplateField) {\r\n                let strokeTemplate = dataItem.dataContext[strokeTemplateField];\r\n                if (strokeTemplate) {\r\n                    if (!(strokeTemplate instanceof Template)) {\r\n                        strokeTemplate = Template.new(strokeTemplate);\r\n                    }\r\n                    this._strokeTemplate = strokeTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        rangeStrokeTemplate = strokeTemplate;\r\n                        stroke.template = strokeTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (fillTemplateField) {\r\n                let fillTemplate = dataItem.dataContext[fillTemplateField];\r\n                if (fillTemplate) {\r\n                    if (!(fillTemplate instanceof Template)) {\r\n                        fillTemplate = Template.new(fillTemplate);\r\n                    }\r\n                    this._fillTemplate = fillTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        rangeFillTemplate = fillTemplate;\r\n                        fill.template = fillTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (!connect) {\r\n                let nextItem = this.dataItems[i + 1];\r\n                if (nextItem) {\r\n                    if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\r\n                        points = [];\r\n                        segments.push(points);\r\n                        o.points = points;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n        stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        if (i === endIndex) {\r\n            this._endLine(points, segments[0][0]);\r\n        }\r\n        if (stroke) {\r\n            this._drawStroke(stroke, segments);\r\n        }\r\n        if (fill) {\r\n            this._drawFill(fill, segments);\r\n        }\r\n        this.axisRanges.each((axisRange) => {\r\n            const container = axisRange.container;\r\n            const fills = axisRange.fills;\r\n            const fill = this.makeFill(fills);\r\n            if (container) {\r\n                container.children.push(fill);\r\n            }\r\n            fill.setPrivate(\"visible\", true);\r\n            this._drawFill(fill, segments);\r\n            const strokes = axisRange.strokes;\r\n            const stroke = this.makeStroke(strokes);\r\n            if (container) {\r\n                container.children.push(stroke);\r\n            }\r\n            if (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\r\n                stroke.template = rangeStrokeTemplate;\r\n            }\r\n            if (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\r\n                fill.template = rangeFillTemplate;\r\n            }\r\n            stroke.setPrivate(\"visible\", true);\r\n            this._drawStroke(stroke, segments);\r\n            fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n            stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        });\r\n    }\r\n    _getPoints(dataItem, o) {\r\n        let points = o.points;\r\n        let itemLocationX = dataItem.get(\"locationX\", o.locationX);\r\n        let itemLocationY = dataItem.get(\"locationY\", o.locationY);\r\n        const exactLocationX = this.get(\"exactLocationX\", false);\r\n        const exactLocationY = this.get(\"exactLocationY\", false);\r\n        let xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx, exactLocationX);\r\n        let yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy, exactLocationY);\r\n        if (this._shouldInclude(xPos)) {\r\n            const iPoint = this.getPoint(xPos, yPos);\r\n            const point = [iPoint.x, iPoint.y];\r\n            iPoint.x += this._x;\r\n            iPoint.y += this._y;\r\n            dataItem.set(\"point\", iPoint);\r\n            if (o.fillVisible) {\r\n                let xPos0 = xPos;\r\n                let yPos0 = yPos;\r\n                if (o.baseAxis === o.xAxis) {\r\n                    yPos0 = o.basePosY;\r\n                }\r\n                else if (o.baseAxis === o.yAxis) {\r\n                    xPos0 = o.basePosX;\r\n                }\r\n                if (o.getOpen) {\r\n                    let valueX = dataItem.get(o.xOpenField);\r\n                    let valueY = dataItem.get(o.yOpenField);\r\n                    if (valueX != null && valueY != null) {\r\n                        let itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\r\n                        let itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\r\n                        if (o.stacked) {\r\n                            let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                            let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                            if (stackToItemX) {\r\n                                xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, stackToItemX.component.get(\"vcx\"), exactLocationX);\r\n                                if ($type.isNaN(xPos0)) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.yAxis === o.baseAxis) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                                else {\r\n                                    xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\r\n                                }\r\n                            }\r\n                            if (stackToItemY) {\r\n                                yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, stackToItemY.component.get(\"vcy\"), exactLocationY);\r\n                                if ($type.isNaN(yPos0)) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.xAxis === o.baseAxis) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                                else {\r\n                                    yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\r\n                            yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\r\n                        }\r\n                    }\r\n                }\r\n                let closeIPoint = this.getPoint(xPos0, yPos0);\r\n                point[2] = closeIPoint.x;\r\n                point[3] = closeIPoint.y;\r\n            }\r\n            if (o.minDistance > 0) {\r\n                const p0 = point[0];\r\n                const p1 = point[1];\r\n                const p2 = point[2];\r\n                const p3 = point[3];\r\n                const prev = this._previousPoint;\r\n                const pp0 = prev[0];\r\n                const pp1 = prev[1];\r\n                const pp2 = prev[2];\r\n                const pp3 = prev[3];\r\n                if (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\r\n                    points.push(point);\r\n                    this._previousPoint = point;\r\n                }\r\n            }\r\n            else {\r\n                points.push(point);\r\n            }\r\n        }\r\n    }\r\n    _endLine(_points, _firstPoint) {\r\n    }\r\n    _drawStroke(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._strokeGenerator.context(display);\r\n                    this._strokeGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _drawFill(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._fillGenerator.context(display);\r\n                    this._fillGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.fills = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\r\n        }, [this.fills.template, axisRange.fills.template]));\r\n        axisRange.strokes = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\r\n        }, [this.strokes.template, axisRange.strokes.template]));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const marker = legendDataItem.get(\"marker\");\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                markerRectangle.setPrivate(\"visible\", false);\r\n            }\r\n            marker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }));\r\n            const legendStroke = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\r\n            }, [this.strokes.template]));\r\n            this._legendStroke = legendStroke;\r\n            const legendFill = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\r\n            }, [this.fills.template]));\r\n            this._legendFill = legendFill;\r\n            const disabledColor = this._root.interfaceColors.get(\"disabled\");\r\n            legendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            legendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            if (this.bullets.length > 0) {\r\n                const bulletFunction = this.bullets.getIndex(0);\r\n                if (bulletFunction) {\r\n                    const bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\r\n                    if (bullet) {\r\n                        const sprite = bullet.get(\"sprite\");\r\n                        if (sprite instanceof Graphics) {\r\n                            sprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                        }\r\n                        if (sprite) {\r\n                            sprite.setAll({\r\n                                tooltipText: undefined,\r\n                                tooltipHTML: undefined,\r\n                                focusable: undefined,\r\n                                focusableGroup: undefined,\r\n                                ariaLabel: undefined\r\n                            });\r\n                            marker.children.push(sprite);\r\n                            sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            marker.events.on(\"boundschanged\", () => {\r\n                                sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(LineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LineSeries\"\r\n});\r\nObject.defineProperty(LineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([LineSeries.className])\r\n});\r\n//# sourceMappingURL=LineSeries.js.map","/**\r\n * @ignore\r\n */\r\nexport class MonotoneXTension {\r\n    constructor(context, tension) {\r\n        Object.defineProperty(this, \"_line\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_t0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tension\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this._context = context;\r\n        this._tension = tension;\r\n    }\r\n    areaStart() {\r\n        this._line = 0;\r\n    }\r\n    areaEnd() {\r\n        this._line = NaN;\r\n    }\r\n    lineStart() {\r\n        this._x0 = this._x1 =\r\n            this._y0 = this._y1 =\r\n                this._t0 = NaN;\r\n        this._point = 0;\r\n    }\r\n    lineEnd() {\r\n        switch (this._point) {\r\n            case 2:\r\n                this._context.lineTo(this._x1, this._y1);\r\n                break;\r\n            case 3:\r\n                point(this, this._t0, slope2(this, this._t0));\r\n                break;\r\n        }\r\n        if (this._line || (this._line !== 0 && this._point === 1))\r\n            this._context.closePath();\r\n        this._line = 1 - this._line;\r\n    }\r\n    point(x, y) {\r\n        let t1 = NaN;\r\n        x = +x, y = +y;\r\n        if (x === this._x1 && y === this._y1)\r\n            return; // Ignore coincident points.\r\n        switch (this._point) {\r\n            case 0:\r\n                this._point = 1;\r\n                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\r\n                break;\r\n            case 1:\r\n                this._point = 2;\r\n                break;\r\n            case 2:\r\n                this._point = 3;\r\n                point(this, slope2(this, t1 = slope3(this, x, y)), t1);\r\n                break;\r\n            default:\r\n                point(this, this._t0, t1 = slope3(this, x, y));\r\n                break;\r\n        }\r\n        this._x0 = this._x1, this._x1 = x;\r\n        this._y0 = this._y1, this._y1 = y;\r\n        this._t0 = t1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function curveMonotoneXTension(tension) {\r\n    function monotoneXTension(context) {\r\n        return new MonotoneXTension(context, tension);\r\n    }\r\n    return monotoneXTension;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction sign(x) {\r\n    return x < 0 ? -1 : 1;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope3(that, x2, y2) {\r\n    let h0 = (that._x1 - that._x0);\r\n    let h1 = (x2 - that._x1);\r\n    let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\r\n    let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\r\n    let p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope2(that, t) {\r\n    let h = that._x1 - that._x0;\r\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction point(that, t0, t1) {\r\n    let x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 1.5 * (1 - that._tension);\r\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\r\n}\r\n//# sourceMappingURL=MonotoneXTension.js.map","import { LineSeries } from \"./LineSeries\";\r\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\r\n/**\r\n * Smoothed line series suitable for horizontal plots.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\r\n */\r\nexport class SmoothedXLineSeries extends LineSeries {\r\n    _afterNew() {\r\n        this._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n        super._afterNew();\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"tension\")) {\r\n            this.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n            this._valuesDirty = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n}\r\nObject.defineProperty(SmoothedXLineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SmoothedXLineSeries\"\r\n});\r\nObject.defineProperty(SmoothedXLineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: LineSeries.classNames.concat([SmoothedXLineSeries.className])\r\n});\r\n//# sourceMappingURL=SmoothedXLineSeries.js.map","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\r\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class PercentDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/percent\r\n         * ========================================================================\r\n         */\r\n        r(\"PercentSeries\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{valuePercentTotal.formatNumber('0.00p')}\",\r\n            colors: ColorSet.new(this._root, {}),\r\n            width: p100,\r\n            height: p100\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/pie\r\n         * ========================================================================\r\n         */\r\n        r(\"PieChart\").setAll({\r\n            radius: percent(80),\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").setAll({\r\n            alignLabels: true,\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").states.create(\"hidden\", { endAngle: -90, opacity: 0 });\r\n        r(\"Slice\", [\"pie\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            x: 0,\r\n            y: 0,\r\n            toggleKey: \"active\",\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            role: \"figure\",\r\n            lineJoin: \"round\"\r\n        });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"active\", { shiftRadius: 20, scale: 1 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hoverActive\", { scale: 1.04 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hover\", { scale: 1.04 });\r\n        r(\"RadialLabel\", [\"pie\"]).setAll({\r\n            textType: \"aligned\",\r\n            radius: 10,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            populateText: true\r\n        });\r\n        r(\"Tick\", [\"pie\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/funnel\r\n         * ========================================================================\r\n         */\r\n        r(\"SlicedChart\").setAll({\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Funnel\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"FunnelSeries\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            orientation: \"vertical\",\r\n            alignLabels: true,\r\n            sequencedInterpolation: true\r\n        });\r\n        r(\"FunnelSlice\").setAll({\r\n            interactive: true,\r\n            expandDistance: 0,\r\n            //tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"FunnelSlice\").states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"funnel\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"funnel\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        // Class: Label\r\n        r(\"Label\", [\"funnel\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"funnel\"]).setAll({\r\n            location: 1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            strokeOpacity: 0,\r\n            expandDistance: -0.1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"vertical\"]).setAll({\r\n            height: 10,\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"horizontal\"]).setAll({\r\n            width: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pyramid\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"PyramidSeries\").setAll({\r\n            valueIs: \"area\"\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\"]).setAll({\r\n            fillOpacity: 0.5\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"vertical\"]).setAll({\r\n            height: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"horizontal\"]).setAll({\r\n            width: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).setAll({\r\n            interactive: true,\r\n            expandDistance: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"pyramid\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"pyramid\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pictorial\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: FunnelSlice\r\n        r(\"FunnelSlice\", [\"pictorial\"]).setAll({\r\n            interactive: true,\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"Label\", [\"pictorial\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pictorial\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        r(\"Tick\", [\"pictorial\"]).setAll({\r\n            location: 0.5\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"pictorial\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.2\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=PercentDefaultTheme.js.map","import { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { PercentDefaultTheme } from \"./PercentDefaultTheme\";\r\n/**\r\n * Base class for [[PieChart]].\r\n *\r\n * Also used for percent-based series, like [[FunnelSeries]], [[PyramidSeries]], etc.\r\n *\r\n * @important\r\n */\r\nexport class PercentChart extends SerialChart {\r\n    _afterNew() {\r\n        this._defaultThemes.push(PercentDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this.chartContainer.children.push(this.seriesContainer);\r\n        this.seriesContainer.children.push(this.bulletsContainer);\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        this.seriesContainer.children.moveValue(this.bulletsContainer, this.seriesContainer.children.length - 1);\r\n    }\r\n}\r\nObject.defineProperty(PercentChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentChart\"\r\n});\r\nObject.defineProperty(PercentChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([PercentChart.className])\r\n});\r\n//# sourceMappingURL=PercentChart.js.map","import { __awaiter } from \"tslib\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { visualSettings } from \"../../core/render/Graphics\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A base class for any percent chart series.\r\n */\r\nexport class PercentSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"slicesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"ticksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_lLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_rLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_hLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slices in series.\r\n         *\r\n         * `slices.template` can also be used to configure slices.\r\n         */\r\n        Object.defineProperty(this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeSlices())\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure slice labels.\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeLabels())\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice ticks in series.\r\n         *\r\n         * `ticks.template` can also be used to configure slice ticks.\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeTicks())\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeSlice(dataItem) {\r\n        const slice = this.slicesContainer.children.push(this.slices.make());\r\n        slice.on(\"fill\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"fillPattern\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"stroke\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice._setDataItem(dataItem);\r\n        dataItem.set(\"slice\", slice);\r\n        this.slices.push(slice);\r\n        return slice;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem) {\r\n        const label = this.labelsContainer.children.push(this.labels.make());\r\n        label._setDataItem(dataItem);\r\n        dataItem.set(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        if (dataItem.get(\"value\") != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem) {\r\n        const tick = this.ticksContainer.children.push(this.ticks.make());\r\n        tick._setDataItem(dataItem);\r\n        dataItem.set(\"tick\", tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"category\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    _onDataClear() {\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n        const patterns = this.get(\"patterns\");\r\n        if (patterns) {\r\n            patterns.reset();\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._lLabels = [];\r\n        this._rLabels = [];\r\n        this._hLabels = [];\r\n        if (this._valuesDirty) {\r\n            let sum = 0;\r\n            let absSum = 0;\r\n            let valueHigh = 0;\r\n            let valueLow = Infinity;\r\n            let count = 0;\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let valueWorking = dataItem.get(\"valueWorking\", 0);\r\n                sum += valueWorking;\r\n                absSum += Math.abs(valueWorking);\r\n            });\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let value = dataItem.get(\"valueWorking\", 0);\r\n                if (value > valueHigh) {\r\n                    valueHigh = value;\r\n                }\r\n                if (value < valueLow) {\r\n                    valueLow = value;\r\n                }\r\n                count++;\r\n                let percentTotal = value / absSum;\r\n                if (absSum == 0) {\r\n                    percentTotal = 0;\r\n                }\r\n                dataItem.setRaw(\"valuePercentTotal\", percentTotal * 100);\r\n            });\r\n            this.setPrivateRaw(\"valueLow\", valueLow);\r\n            this.setPrivateRaw(\"valueHigh\", valueHigh);\r\n            this.setPrivateRaw(\"valueSum\", sum);\r\n            this.setPrivateRaw(\"valueAverage\", sum / count);\r\n            this.setPrivateRaw(\"valueAbsoluteSum\", absSum);\r\n        }\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hide whole series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this._valuesDirty) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                dataItem.get(\"label\").text.markDirtyText();\r\n            });\r\n        }\r\n        if (this.isDirty(\"legendLabelText\") || this.isDirty(\"legendValueText\")) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                this.updateLegendValue(dataItem);\r\n            });\r\n        }\r\n        this._arrange();\r\n    }\r\n    _arrange() {\r\n        this._arrangeDown(this._lLabels);\r\n        this._arrangeUp(this._lLabels);\r\n        this._arrangeDown(this._rLabels);\r\n        this._arrangeUp(this._rLabels);\r\n        this._arrangeLeft(this._hLabels);\r\n        this._arrangeRight(this._hLabels);\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            this._updateTick(dataItem);\r\n        });\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        this._arrange();\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n        if (dataItem.get(\"fillPattern\") == null) {\r\n            let patterns = this.get(\"patterns\");\r\n            if (patterns) {\r\n                dataItem.setRaw(\"fillPattern\", patterns.next());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            let value = dataItem.get(\"value\");\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: value, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.show(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.show(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                promises.push(slice.show(duration));\r\n            }\r\n            if (slice.get(\"active\")) {\r\n                slice.states.applyAnimate(\"active\");\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.hide(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.hide(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            slice.hideTooltip();\r\n            if (slice) {\r\n                promises.push(slice.hide(duration));\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            this.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        let slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            this.slices.removeValue(slice);\r\n            slice.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice && !slice.isHidden()) {\r\n            slice.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            slice.unhover();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        if (dataItem) {\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const legendDataItem = dataItem.get(\"legendDataItem\");\r\n                if (legendDataItem) {\r\n                    const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                    $array.each(visualSettings, (setting) => {\r\n                        if (slice.get(setting) != null) {\r\n                            markerRectangle.set(setting, slice.get(setting));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _arrangeDown(labels) {\r\n        if (labels) {\r\n            let next = this._getNextDown();\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelTop = bounds.top;\r\n                if (l.y + labelTop < next) {\r\n                    l.y = next - labelTop;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.bottom;\r\n            });\r\n        }\r\n    }\r\n    _getNextUp() {\r\n        return this.labelsContainer.maxHeight();\r\n    }\r\n    _getNextDown() {\r\n        return 0;\r\n    }\r\n    _arrangeUp(labels) {\r\n        if (labels) {\r\n            let next = this._getNextUp();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelBottom = bounds.bottom;\r\n                if (l.y + labelBottom > next) {\r\n                    l.y = next - labelBottom;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.top;\r\n            });\r\n        }\r\n    }\r\n    _arrangeRight(labels) {\r\n        if (labels) {\r\n            let next = 0;\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelLeft = bounds.left;\r\n                if (l.y + labelLeft < next) {\r\n                    l.y = next - labelLeft;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.right;\r\n            });\r\n        }\r\n    }\r\n    _arrangeLeft(labels) {\r\n        if (labels) {\r\n            let next = this.labelsContainer.maxWidth();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelRight = bounds.right;\r\n                if (l.y + labelRight > next) {\r\n                    l.y = next - labelRight;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.left;\r\n            });\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirty();\r\n    }\r\n    _updateTick(_dataItem) {\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PercentSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentSeries\"\r\n});\r\nObject.defineProperty(PercentSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([PercentSeries.className])\r\n});\r\n//# sourceMappingURL=PercentSeries.js.map","import { Percent } from \"../../core/util/Percent\";\r\nimport { PercentChart } from \"../percent/PercentChart\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates a pie chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieChart extends PercentChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_maxRadius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.seriesContainer.setAll({ x: p50, y: p50 });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chartContainer = this.chartContainer;\r\n        const w = chartContainer.innerWidth();\r\n        const h = chartContainer.innerHeight();\r\n        const startAngle = this.get(\"startAngle\", 0);\r\n        const endAngle = this.get(\"endAngle\", 0);\r\n        const innerRadius = this.get(\"innerRadius\");\r\n        let bounds = $math.getArcBounds(0, 0, startAngle, endAngle, 1);\r\n        const wr = w / (bounds.right - bounds.left);\r\n        const hr = h / (bounds.bottom - bounds.top);\r\n        let innerBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n        if (innerRadius instanceof Percent) {\r\n            let value = innerRadius.value;\r\n            let mr = Math.min(wr, hr);\r\n            value = Math.max(mr * value, mr - Math.min(h, w)) / mr;\r\n            innerBounds = $math.getArcBounds(0, 0, startAngle, endAngle, value);\r\n            this.setPrivateRaw(\"irModifyer\", value / innerRadius.value);\r\n        }\r\n        bounds = $math.mergeBounds([bounds, innerBounds]);\r\n        const prevRadius = this._maxRadius;\r\n        this._maxRadius = Math.min(wr, hr);\r\n        const radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        this.seriesContainer.setAll({\r\n            dy: -radius * (bounds.bottom + bounds.top) / 2, dx: -radius * (bounds.right + bounds.left) / 2\r\n        });\r\n        if (this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || prevRadius != this._maxRadius) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"startAngle\");\r\n            });\r\n        }\r\n        if (this.isDirty(\"innerRadius\") || this.isDirty(\"radius\")) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"innerRadius\");\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns outer radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return outer radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    radius(series) {\r\n        let radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesRadius = series.get(\"radius\");\r\n            if (seriesRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * (index + 1);\r\n            }\r\n        }\r\n        return radius;\r\n    }\r\n    /**\r\n     * Returns inner radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return inner radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    innerRadius(series) {\r\n        const radius = this.radius();\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesInnerRadius = series.get(\"innerRadius\");\r\n            if (seriesInnerRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesInnerRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * index;\r\n            }\r\n        }\r\n        return innerRadius;\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirtyKey(\"radius\");\r\n    }\r\n}\r\nObject.defineProperty(PieChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieChart\"\r\n});\r\nObject.defineProperty(PieChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentChart.classNames.concat([PieChart.className])\r\n});\r\n//# sourceMappingURL=PieChart.js.map","import { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a series for a [[PieChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieSeries extends PercentSeries {\r\n    _makeSlices() {\r\n        return new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.slices.template]));\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => RadialLabel._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.labels.template]));\r\n    }\r\n    _makeTicks() {\r\n        return new ListTemplate(Template.new({}), () => Tick._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.ticks.template]));\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const slice = this.makeSlice(dataItem);\r\n        slice.on(\"scale\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.on(\"shiftRadius\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        const label = this.makeLabel(dataItem);\r\n        label.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        this.makeTick(dataItem);\r\n        slice.events.on(\"positionchanged\", () => {\r\n            label.markDirty();\r\n        });\r\n    }\r\n    _getNextUp() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart._maxRadius;\r\n        }\r\n        return this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _getNextDown() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return -chart._maxRadius;\r\n        }\r\n        return -this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (this.isDirty(\"alignLabels\")) {\r\n                let labelsTemplate = this.labels.template;\r\n                if (this.get(\"alignLabels\")) {\r\n                    labelsTemplate.set(\"textType\", \"aligned\");\r\n                }\r\n                else {\r\n                    let textType = labelsTemplate.get(\"textType\");\r\n                    if (textType == null || textType == \"aligned\") {\r\n                        labelsTemplate.set(\"textType\", \"adjusted\");\r\n                    }\r\n                }\r\n            }\r\n            if (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\r\n                this.markDirtyBounds();\r\n                const startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n                const endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n                const arc = endAngle - startAngle;\r\n                let currentAngle = startAngle;\r\n                const radius = chart.radius(this);\r\n                this.setPrivateRaw(\"radius\", radius);\r\n                let innerRadius = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\r\n                if (innerRadius < 0) {\r\n                    innerRadius = radius + innerRadius;\r\n                }\r\n                //if (radius > 0) {\r\n                $array.each(this._dataItems, (dataItem) => {\r\n                    this.updateLegendValue(dataItem);\r\n                    let currentArc = arc * dataItem.get(\"valuePercentTotal\") / 100;\r\n                    const slice = dataItem.get(\"slice\");\r\n                    if (slice) {\r\n                        slice.set(\"radius\", radius);\r\n                        slice.set(\"innerRadius\", innerRadius);\r\n                        slice.set(\"startAngle\", currentAngle);\r\n                        slice.set(\"arc\", currentArc);\r\n                        const color = dataItem.get(\"fill\");\r\n                        slice._setDefault(\"fill\", color);\r\n                        slice._setDefault(\"stroke\", color);\r\n                        const fillPattern = dataItem.get(\"fillPattern\");\r\n                        slice._setDefault(\"fillPattern\", fillPattern);\r\n                    }\r\n                    let middleAngle = $math.normalizeAngle(currentAngle + currentArc / 2);\r\n                    const label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.setPrivate(\"radius\", radius);\r\n                        label.setPrivate(\"innerRadius\", innerRadius);\r\n                        label.set(\"labelAngle\", middleAngle);\r\n                        if (label.get(\"textType\") == \"aligned\") {\r\n                            let labelRadius = radius + label.get(\"radius\", 0);\r\n                            let y = radius * $math.sin(middleAngle);\r\n                            if (middleAngle > 90 && middleAngle <= 270) {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._lLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius *= -1;\r\n                                labelRadius -= this.labelsContainer.get(\"paddingLeft\", 0);\r\n                                label.set(\"centerX\", p100);\r\n                                label.setPrivateRaw(\"left\", true);\r\n                            }\r\n                            else {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._rLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius += this.labelsContainer.get(\"paddingRight\", 0);\r\n                                label.set(\"centerX\", 0);\r\n                                label.setPrivateRaw(\"left\", false);\r\n                            }\r\n                            label.set(\"x\", labelRadius);\r\n                            label.set(\"y\", radius * $math.sin(middleAngle));\r\n                        }\r\n                    }\r\n                    currentAngle += currentArc;\r\n                    this._updateTick(dataItem);\r\n                });\r\n                //}\r\n            }\r\n        }\r\n    }\r\n    _updateTick(dataItem) {\r\n        const tick = dataItem.get(\"tick\");\r\n        const label = dataItem.get(\"label\");\r\n        const slice = dataItem.get(\"slice\");\r\n        const location = tick.get(\"location\", 1);\r\n        if (tick && label && slice) {\r\n            const radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\r\n            const labelAngle = label.get(\"labelAngle\", 0);\r\n            const cos = $math.cos(labelAngle);\r\n            const sin = $math.sin(labelAngle);\r\n            const labelsContainer = this.labelsContainer;\r\n            const pl = labelsContainer.get(\"paddingLeft\", 0);\r\n            const pr = labelsContainer.get(\"paddingRight\", 0);\r\n            let x = 0;\r\n            let y = 0;\r\n            x = label.x();\r\n            y = label.y();\r\n            let points = [];\r\n            if (x != 0 || y != 0) {\r\n                if (label.get(\"textType\") == \"circular\") {\r\n                    const labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\r\n                    const labelAngle = label.get(\"labelAngle\", 0);\r\n                    x = labelRadius * $math.cos(labelAngle);\r\n                    y = labelRadius * $math.sin(labelAngle);\r\n                }\r\n                let dx = -pr;\r\n                if (label.getPrivate(\"left\")) {\r\n                    dx = pl;\r\n                }\r\n                points = [{ x: slice.x() + radius * cos, y: slice.y() + radius * sin }, { x: x + dx, y: y }, { x: x, y: y }];\r\n            }\r\n            tick.set(\"points\", points);\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const innerRadius = slice.get(\"innerRadius\", 0);\r\n                const radius = slice.get(\"radius\", 0);\r\n                const startAngle = slice.get(\"startAngle\", 0);\r\n                const arc = slice.get(\"arc\", 0);\r\n                const locationX = bullet.get(\"locationX\", 0.5);\r\n                const locationY = bullet.get(\"locationY\", 0.5);\r\n                const angle = startAngle + arc * locationX;\r\n                const r = innerRadius + (radius - innerRadius) * locationY;\r\n                sprite.setAll({ x: $math.cos(angle) * r, y: $math.sin(angle) * r });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PieSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieSeries\"\r\n});\r\nObject.defineProperty(PieSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentSeries.classNames.concat([PieSeries.className])\r\n});\r\n//# sourceMappingURL=PieSeries.js.map"],"names":["defaultOptions","format","toDate","isDate","sign","findIndex","array","getWeekYear","getWeek","localize","formatLong","defaultLocale","message","percent","min","max","isNaN","each","eachContinue","copy","$array.each","x","$type.isNumber","match","color","hue2rgb","p","q","$utils.padString","$utils.rgbToHsl","$utils.hslToRgb","$type.isString","$utils.alternativeColor","$utils.lighten","$utils.brighten","$utils.saturate","$array.any","$array.findIndex","$object.each","AnimationState","$array.indexOf","$array.insertIndex","$array.removeIndex","toIndex","$array.eachReverse","round","sin","cos","arc","point","$object.keys","$ease.cubic","state","$array.removeFirst","$ease.linear","animation","template","value","remove","$array.findReverse","$array.find","tags","themes","$array.getFirstSortedIndex","$order.compare","$order.compareArray","$array.remove","$type.isObject","$math.inBounds","$array.pushOne","$utils.relativeToValue","tooltipMoveDp","$utils.addEventListener","blur","saturate","events","$utils.isTouchEvent","$utils.getPointerId","y","$math.cos","$math.sin","$object.keysOrdered","BlendMode","$math.fitToRange","$type.PLACEHOLDER","$utils.trim","$type.toNumber","$type.toDate","$type.isDate","$type.isNaN","$utils.isLocalEvent","$utils.truncateTextWithEllipsis","$array.keepIf","$utils.onZoom","$utils.mergeTags","fill","fillGradient","$utils.cleanFormat","$object.copy","$type.PLACEHOLDER2","a","$utils.decimalPlaces","$type.numberToString","$utils.getWeekYear","$utils.getWeek","$utils.getMonthWeek","$utils.getYearDay","$utils.get12Hours","$utils.getTimeZone","$utils.getTimezoneOffset","$utils.getDayFromWeek","$utils.escapeForRgex","$object.eachContinue","$array.map","$array.getSortedIndex","$ease.out","mapToEllipse","approxUnitArc","vectorAngle","getArcCenter","arcToBezier","$utils.getRendererEvent","$utils.getEventTarget","$array.copy","$utils.setInteractive","$array.move","$math.getArcBounds","$math.DEGREES","line","_index","$array.eachContinue","metrics","height","w","deltaAngle","$math.normalizeAngle","$utils.splitString","$utils.supports","$utils.setStyle","$utils.getStyle","ev","canvas","$utils.getSafeResolution","$utils.getEventKey","$utils.blur","group","$utils.focus","$utils.removeElement","$utils.stripTags","visualSettings","startIndex","endIndex","$time.sleep","len","$draw.segmentedLine","$math.RADIANS","constant","epsilon","pi","tau","pointX","pointY","area","dateFormats","$time.round","$math.round","eventType","$order.compareNumber","bounds","chart","field","$utils.capitalizeFirst","stacked","xAxis","yAxis","sAnimation","eAnimation","stepPower","series","range","delta","$math.ceil","key","$utils.sameBounds","strokeTemplate","fillTemplate","stroke","itemLocationX","itemLocationY","$math.mergeBounds","PieChart","labelAngle"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146]}