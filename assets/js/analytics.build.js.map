{"version":3,"file":"analytics.build.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/tslib/tslib.es6.mjs","../../node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/List.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/States.js","../../node_modules/@amcharts/amcharts5/.internal/core/Registry.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","../../node_modules/@amcharts/amcharts5/locales/en.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","../../node_modules/@amcharts/amcharts5/.internal/core/Theme.js","../../node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","../../node_modules/svg-arc-to-cubic-bezier/modules/index.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","../../node_modules/@amcharts/amcharts5/.internal/core/Root.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js","../../node_modules/d3-shape/src/constant.js","../../node_modules/d3-shape/src/math.js","../../node_modules/d3-path/src/path.js","../../node_modules/d3-shape/src/path.js","../../node_modules/d3-shape/src/arc.js","../../node_modules/d3-shape/src/array.js","../../node_modules/d3-shape/src/curve/linear.js","../../node_modules/d3-shape/src/point.js","../../node_modules/d3-shape/src/line.js","../../node_modules/d3-shape/src/area.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","../../node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/CategoryAxis.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/LineSeries.js","../../node_modules/@amcharts/amcharts5/.internal/core/render/MonotoneXTension.js","../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/SmoothedXLineSeries.js","../../node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentDefaultTheme.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentSeries.js","../../node_modules/@amcharts/amcharts5/.internal/charts/pie/PieChart.js","../../node_modules/@amcharts/amcharts5/.internal/charts/pie/PieSeries.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nexport function assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\" && value.match(/[0-9]+/)) {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\nexport function getEventKey(event) {\r\n    if (event.key !== undefined) {\r\n        return event.key;\r\n    }\r\n    switch (event.keyCode) {\r\n        case 9: return \"Tab\";\r\n        case 13: return \"Enter\";\r\n        case 16: return \"Shift\";\r\n        case 17: return \"Control\";\r\n        case 27: return \"Escape\";\r\n        case 32: return \" \";\r\n        case 37: return \"ArrowLeft\";\r\n        case 38: return \"ArrowUp\";\r\n        case 39: return \"ArrowRight\";\r\n        case 40: return \"ArrowDown\";\r\n        case 46: return \"Delete\";\r\n    }\r\n    return \"\" + event.keyCode;\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = appendStylesheet(this._root, \":not(*)\");\r\n        }\r\n        $object.each(styles, (key, value) => {\r\n            this.setStyle(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\nexport function truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\r\n    if (text.length > maxLength) {\r\n        // Find the last non-alphanumeric character before maxLength\r\n        let lastNonAlphanumericIndex = maxLength - 1;\r\n        while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\r\n            lastNonAlphanumericIndex--;\r\n        }\r\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\r\n            return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\r\n        }\r\n        else {\r\n            // If no non-alphanumeric character found, truncate without breaking words\r\n            return text.substring(0, maxLength) + ellipsis;\r\n        }\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\r\nexport function splitString(source) {\r\n    // Regular expression to identify RTL characters\r\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\r\n    // Regular expression to capture segments ending with specific Arabic characters\r\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\r\n    // Split input string into array of words or characters, including whitespace\r\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\r\n    let result = [];\r\n    segments.forEach(segment => {\r\n        if (segment.match(/^\\s+$/)) {\r\n            // If the segment is purely whitespace\r\n            if (segment = \" \") {\r\n                segment = \"  \";\r\n            }\r\n            result.push(segment);\r\n        }\r\n        else if (rtlChar.test(segment)) {\r\n            // If the segment contains RTL characters, handle special splits\r\n            let parts = segment.split(splitPattern).filter(part => part !== '');\r\n            // Concatenate parts processed by the split pattern directly to result\r\n            result = result.concat(parts);\r\n        }\r\n        else {\r\n            // Treat this segment as LTR: split into characters\r\n            result = result.concat([...segment]);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return trim(wtz);\r\n}\r\nexport function getTimezoneOffset(timezone, targetDate) {\r\n    const date = targetDate || new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l,\r\n    };\r\n}\r\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\r\nexport function hsvToHsl(hsv) {\r\n    const l = hsv.v * (1 - (hsv.s / 2));\r\n    const s = (l === 0 || l === 1\r\n        ? 0\r\n        : (hsv.v - l) / Math.min(l, 1 - l));\r\n    return {\r\n        h: hsv.h,\r\n        s,\r\n        l,\r\n        a: hsv.a,\r\n    };\r\n}\r\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\r\nexport function hslToHsv(hsl) {\r\n    const v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\r\n    const s = (v === 0\r\n        ? 0\r\n        : 2 * (1 - (hsl.l / v)));\r\n    return {\r\n        h: hsl.h,\r\n        s,\r\n        v,\r\n        a: hsl.a,\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\nexport var AnimationState;\r\n(function (AnimationState) {\r\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\r\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\r\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return AnimationState.Playing;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return AnimationState.Stopped;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return AnimationState.Playing;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return AnimationState.Stopped;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSwap(a, b) {\r\n        if (this.events.isEnabled(\"swap\")) {\r\n            this.events.dispatch(\"swap\", {\r\n                type: \"swap\",\r\n                target: this,\r\n                a,\r\n                b\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._values[b] = value_a;\r\n            this._onSwap(value_a, value_b);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const currentAutoDispose = this.autoDispose;\r\n        this.autoDispose = false;\r\n        super.swap(a, b);\r\n        this.autoDispose = currentAutoDispose;\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    _dispose() {\r\n        if (this.autoDispose) {\r\n            $array.each(this._values, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this.autoDispose) {\r\n            this.template.dispose();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\r\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\r\n    return horizontalOverlap && verticalOverlap;\r\n}\r\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\r\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    let r = innerRadius + 0.01;\r\n    startAngle = normalizeAngle(startAngle);\r\n    endAngle = normalizeAngle(endAngle);\r\n    let angle = startAngle * RADIANS;\r\n    if (endAngle < startAngle) {\r\n        endAngle += 360;\r\n    }\r\n    let points = [];\r\n    while (r < radius + radiusStep) {\r\n        let stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        let c = Math.max(0.01, Math.min(1, r / 200));\r\n        stepSize = stepSize * c;\r\n        let degrees = angle * DEGREES;\r\n        let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + 0.01 + (degrees - startAngle) / 360 * radiusStep;\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * DEGREES > endAngle + 360 * Math.ceil((radius - innerRadius) / radiusStep)) {\r\n            break;\r\n        }\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\r\nexport function circlesOverlap(circle1, circle2) {\r\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\r\n}\r\n//# sourceMappingURL=Math.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.13.3\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id) {\r\n    let found;\r\n    registry.rootElements.forEach((item) => {\r\n        if (item.dom.id == id) {\r\n            found = item;\r\n        }\r\n    });\r\n    return found;\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { AnimationState, getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * If this is set to `false` then disposing does nothing, it's a no-op.\r\n         */\r\n        Object.defineProperty(this, \"enableDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        let state = AnimationState.Stopped;\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            let paused = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            if (playing) {\r\n                state = AnimationState.Playing;\r\n            }\r\n            else if (paused) {\r\n                state = AnimationState.Paused;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    off(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._settingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    offPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._privateSettingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */\r\n    has(key) {\r\n        return key in this._settings;\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (this.enableDispose && !this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefaultFn(key, f) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            const value = f();\r\n            this.set(key, value);\r\n            return value;\r\n        }\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes(force = false) {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected || force) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected || force) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected || force;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete this._root.entitiesById[prevId];\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (this._root.entitiesById[id] && this._root.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        this._root.entitiesById[id] = this;\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete this._root.entitiesById[id];\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport * as $type from \"./Type\";\r\nfunction disposeSettings(settings) {\r\n    $object.each(settings, (_key, value) => {\r\n        if ($type.isObject(value) && typeof value.dispose === \"function\") {\r\n            value.enableDispose = true;\r\n            value.dispose();\r\n        }\r\n    });\r\n}\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    _dispose() {\r\n        $object.each(this._states, (_key, state) => {\r\n            state._dispose();\r\n        });\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n        disposeSettings(this._privateSettings);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n    _checkDisposed() {\r\n        if (this._disposed) {\r\n            throw new Error(\"Template is disposed\");\r\n        }\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        this._checkDisposed();\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        this._checkDisposed();\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        this._checkDisposed();\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        this._checkDisposed();\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        this._checkDisposed();\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        this._checkDisposed();\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        this._checkDisposed();\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._checkDisposed();\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        //this._checkDisposed();\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._checkDisposed();\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite.getPrivate(\"trustBounds\")) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (sprite.isType(\"Graphics\")) {\r\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\r\n                    if (strokeWidth >= 1) {\r\n                        bounds.left -= strokeWidth;\r\n                        bounds.right += strokeWidth;\r\n                        bounds.top -= strokeWidth;\r\n                        bounds.bottom += strokeWidth;\r\n                    }\r\n                }\r\n                if (!$math.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */\r\n    markDirtyKey(key) {\r\n        this._markDirtyKey(key);\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => {\r\n                                const tooltip = this.getTooltip();\r\n                                if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                else {\r\n                                    this.showTooltip();\r\n                                }\r\n                            }, 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        let filter = this.get(\"filter\", \"\");\r\n        if (this.isDirty(\"blur\")) {\r\n            const blur = this.get(\"blur\", 0);\r\n            if (blur != 0) {\r\n                filter += \" blur(\" + blur + \"px)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"saturate\")) {\r\n            const saturate = this.get(\"saturate\", 1);\r\n            if (saturate != 1) {\r\n                filter += \" saturate(\" + saturate + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"brightness\")) {\r\n            const brightness = this.get(\"brightness\", 1);\r\n            if (brightness != 1) {\r\n                filter += \" brightness(\" + brightness + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"contrast\")) {\r\n            const contrast = this.get(\"contrast\", 1);\r\n            if (contrast != 1) {\r\n                filter += \" contrast(\" + contrast + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"sepia\")) {\r\n            const sepia = this.get(\"sepia\", 0);\r\n            if (sepia != 0) {\r\n                filter += \" sepia(\" + sepia + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"hue\")) {\r\n            const hue = this.get(\"hue\", 0);\r\n            if (hue != 0) {\r\n                filter += \" hue-rotate(\" + hue + \"deg)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"invert\")) {\r\n            const invert = this.get(\"invert\", 0);\r\n            if (invert != 0) {\r\n                filter += \" invert(\" + invert + \")\";\r\n            }\r\n        }\r\n        if (filter) {\r\n            display.filter = filter;\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n            this._disposers.push(events.on(\"blur\", () => {\r\n                this.setPrivateRaw(\"touchHovering\", false);\r\n            }));\r\n            this._disposers.push(events.once(\"boundschanged\", () => {\r\n                // We might need to do this to re-evaluate accessibility attributes\r\n                // once the element gains size (bounds)\r\n                this.markDirtyAccessibility();\r\n            }));\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\") && !events.isDisposed()) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", null);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            let scale = 1;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n                if (parent) {\r\n                    scale *= parent.get(\"scale\", 1);\r\n                }\r\n            }\r\n            let x = (e.point.x - dragEvent.point.x) / scale;\r\n            let y = (e.point.y - dragEvent.point.y) / scale;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        if (!this.isDisposed()) {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        if (!this.isDisposed()) {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        if (!this.isDisposed()) {\r\n            const tooltip = this.getTooltip();\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                const tooltipPosition = this.get(\"tooltipPosition\");\r\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                if (tooltipPosition == \"pointer\") {\r\n                    const lastTooltipCoords = this.getPrivate(\"lastTooltipCoords\");\r\n                    if (lastTooltipCoords && lastTooltipCoords.x == point.x && lastTooltipCoords.y == point.y) {\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.setPrivate(\"lastTooltipCoords\", point);\r\n                    }\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                const dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                const promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            this.removePrivate(\"lastTooltipCoords\");\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeScale() {\r\n        const scale = this.get(\"scale\", 1);\r\n        return this._parent ? (this._parent.compositeScale() * scale) : scale;\r\n    }\r\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeRotation() {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        return this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n        this._checkDirtyFill();\r\n    }\r\n    _checkDirtyFill() {\r\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            const backgroundDisplay = this._backgroundDisplay;\r\n            const display = this._display;\r\n            display.clear();\r\n            backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                backgroundDisplay.beginFill(fill, fillOpacity);\r\n                backgroundDisplay.drawRect(0, 0, width, height);\r\n                backgroundDisplay.endFill();\r\n            }\r\n            display.angle = this.get(\"rotation\", 0);\r\n            //display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this.set(\"width\", canvas.width);\r\n            this.set(\"height\", canvas.height);\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (colorOpacity !== undefined) {\r\n            this._display.alpha = Math.max(0, colorOpacity);\r\n        }\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n                this.markDirty();\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this._display.image(canvas, canvas.width, canvas.height, 0, 0);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map","/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw && typeof draw === \"function\") {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fill && !fillGradient) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            if (fillPattern) {\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                const lineCap = this.get(\"lineCap\");\r\n                if (stroke && !strokeGradient) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\r\n                    this._display.endStroke();\r\n                }\r\n                if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                if (strokePattern) {\r\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */\r\n                    let pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        let w = this.width();\r\n        let h = this.height();\r\n        let x = 0;\r\n        let y = 0;\r\n        let wSign = w / Math.abs(w);\r\n        let hSign = h / Math.abs(h);\r\n        if (this.get(\"containStroke\", false)) {\r\n            const strokeWidth = this.get(\"strokeWidth\", 0);\r\n            w -= strokeWidth * wSign;\r\n            h -= strokeWidth * hSign;\r\n            x += strokeWidth / 2 * wSign;\r\n            y += strokeWidth / 2 * hSign;\r\n        }\r\n        this._display.drawRect(x, y, w, h);\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes(force = false) {\r\n        if (super._applyThemes(force)) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes(force);\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        if (!this.get(\"html\")) {\r\n            let width = this.get(\"width\");\r\n            let height = this.get(\"height\");\r\n            let pWidth = this.getPrivate(\"width\");\r\n            let pHeight = this.getPrivate(\"height\");\r\n            let bounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: this.width(),\r\n                bottom: this.height()\r\n            };\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                horizontal = true;\r\n            }\r\n            if (layout instanceof VerticalLayout) {\r\n                vertical = true;\r\n            }\r\n            if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n                // void\r\n            }\r\n            else {\r\n                let m = Number.MAX_VALUE;\r\n                let l = m;\r\n                let r = -m;\r\n                let t = m;\r\n                let b = -m;\r\n                const paddingLeft = this.get(\"paddingLeft\", 0);\r\n                const paddingTop = this.get(\"paddingTop\", 0);\r\n                const paddingRight = this.get(\"paddingRight\", 0);\r\n                const paddingBottom = this.get(\"paddingBottom\", 0);\r\n                this.children.each((child) => {\r\n                    if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                        let childBounds = child.adjustedLocalBounds();\r\n                        let childX = child.x();\r\n                        let childY = child.y();\r\n                        let cl = childX + childBounds.left;\r\n                        let cr = childX + childBounds.right;\r\n                        let ct = childY + childBounds.top;\r\n                        let cb = childY + childBounds.bottom;\r\n                        if (horizontal) {\r\n                            cl -= child.get(\"marginLeft\", 0);\r\n                            cr += child.get(\"marginRight\", 0);\r\n                        }\r\n                        if (vertical) {\r\n                            ct -= child.get(\"marginTop\", 0);\r\n                            cb += child.get(\"marginBottom\", 0);\r\n                        }\r\n                        if (cl < l) {\r\n                            l = cl;\r\n                        }\r\n                        if (cr > r) {\r\n                            r = cr;\r\n                        }\r\n                        if (ct < t) {\r\n                            t = ct;\r\n                        }\r\n                        if (cb > b) {\r\n                            b = cb;\r\n                        }\r\n                    }\r\n                });\r\n                if (l == m) {\r\n                    l = 0;\r\n                }\r\n                if (r == -m) {\r\n                    r = 0;\r\n                }\r\n                if (t == m) {\r\n                    t = 0;\r\n                }\r\n                if (b == -m) {\r\n                    b = 0;\r\n                }\r\n                bounds.left = l - paddingLeft;\r\n                bounds.top = t - paddingTop;\r\n                bounds.right = r + paddingRight;\r\n                bounds.bottom = b + paddingBottom;\r\n                const minWidth = this.get(\"minWidth\");\r\n                if ($type.isNumber(minWidth) && minWidth > 0) {\r\n                    if (bounds.right - bounds.left < minWidth) {\r\n                        if (bounds.right >= minWidth) {\r\n                            bounds.left = bounds.right - minWidth;\r\n                        }\r\n                        else {\r\n                            bounds.right = bounds.left + minWidth;\r\n                        }\r\n                    }\r\n                }\r\n                const minHeight = this.get(\"minHeight\");\r\n                if ($type.isNumber(minHeight) && minHeight > 0) {\r\n                    if (bounds.bottom - bounds.top < minHeight) {\r\n                        if (bounds.bottom >= minHeight) {\r\n                            bounds.top = bounds.bottom - minHeight;\r\n                        }\r\n                        else {\r\n                            bounds.bottom = bounds.top + minHeight;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._contentWidth = bounds.right - bounds.left;\r\n            this._contentHeight = bounds.bottom - bounds.top;\r\n            if ($type.isNumber(width)) {\r\n                bounds.left = 0;\r\n                bounds.right = width;\r\n            }\r\n            if ($type.isNumber(pWidth)) {\r\n                bounds.left = 0;\r\n                bounds.right = pWidth;\r\n            }\r\n            if ($type.isNumber(height)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = height;\r\n            }\r\n            if ($type.isNumber(pHeight)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = pHeight;\r\n            }\r\n            this._localBounds = bounds;\r\n        }\r\n        else {\r\n            let bounds = this._localBounds;\r\n            if (bounds) {\r\n                this._contentWidth = bounds.right - bounds.left;\r\n                this._contentHeight = bounds.bottom - bounds.top;\r\n            }\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateHTMLContent() {\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\") {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n        else {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        this._root._positionHTMLElement(this);\r\n    }\r\n    /**\r\n     * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n     * the Container will scroll in such way so that target element becomes\r\n     * visible if its currently outside of view.\r\n     *\r\n     * @param  child  Target child\r\n     * @since 5.10.5\r\n     */\r\n    scrollToChild(child) {\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            let y = child.y();\r\n            let h = this.innerHeight();\r\n            let ch = child.height();\r\n            let contentH = this._contentHeight;\r\n            let max = 1 - (h - ch / 2) / contentH;\r\n            if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\r\n                let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\r\n                verticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            this._updateHTMLContent();\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"maxChars\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n            let fillGradient = this.get(\"fillGradient\");\r\n            if (fillGradient) {\r\n                this._display.style.fill = fillGradient.getFill(this);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                textStyle.fill = fillGradient.getFill(this);\r\n            }\r\n            else if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        let text = this.get(\"text\", \"\");\r\n        if (this.get(\"maxChars\")) {\r\n            text = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\r\n        }\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    _getAccessibleText() {\r\n        const ariaLabel = this.get(\"ariaLabel\");\r\n        if (ariaLabel !== undefined) {\r\n            return this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\r\n        }\r\n        return this._getText();\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillGradient\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\",\r\n                \"maxChars\",\r\n                \"ariaLabel\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const text = this._text;\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            text.set(\"text\", this.get(\"text\"));\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\", 0);\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\", 0);\r\n                }\r\n            }\r\n            text.set(\"x\", x);\r\n        }\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            background.setPrivate(\"visible\", text._display.textVisible);\r\n        }\r\n    }\r\n    _maybeUpdateHTMLColor() {\r\n        const htmlElement = this.getPrivate(\"htmlElement\");\r\n        if (htmlElement && this.get(\"fill\")) {\r\n            htmlElement.style.color = this.get(\"fill\").toCSSHex();\r\n            //@todo support gradient\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const text = this._text;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n        this.root.events.once(\"frameended\", () => {\r\n            text.markDirtyBounds();\r\n        });\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        this._markDirtyKey(\"html\");\r\n        const text = this._text;\r\n        if (text.get(\"populateText\")) {\r\n            text.markDirtyText();\r\n        }\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._updateHTMLContent();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getAccessibleText() {\r\n        return this._text._getAccessibleText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillGrDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        const background = this._setDefaultFn(\"background\", () => {\r\n            return PointedRectangle.new(this._root, {});\r\n        });\r\n        background.set(\"themeTags\", [\"tooltip\", \"background\"]);\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                }));\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                }));\r\n            }\r\n        }));\r\n        this.on(\"visible\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this.label.events.on(\"dataitemchanged\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this._root._tooltips.push(this);\r\n    }\r\n    _handleReaderAnnouncement() {\r\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\r\n            this._root.readerAlert(this.label.getAccessibleText());\r\n        }\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    _dispose() {\r\n        super._dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\r\n        if (labelAriaLabel != null) {\r\n            this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getFillGradientFromSprite\")) {\r\n                if (this._fillGrDp) {\r\n                    this._fillGrDp.dispose();\r\n                }\r\n                let fillGradient = tooltipTarget.get(\"fillGradient\");\r\n                if (fillGradient != null) {\r\n                    background.set(\"fillGradient\", fillGradient);\r\n                }\r\n                this._fillGrDp = tooltipTarget.on(\"fillGradient\", (fillGradient) => {\r\n                    if (fillGradient != null) {\r\n                        background.set(\"fillGradient\", fillGradient);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillGrDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            const decimals = $utils.decimalPlaces(value);\r\n            if (decimals > 0) {\r\n                const d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\r\n            }\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */\r\n    format(source, format, ignoreTimezone = false) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        let originalDate = date;\r\n        if (timezone && !this._root.utc && !ignoreTimezone) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info, ignoreTimezone, originalDate);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info, ignoreTimezone = false, originalDate) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc && !ignoreTimezone) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(originalDate || date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(originalDate || date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(originalDate || date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(originalDate || date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone, originalDate || date) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format, utc) {\r\n        // If UTC is not supplied, use Root setting\r\n        if (typeof utc === \"undefined\") {\r\n            utc = this._root.utc;\r\n        }\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // Are we parsing a timestamp?\r\n        if (format == \"x\") {\r\n            return new Date(parseInt(source));\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        const values = {\r\n            millisecond: 0,\r\n            second: 0,\r\n            minute: 0,\r\n            hour: 0,\r\n            day: 0,\r\n            week: 0,\r\n            month: 0,\r\n            year: 0\r\n        };\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            // Calculate current unit value\r\n            let ints;\r\n            const unitValue = this._getUnitValue(unit);\r\n            if (i < (len - 1)) {\r\n                ints = Math.floor(tstamp / unitValue);\r\n            }\r\n            else {\r\n                ints = Math.round(tstamp / unitValue);\r\n            }\r\n            values[unit] += ints;\r\n            // Reduce timestamp\r\n            tstamp -= ints * unitValue;\r\n        }\r\n        // Check if we have full unit that we need to bump up to higher unit\r\n        $object.each(values, (unit, value) => {\r\n            if (unit == \"millisecond\" && value == 1000) {\r\n                values[\"second\"]++;\r\n                values[\"millisecond\"] = 0;\r\n            }\r\n            else if (unit == \"second\" && value == 60) {\r\n                values[\"minute\"]++;\r\n                values[\"second\"] = 0;\r\n            }\r\n            else if (unit == \"minute\" && value == 60) {\r\n                values[\"hour\"]++;\r\n                values[\"minute\"] = 0;\r\n            }\r\n            else if (unit == \"hour\" && value == 24) {\r\n                values[\"day\"]++;\r\n                values[\"hour\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 7) {\r\n                values[\"week\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 30) {\r\n                values[\"month\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"month\" && value == 12) {\r\n                values[\"year\"]++;\r\n                values[\"month\"] = 0;\r\n            }\r\n            // if (val > 0) {\r\n            // \tres = res.replace($type.PLACEHOLDER, $utils.padString(val, 2, \"0\"));\r\n            // }\r\n            // else {\r\n            // \tres = res.replace($type.PLACEHOLDER, \"\");\r\n            // }\r\n        });\r\n        // Iterate again\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(values[unit], digits, \"0\"));\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonDisabled: Color.fromHex(0xdadada),\r\n            primaryButtonTextDisabled: Color.fromHex(0xffffff),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        r(\"ZoomableContainer\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            wheelable: true,\r\n            pinchZoom: true,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            zoomStep: 2,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            animationDuration: 600,\r\n            maxPanOut: 0.4\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        r(\"GrainPattern\").setAll({\r\n            width: 200,\r\n            height: 200,\r\n            colors: [Color.fromHex(0x000000)],\r\n            size: 1,\r\n            horizontalGap: 0,\r\n            verticalGap: 0,\r\n            density: 1,\r\n            minOpacity: 0,\r\n            maxOpacity: 0.2\r\n        });\r\n        {\r\n            const rule = r(\"PatternSet\");\r\n            rule.setAll({\r\n                step: 1\r\n            });\r\n            setColor(rule, \"color\", ic, \"stroke\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"EditableLabel\").setAll({\r\n            editOn: \"click\",\r\n            //setStateOnChildren: true,\r\n            themeTags: [\"editablelabel\"],\r\n            multiLine: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\r\n            fillOpacity: 0,\r\n            fill: Color.fromHex(0x000000),\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusTR: 3,\r\n            strokeOpacity: 0,\r\n            stroke: Color.fromHex(0x000000)\r\n        });\r\n        {\r\n            r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\r\n                strokeOpacity: 0.2,\r\n            });\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        r(\"Button\").states.create(\"disabled\", {\r\n            forceInactive: true\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            rule.setAll({\r\n                forceInactive: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"Tooltip\", ['indicator']).setAll({\r\n            forceHidden: true\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10,\r\n            isMeasured: false\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\r\n        });\r\n        r(\"Button\", [\"zoomtools\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 2\r\n        });\r\n        r(\"ZoomTools\").setAll({\r\n            x: p100,\r\n            centerX: p100,\r\n            y: p100,\r\n            centerY: p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x) + .5;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    subStatus(status) {\r\n        return {\r\n            inactive: (this.inactive == null ? status.inactive : this.inactive),\r\n            layer: this._layer || status.layer,\r\n        };\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive(status) {\r\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this._isInteractive(status);\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(status, targetGhostLayer = 0) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const subStatus = this.subStatus(status);\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask(subStatus)) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            if ((subStatus.layer.order > 0) && !targetGhostLayer) {\r\n                $array.move(this._renderer._deferredGhostLayers, subStatus.layer.order);\r\n            }\r\n            this._render(subStatus, targetGhostLayer);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(status, _targetGhostLayer = 0) {\r\n        if (this.exportable === false) {\r\n            status.layer.tainted = true;\r\n        }\r\n    }\r\n    _ghostOnly(targetGhostLayer = 0) {\r\n        return targetGhostLayer > 0 ? true : false;\r\n    }\r\n    _drawGhost(status, targetGhostLayer = 0) {\r\n        const interactive = this._isInteractive(status);\r\n        const order = status.layer.order || 0;\r\n        return interactive && ((order == 0 && !this._ghostOnly(targetGhostLayer)) || order == targetGhostLayer) ? true : false;\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this.interactiveChildren || super._isInteractiveMask(status);\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(status, targetGhostLayer) {\r\n        super._render(status);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(status, targetGhostLayer);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    colorizeGhost(context, forceColor) {\r\n        this.colorize(context, forceColor);\r\n    }\r\n    path(_context) { }\r\n    pathGhost(context) {\r\n        this.path(context);\r\n    }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin, lineCap) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n        Object.defineProperty(this, \"lineCap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineCap\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n        if (this.lineCap) {\r\n            context.lineCap = this.lineCap;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n    colorizeGhost(_context, _forceColor) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin, lineCap) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin, lineCap));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        const layerDirty = status.layer.dirty;\r\n        const interactive = this._isInteractive(status);\r\n        const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n        const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n        if (layerDirty || interactive || ghostOnly) {\r\n            const context = status.layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty && !ghostOnly) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (drawGhost) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty && !ghostOnly) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (drawGhost) {\r\n                    op.pathGhost(ghostContext);\r\n                    op.colorizeGhost(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"truncated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(status);\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            status.layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            status.layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            status.layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(status);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(status);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (this._isInteractive(status)) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\r\n                        if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\r\n                            // Measure actual width of the text so the line fits\r\n                            const metrics = this._measureText(chunk.text, context);\r\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        }\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        if (!ghostOnly) {\r\n                            context.save();\r\n                            context.beginPath();\r\n                            if (chunk.fill) {\r\n                                context.strokeStyle = chunk.fill.toCSS();\r\n                            }\r\n                            else if (this.style.fill && this.style.fill instanceof Color) {\r\n                                context.strokeStyle = this.style.fill.toCSS();\r\n                            }\r\n                            context.lineWidth = thickness * offset;\r\n                            context.moveTo(offsetX, y);\r\n                            context.lineTo(offsetX + chunk.width, y);\r\n                            context.stroke();\r\n                            context.restore();\r\n                        }\r\n                    }\r\n                    if (interactive && this.interactive && drawGhost) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure({\r\n                inactive: this.inactive,\r\n                layer: this.getLayer(),\r\n            });\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            this.truncated = undefined;\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                                this.truncated = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = rtl ? maxWidth : -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = rtl ? -maxWidth : maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(status, targetGhostLayer);\r\n                break;\r\n            default:\r\n                super._render(status, targetGhostLayer);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(status, targetGhostLayer = 0) {\r\n        if (this.textVisible) {\r\n            this._prerender(status);\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(status);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                if (!ghostOnly) {\r\n                    context.rotate(lineStartAngle);\r\n                }\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    if (!ghostOnly) {\r\n                        context.textBaseline = \"middle\";\r\n                        context.textAlign = \"center\";\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive && drawGhost) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(status);\r\n            default:\r\n                return super._measure(status);\r\n        }\r\n    }\r\n    _measureCircular(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    let chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars = $utils.splitString(chunk.text);\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            //totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        if (rtl) {\r\n                            // @todo still needed?\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        if (this.image) {\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                status.layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            if (status.layer.dirty && !ghostOnly) {\r\n                if (this.shadowColor) {\r\n                    status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    status.layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    status.layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    status.layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive(status) && drawGhost) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_deferredGhostLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    resetImageArray() {\r\n        this._ghostLayer.imageArray = undefined;\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        layer.view.className = \"am5-layer-\" + order;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        this._deferredGhostLayers = [];\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render({\r\n            inactive: null,\r\n            layer: this.defaultLayer,\r\n        });\r\n        const deferredGhostLayers = this._deferredGhostLayers;\r\n        if (deferredGhostLayers.length) {\r\n            deferredGhostLayers.sort((a, b) => a - b);\r\n            $array.each(deferredGhostLayers, (layerx) => {\r\n                root.render({\r\n                    inactive: null,\r\n                    layer: this.defaultLayer\r\n                }, layerx);\r\n            });\r\n        }\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    getObjectAtPoint(point) {\r\n        const data = this._ghostLayer.getImageArray(point);\r\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\r\n            return undefined;\r\n        }\r\n        const colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"imageArray\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        this._resolution = resolution;\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    getImageArray(point) {\r\n        if (!this.imageArray) {\r\n            this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\r\n        }\r\n        const data = this.imageArray;\r\n        const x = Math.round(point.x * this._resolution);\r\n        const y = Math.round(point.y * this._resolution);\r\n        const i = (y * this._width + x) * 4;\r\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","import { AnimationState } from \"./util/Animation\";\r\nimport { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent, isPercent, Percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         *\r\n         * @since 5.11.0\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n            if (settings.role) {\r\n                this._inner.setAttribute(\"role\", settings.role);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (eventKey == \"Tab\") {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                        if (announceText !== \"\") {\r\n                            this.readerAlert(announceText);\r\n                        }\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.key == \"Escape\") {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"Enter\":\r\n                            case \" \":\r\n                                const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                                if (announceText !== \"\") {\r\n                                    this.readerAlert(announceText);\r\n                                }\r\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\r\n                                    return;\r\n                                }\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case \"ArrowLeft\":\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case \"ArrowRight\":\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case \"ArrowUp\":\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case \"ArrowDown\":\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                downEvent.point = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"ArrowLeft\":\r\n                            case \"ArrowRight\":\r\n                            case \"ArrowUp\":\r\n                            case \"ArrowDown\":\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                            case \"Tab\":\r\n                                const group = focusedSprite.get(\"focusableGroup\");\r\n                                if (group && this._isShift) {\r\n                                    this._focusNext(focusedSprite.getPrivate(\"focusElement\").dom, -1, group);\r\n                                    return;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        let running = 0;\r\n        $array.keepIf(this._animations, (animation) => {\r\n            const state = animation._runAnimation(currentTime);\r\n            if (state === AnimationState.Stopped) {\r\n                return false;\r\n            }\r\n            else if (state === AnimationState.Playing) {\r\n                ++running;\r\n                return true;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n        this._isDirtyAnimation = false;\r\n        return running === 0;\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            const animationDone = this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._renderer.resetImageArray();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                animationDone &&\r\n                !this._isDirtyAnimation &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._dirty[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyParent(parent) {\r\n        this._isDirty = true;\r\n        this._isDirtyParents = true;\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._dirtyParents[parent.uid] = parent;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._dirtyBounds[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        this._isDirty = true;\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addAnimation(animation) {\r\n        this._isDirtyAnimation = true;\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            const element = this._readerAlertElement;\r\n            text = $utils.stripTags(text);\r\n            if (element.innerHTML == text) {\r\n                element.innerHTML = \"\";\r\n            }\r\n            element.innerHTML = text;\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        const ariaCurrent = target.get(\"ariaCurrent\");\r\n        if (ariaCurrent != null) {\r\n            focusElement.setAttribute(\"aria-current\", ariaCurrent);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-current\");\r\n        }\r\n        const ariaSelected = target.get(\"ariaSelected\");\r\n        if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-selected\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false && (target.height() || target.width())) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\r\n        let x = bounds.left - padding;\r\n        let y = bounds.top - padding;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + padding * 2) + \"px\";\r\n        focusElement.style.height = (height + padding * 2) + \"px\";\r\n    }\r\n    _getSpriteByFocusElement(target) {\r\n        let found;\r\n        $array.eachContinue(this._tabindexes, (item, _index) => {\r\n            if (item.getPrivate(\"focusElement\").dom === target) {\r\n                found = item;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return found;\r\n    }\r\n    _handleFocus(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        //const focused = this._tabindexes[index];\r\n        const focused = this._getSpriteByFocusElement(ev.target);\r\n        if (!focused) {\r\n            return;\r\n        }\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction, group) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        const targetElement = focusableElements[index];\r\n        if (group && direction == -1) {\r\n            const target = this._getSpriteByFocusElement(targetElement);\r\n            if (target && target.get(\"focusableGroup\") == group) {\r\n                this._focusNext(targetElement, direction);\r\n                return;\r\n            }\r\n        }\r\n        targetElement.focus();\r\n    }\r\n    _handleBlur(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        // Should we put this into a wrapper?\r\n        let needWrapper = false;\r\n        let wrapperTarget;\r\n        target._walkParents((parent) => {\r\n            if (parent.get(\"verticalScrollbar\")) {\r\n                needWrapper = true;\r\n                wrapperTarget = parent;\r\n                return false;\r\n            }\r\n        });\r\n        let htmlElementWrapper;\r\n        if (needWrapper) {\r\n            htmlElementWrapper = document.createElement(\"div\");\r\n            target.setPrivate(\"htmlElementWrapper\", htmlElementWrapper);\r\n            target.setPrivate(\"wrapperContainer\", wrapperTarget);\r\n            htmlElementWrapper.style.position = \"absolute\";\r\n            htmlElementWrapper.style.overflow = \"hidden\";\r\n            htmlElementWrapper.style.boxSizing = \"border-box\";\r\n            htmlElementWrapper.style.top = \"0px\";\r\n            htmlElementWrapper.style.left = \"0px\";\r\n            htmlElementWrapper.style.width = \"100%\";\r\n            htmlElementWrapper.style.height = \"100%\";\r\n            wrapperTarget.events.on(\"boundschanged\", () => {\r\n                this._positionHTMLElement(target);\r\n            });\r\n        }\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        if (needWrapper) {\r\n            htmlElementWrapper.append(htmlElement);\r\n            container.append(htmlElementWrapper);\r\n        }\r\n        else {\r\n            container.append(htmlElement);\r\n        }\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        if (htmlElementWrapper) {\r\n            const wrapperTarget = target.getPrivate(\"wrapperContainer\");\r\n            if (wrapperTarget) {\r\n                const bounds = wrapperTarget.globalBounds();\r\n                htmlElementWrapper.style.clipPath = \"rect(\" + bounds.top + \"px \" + bounds.right + \"px \" + bounds.bottom + \"px \" + bounds.left + \"px)\";\r\n            }\r\n        }\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\r\n                \"paddingTop\",\r\n                \"paddingRight\",\r\n                \"paddingBottom\",\r\n                \"paddingLeft\",\r\n                \"minWidth\",\r\n                \"minHeight\",\r\n                \"maxWidth\",\r\n                \"maxHeight\"\r\n            ];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            const strtingSettings = [\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\"\r\n            ];\r\n            $array.each(strtingSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    if (setting == \"fontSize\" && !$type.isString(value)) {\r\n                        htmlElement.style[setting] = value + \"px\";\r\n                    }\r\n                    else {\r\n                        htmlElement.style[setting] = value + \"\";\r\n                    }\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Init and reset scale / rotation\r\n            const scale = target.compositeScale() || 1;\r\n            const rotation = target.compositeRotation() || 0;\r\n            htmlElement.style.transform = \"\";\r\n            htmlElement.style.transformOrigin = \"\";\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            // const bounds = target.globalBounds();\r\n            // htmlElement.style.top = (bounds.top) + \"px\";\r\n            // htmlElement.style.left = (bounds.left) + \"px\";\r\n            let pos = {\r\n                x: target.x() + target.get(\"dx\", 0),\r\n                y: target.y() + target.get(\"dy\", 0)\r\n            };\r\n            if (target.parent) {\r\n                pos = target.parent.toGlobal(pos);\r\n            }\r\n            htmlElement.style.top = pos.y + \"px\";\r\n            htmlElement.style.left = pos.x + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                if (!width)\r\n                    w = bbox.width;\r\n                if (!height)\r\n                    h = bbox.height;\r\n                let lw = w / scale;\r\n                let lh = h / scale;\r\n                let cx = target.get(\"centerX\", 0);\r\n                let cy = target.get(\"centerY\", 0);\r\n                let ll = 0;\r\n                let lr = 0;\r\n                let lt = 0;\r\n                let lb = 0;\r\n                if (cx instanceof Percent) {\r\n                    ll = -cx.value * lw;\r\n                    lr = (1 - cx.value) * lw;\r\n                }\r\n                else {\r\n                    ll = -cx;\r\n                    lr = lw - cx;\r\n                }\r\n                if (cy instanceof Percent) {\r\n                    lt = -cy.value * lh;\r\n                    lb = (1 - cy.value) * lh;\r\n                }\r\n                else {\r\n                    lt = -cy;\r\n                    lb = lh - cy;\r\n                }\r\n                target._localBounds = { left: ll, right: lr, top: lt, bottom: lb };\r\n                let previousBounds = target._adjustedLocalBounds;\r\n                let newBounds = target._display.getAdjustedBounds(target._localBounds);\r\n                target._adjustedLocalBounds = newBounds;\r\n                // compare each value of the bounds\r\n                if (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\r\n                    target.markDirtyBounds();\r\n                }\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n            // Center position\r\n            const x = target.get(\"centerX\", 0);\r\n            const originX = isPercent(x) ? x.percent + \"%\" : x + \"px\";\r\n            const y = target.get(\"centerY\", 0);\r\n            const originY = isPercent(y) ? y.percent + \"%\" : y + \"px\";\r\n            if (x || y) {\r\n                htmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\r\n            }\r\n            // Deal with scale\r\n            if (scale != 1) {\r\n                htmlElement.style.transform += \"scale(\" + scale + \")\";\r\n            }\r\n            if (rotation != 0) {\r\n                htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\r\n            }\r\n            if (htmlElement.style.transform != \"\") {\r\n                htmlElement.style.transformOrigin = originX + \" \" + originY;\r\n                //htmlElement.style.transformOrigin = \"0% 0%\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElementWrapper) {\r\n            this._htmlElementContainer.removeChild(htmlElementWrapper);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"htmlElementWrapper\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        else if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import { Entity } from \"../../core/util/Entity\";\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nexport class Bullet extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because bullet will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                this._disposers.push(sprite);\r\n            }\r\n        }\r\n        if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n            if (this.series) {\r\n                this.series._positionBullet(this);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Bullet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Bullet\"\r\n});\r\nObject.defineProperty(Bullet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Bullet.className])\r\n});\r\n//# sourceMappingURL=Bullet.js.map","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let wSign = width / Math.abs(width);\r\n        let hSign = height / Math.abs(height);\r\n        let x = 0;\r\n        let y = 0;\r\n        const strokeWidth = this.get(\"strokeWidth\", 0);\r\n        if (this.get(\"containStroke\", false)) {\r\n            width -= wSign * strokeWidth;\r\n            height -= hSign * strokeWidth;\r\n            x += wSign * strokeWidth / 2;\r\n            y += hSign * strokeWidth / 2;\r\n        }\r\n        let w = width;\r\n        let h = height;\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(x + crtl * wSign, y);\r\n            display.lineTo(x + w - crtr * wSign, y);\r\n            if (crtr > 0) {\r\n                display.arcTo(x + w, y, x + w, y + crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(x + w, y + h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(x + w, y + h, x + w - crbr * wSign, y + h, crbr);\r\n            }\r\n            display.lineTo(x + crbl * wSign, y + h);\r\n            if (crbl > 0) {\r\n                display.arcTo(x, y + h, x, y + h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(x, y + crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(x, y, x + crtl * wSign, y, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n        this.setPrivate(\"trustBounds\", true);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    makeDataItem(data, dataContext) {\r\n        let dataItem = new DataItem(this, dataContext, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    pushDataItem(data, dataContext) {\r\n        const dataItem = this.makeDataItem(data, dataContext);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            const endDays = date.getUTCDate();\r\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            if (endDays > startDays) {\r\n                date.setUTCMonth(month + count, startDays);\r\n            }\r\n            else {\r\n                date.setUTCMonth(month + count);\r\n            }\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function roun(time, unit, count, root, firstTime) {\r\n    let firstDate;\r\n    if (firstTime != null) {\r\n        firstDate = new Date(firstTime);\r\n    }\r\n    return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                if (count > 1) {\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"week\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"week\") / count);\r\n                        let duration = getDuration(\"week\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let initialTime = date.getTime();\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        let offsetDif = tzoffset - timeZoneOffset;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        // fix to solve #101989\r\n        const newTime = date.getTime();\r\n        let hDuration = 3600000;\r\n        if (unit == \"hour\") {\r\n            hDuration = 3600000 * count;\r\n        }\r\n        if (newTime + hDuration <= initialTime) {\r\n            if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n                date = new Date(newTime + hDuration);\r\n            }\r\n        }\r\n        // end of fix\r\n        let newTimeZoneOffset = date.getTimezoneOffset();\r\n        let newTzoffset = timezone.offsetUTC(date);\r\n        let newDiff = newTzoffset - newTimeZoneOffset;\r\n        if (newDiff != offsetDif) {\r\n            date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n//import { Animations } from \"../../core/util/Animation\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseSeriesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\", \"customValue\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            bullet._index = index;\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _makeBulletReal(dataItem, bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            sprite._setDataItem(dataItem);\r\n            sprite.setRaw(\"position\", \"absolute\");\r\n            this.bulletsContainer.children.push(sprite);\r\n        }\r\n        bullet.series = this;\r\n        dataItem.bullets.push(bullet);\r\n    }\r\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */\r\n    addBullet(dataItem, bullet) {\r\n        if (!dataItem.bullets) {\r\n            dataItem.bullets = [];\r\n        }\r\n        if (bullet) {\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._baseSeriesDirty = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"name\")) {\r\n            this.updateLegendValue();\r\n        }\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this._baseSeriesDirty = true;\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                    if (startIndex != 0) {\r\n                        this._psi = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleRemoved() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        return index;\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\r\n            for (let i = adjustedStartIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            if (endIndex < this.dataItems.length - 1) {\r\n                const dataItem = this.dataItems[endIndex];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                }\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            delete previous[key];\r\n            for (let i = startIndex; i < adjustedStartIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (previous[key] == null) {\r\n                        previous[key] = value;\r\n                    }\r\n                    if (value != null) {\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState && rule.neutral) {\r\n                                defaultState.set(rule.key, rule.neutral);\r\n                            }\r\n                        }\r\n                        if (!rule.customFunction) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState) {\r\n                                defaultState.set(rule.key, propertyValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n            dataItem.bullets = undefined;\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","import { Series } from \"./Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nexport class Legend extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [this.itemContainers.template])))\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [this.markers.template])))\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [this.labels.template])))\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [this.valueLabels.template])))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [this.markerRectangles.template])))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n        this.fields.push(\"name\", \"stroke\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeItemContainer(dataItem) {\r\n        const itemContainer = this.children.push(this.itemContainers.make());\r\n        itemContainer._setDataItem(dataItem);\r\n        this.itemContainers.push(itemContainer);\r\n        itemContainer.states.create(\"disabled\", {});\r\n        return itemContainer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        this.markers.push(marker);\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel() {\r\n        const label = this.labels.make();\r\n        label.states.create(\"disabled\", {});\r\n        return label;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeValueLabel() {\r\n        const valueLabel = this.valueLabels.make();\r\n        valueLabel.states.create(\"disabled\", {});\r\n        return valueLabel;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarkerRectangle() {\r\n        const markerRectangle = this.markerRectangles.make();\r\n        markerRectangle.states.create(\"disabled\", {});\r\n        return markerRectangle;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const itemContainer = this.makeItemContainer(dataItem);\r\n        const nameField = this.get(\"nameField\");\r\n        const fillField = this.get(\"fillField\");\r\n        const strokeField = this.get(\"strokeField\");\r\n        if (itemContainer) {\r\n            const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n            const item = dataItem.dataContext;\r\n            if (item && item.set) {\r\n                item.set(\"legendDataItem\", dataItem);\r\n            }\r\n            itemContainer._setDataItem(dataItem);\r\n            dataItem.set(\"itemContainer\", itemContainer);\r\n            const marker = this.makeMarker();\r\n            if (marker) {\r\n                itemContainer.children.push(marker);\r\n                marker._setDataItem(dataItem);\r\n                dataItem.set(\"marker\", marker);\r\n                const useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                const markerRectangle = marker.children.push(this.makeMarkerRectangle());\r\n                let fill = dataItem.get(\"fill\");\r\n                let stroke = dataItem.get(\"stroke\");\r\n                dataItem.set(\"markerRectangle\", markerRectangle);\r\n                if (item && item.get) {\r\n                    fill = item.get(fillField, fill);\r\n                    stroke = item.get(strokeField, stroke);\r\n                }\r\n                if (!stroke) {\r\n                    stroke = fill;\r\n                }\r\n                if (!useDefaultMarker) {\r\n                    if (item && item.createLegendMarker) {\r\n                        item.createLegendMarker();\r\n                    }\r\n                }\r\n                else {\r\n                    if (item.on) {\r\n                        item.on(fillField, () => {\r\n                            markerRectangle.set(\"fill\", item.get(fillField));\r\n                        });\r\n                        item.on(strokeField, () => {\r\n                            markerRectangle.set(\"stroke\", item.get(strokeField));\r\n                        });\r\n                    }\r\n                }\r\n                markerRectangle.setAll({ fill, stroke });\r\n                // this solves if template field is set on slice\r\n                const component = item.component;\r\n                if (component && component.updateLegendMarker) {\r\n                    component.updateLegendMarker(item);\r\n                }\r\n            }\r\n            const label = this.makeLabel();\r\n            if (label) {\r\n                itemContainer.children.push(label);\r\n                label._setDataItem(dataItem);\r\n                dataItem.set(\"label\", label);\r\n                label.text.on(\"text\", () => {\r\n                    itemContainer.setRaw(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\r\n                    itemContainer.markDirtyAccessibility();\r\n                });\r\n                if (item && item.get) {\r\n                    dataItem.set(\"name\", item.get(nameField));\r\n                }\r\n                let name = dataItem.get(\"name\");\r\n                if (name) {\r\n                    label.set(\"text\", name);\r\n                }\r\n            }\r\n            const valueLabel = this.makeValueLabel();\r\n            if (valueLabel) {\r\n                itemContainer.children.push(valueLabel);\r\n                valueLabel._setDataItem(dataItem);\r\n                dataItem.set(\"valueLabel\", valueLabel);\r\n            }\r\n            if (item && item.show) {\r\n                item.on(\"visible\", (visible) => {\r\n                    itemContainer.set(\"disabled\", !visible);\r\n                });\r\n                if (!item.get(\"visible\")) {\r\n                    itemContainer.set(\"disabled\", true);\r\n                }\r\n                if (clickTarget != \"none\") {\r\n                    let clickContainer = itemContainer;\r\n                    if (clickTarget == \"marker\") {\r\n                        clickContainer = marker;\r\n                    }\r\n                    this._addClickEvents(clickContainer, item, dataItem);\r\n                }\r\n            }\r\n            // Sort children\r\n            this.children.values.sort((a, b) => {\r\n                const targetA = a.dataItem.dataContext;\r\n                const targetB = b.dataItem.dataContext;\r\n                if (targetA && targetB) {\r\n                    const indexA = this.data.indexOf(targetA);\r\n                    const indexB = this.data.indexOf(targetB);\r\n                    if (indexA > indexB) {\r\n                        return 1;\r\n                    }\r\n                    else if (indexA < indexB) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            if (item && item.updateLegendValue) {\r\n                item.updateLegendValue();\r\n            }\r\n        }\r\n    }\r\n    _addClickEvents(container, item, dataItem) {\r\n        container.set(\"cursorOverStyle\", \"pointer\");\r\n        container.events.on(\"pointerover\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.hoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"pointerout\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.unhoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"click\", () => {\r\n            const labelText = dataItem.get(\"label\").text._getText();\r\n            if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                item.show();\r\n                container.set(\"disabled\", false);\r\n                this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\r\n            }\r\n            else if (item.hide) {\r\n                item.hide();\r\n                container.set(\"disabled\", true);\r\n                this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const dataContext = dataItem.dataContext;\r\n        if (dataContext && dataContext.get) {\r\n            const di = dataContext.get(\"legendDataItem\");\r\n            if (di == dataItem) {\r\n                dataContext.set(\"legendDataItem\", undefined);\r\n            }\r\n        }\r\n        let itemContainer = dataItem.get(\"itemContainer\");\r\n        if (itemContainer) {\r\n            this.itemContainers.removeValue(itemContainer);\r\n            itemContainer.dispose();\r\n        }\r\n        let marker = dataItem.get(\"marker\");\r\n        if (marker) {\r\n            this.markers.removeValue(marker);\r\n            marker.dispose();\r\n        }\r\n        let markerRectangle = dataItem.get(\"markerRectangle\");\r\n        if (markerRectangle) {\r\n            this.markerRectangles.removeValue(markerRectangle);\r\n            markerRectangle.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let valueLabel = dataItem.get(\"valueLabel\");\r\n        if (valueLabel) {\r\n            this.valueLabels.removeValue(valueLabel);\r\n            valueLabel.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Legend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Legend\"\r\n});\r\nObject.defineProperty(Legend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Legend.className])\r\n});\r\n//# sourceMappingURL=Legend.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n//# sourceMappingURL=Line.js.map","import { Text } from \"./Text\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport class RadialText extends Text {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeRadialText(\"\", this.textStyle)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._display.clear();\r\n        if (this.isDirty(\"textType\")) {\r\n            this._display.textType = this.get(\"textType\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"radius\")) {\r\n            this._display.radius = this.get(\"radius\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"startAngle\")) {\r\n            this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"inside\")) {\r\n            this._display.inside = this.get(\"inside\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"orientation\")) {\r\n            this._display.orientation = this.get(\"orientation\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"kerning\")) {\r\n            this._display.kerning = this.get(\"kerning\");\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RadialText, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialText\"\r\n});\r\nObject.defineProperty(RadialText, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Text.classNames.concat([RadialText.className])\r\n});\r\n//# sourceMappingURL=RadialText.js.map","// import * as $object from \"../util/Object\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { Label } from \"./Label\";\r\nimport { RadialText } from \"./RadialText\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nexport class RadialLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_flipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._textKeys.push(\"textType\", \"kerning\");\r\n        super._afterNew();\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(RadialText.new(this._root, {}));\r\n    }\r\n    /**\r\n     * Returns base radius in pixels.\r\n     *\r\n     * @return Base radius\r\n     */\r\n    baseRadius() {\r\n        const radiusPrivate = this.getPrivate(\"radius\", 0);\r\n        const innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\r\n        const baseRadius = this.get(\"baseRadius\", 0);\r\n        return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\r\n    }\r\n    /**\r\n     * Returns radius adjustment in pixels.\r\n     *\r\n     * @return Radius\r\n     */\r\n    radius() {\r\n        const inside = this.get(\"inside\", false);\r\n        return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\r\n            const textType = this.get(\"textType\", \"adjusted\");\r\n            const inside = this.get(\"inside\", false);\r\n            const orientation = this.get(\"orientation\");\r\n            let labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\r\n            this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\r\n            this._text.set(\"inside\", inside);\r\n            const sin = $math.sin(labelAngle);\r\n            const cos = $math.cos(labelAngle);\r\n            let baseRadius = this.baseRadius();\r\n            let radius = this.radius();\r\n            this._display.angle = 0;\r\n            if (textType == \"circular\") {\r\n                this.setAll({\r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                    paddingLeft: 0,\r\n                    paddingRight: 0\r\n                });\r\n                this.setRaw(\"x\", undefined);\r\n                this.setRaw(\"y\", undefined);\r\n                // Circular labels are handled and positioned differently\r\n                this._text.set(\"orientation\", orientation);\r\n                this._text.set(\"radius\", radius);\r\n            }\r\n            else {\r\n                if (baseRadius == 0) {\r\n                    labelAngle = 0;\r\n                    radius = 0;\r\n                }\r\n                // Positioning of radial/regular labels are teh same\r\n                let x = radius * cos;\r\n                let y = radius * sin;\r\n                if (textType == \"radial\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                    if ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\r\n                        this._display.angle = labelAngle; // + 90;\r\n                        this._flipped = false;\r\n                    }\r\n                    else {\r\n                        this._display.angle = labelAngle + 180;\r\n                        this._flipped = true;\r\n                    }\r\n                    this._dirty.rotation = false;\r\n                }\r\n                else if (textType == \"adjusted\") {\r\n                    this.setRaw(\"centerX\", p50);\r\n                    this.setRaw(\"centerY\", p50);\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n                else if (textType == \"regular\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const textType = this.get(\"textType\", \"regular\");\r\n        const inside = this.get(\"inside\", false);\r\n        let dx = 0;\r\n        let dy = 0;\r\n        let labelAngle = this.get(\"labelAngle\", 0);\r\n        let bounds = this.localBounds();\r\n        let w = bounds.right - bounds.left;\r\n        let h = bounds.bottom - bounds.top;\r\n        if (textType == \"radial\") {\r\n            if (this._flipped) {\r\n                let centerX = this.get(\"centerX\");\r\n                if (centerX instanceof Percent) {\r\n                    w = w * (1 - centerX.value * 2);\r\n                }\r\n                dx = w * $math.cos(labelAngle);\r\n                dy = w * $math.sin(labelAngle);\r\n            }\r\n        }\r\n        else if (!inside && textType == \"adjusted\") {\r\n            dx = w / 2 * $math.cos(labelAngle);\r\n            dy = h / 2 * $math.sin(labelAngle);\r\n        }\r\n        this.setRaw(\"dx\", dx);\r\n        this.setRaw(\"dy\", dy);\r\n        super._updatePosition();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n}\r\nObject.defineProperty(RadialLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialLabel\"\r\n});\r\nObject.defineProperty(RadialLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([RadialLabel.className])\r\n});\r\n//# sourceMappingURL=RadialLabel.js.map","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import { Graphics } from \"./Graphics\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Slice extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"iy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_generator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if ($type.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if ($type.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        let radius = this.get(\"radius\", 0);\r\n        let innerRadius = this.get(\"innerRadius\", 0);\r\n        let dRadius = this.get(\"dRadius\", 0);\r\n        let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n        radius += dRadius;\r\n        innerRadius += dInnerRadius;\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (tooltipX instanceof Percent) {\r\n            x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\r\n        }\r\n        if (tooltipY instanceof Percent) {\r\n            y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\r\n        }\r\n        if (this.get(\"arc\") >= 360 && innerRadius == 0) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        return { x, y };\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            let startAngle = this.get(\"startAngle\", 0);\r\n            let arc = this.get(\"arc\", 0);\r\n            const generator = this._generator;\r\n            if (arc < 0) {\r\n                startAngle = startAngle + arc;\r\n                arc = arc * -1;\r\n            }\r\n            if (arc > 0.1) { // this fixes bug with full circle when arc is very small\r\n                generator.cornerRadius(this.get(\"cornerRadius\", 0));\r\n            }\r\n            generator.context(this._display);\r\n            let radius = this.get(\"radius\", 0);\r\n            let innerRadius = this.get(\"innerRadius\", 0);\r\n            let dRadius = this.get(\"dRadius\", 0);\r\n            let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n            radius += dRadius;\r\n            innerRadius += dInnerRadius;\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            generator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\r\n            let middleAngle = startAngle + arc / 2;\r\n            this.ix = $math.cos(middleAngle);\r\n            this.iy = $math.sin(middleAngle);\r\n            const shiftRadius = this.get(\"shiftRadius\", 0);\r\n            this.setRaw(\"dx\", this.ix * shiftRadius);\r\n            this.setRaw(\"dy\", this.iy * shiftRadius);\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Slice, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slice\"\r\n});\r\nObject.defineProperty(Slice, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Slice.className])\r\n});\r\n//# sourceMappingURL=Slice.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n                const patterns = this.get(\"patterns\");\r\n                if (patterns) {\r\n                    patterns.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else if (change.type === \"swap\") {\r\n                const a = change.a;\r\n                const b = change.b;\r\n                const aIndex = this.series.indexOf(a);\r\n                const bIndex = this.series.indexOf(b);\r\n                children.moveValue(a, bIndex);\r\n                children.moveValue(b, aIndex);\r\n                this.series.each((series) => {\r\n                    this._processSeries(series);\r\n                    series.markDirtyValues();\r\n                });\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        series._handleRemoved();\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n//# sourceMappingURL=Tick.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const language = this._root.language;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         */\r\n        r(\"XYChart\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            panX: false,\r\n            panY: false,\r\n            wheelStep: 0.25,\r\n            arrangeTooltips: true,\r\n            pinchZoomX: false,\r\n            pinchZoomY: false\r\n        });\r\n        r(\"XYSeries\").setAll({\r\n            legendLabelText: \"{name}\"\r\n        });\r\n        r(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: XYChartScrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingRight: 0,\r\n            colors: ColorSet.new(this._root, {\r\n                saturation: 0\r\n            })\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusBL: 0,\r\n            fillOpacity: 0,\r\n            focusable: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n            cornerRadiusBL: 40,\r\n            cornerRadiusBR: 40,\r\n            cornerRadiusTL: 40,\r\n            cornerRadiusTR: 40\r\n        });\r\n        r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true\r\n        });\r\n        r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true,\r\n            minGridDistance: 5\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5,\r\n            centerY: p100,\r\n            minPosition: 0.01,\r\n            maxPosition: 0.99,\r\n            fontSize: \"0.8em\"\r\n        });\r\n        r(\"AxisLabel\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"AxisLabel\", [\"x\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"minor\"]).setAll({\r\n            fontSize: \"0.6em\"\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Cursor\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYCursor\").setAll({\r\n            behavior: \"none\",\r\n            layer: 30,\r\n            exportable: false,\r\n            snapToSeriesBy: \"xy\",\r\n            moveThreshold: 1\r\n        });\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.15,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Axes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Axis\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            minZoomCount: 1,\r\n            maxZoomCount: Infinity,\r\n            maxZoomFactor: 1000,\r\n            maxDeviation: 0.1,\r\n            snapTooltip: true,\r\n            tooltipLocation: 0.5,\r\n            panX: true,\r\n            panY: true,\r\n            zoomX: true,\r\n            zoomY: true,\r\n            fixAxisSize: true\r\n        });\r\n        r(\"AxisLabel\").setAll({\r\n            location: 0.5,\r\n            multiLocation: 0,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            paddingTop: 3,\r\n            paddingBottom: 3,\r\n            paddingLeft: 5,\r\n            paddingRight: 5\r\n        });\r\n        // The following is deprecated following text measuring updates in 5.0.5\r\n        // r(\"AxisLabel\", [\"y\"]).setAll({\r\n        // \ttextAlign: \"right\"\r\n        // });\r\n        // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n        // \ttextAlign: \"left\"\r\n        // });\r\n        r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n            layer: 30\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n            crisp: true\r\n        });\r\n        {\r\n            const rule = r(\"AxisRenderer\");\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"AxisRendererX\").setAll({\r\n            minGridDistance: 120,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            width: p100\r\n        });\r\n        r(\"AxisRendererY\").setAll({\r\n            minGridDistance: 40,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            height: p100\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n        }\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        {\r\n            const rule = r(\"Grid\");\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.15,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"minor\"]);\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.07,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Grid\", [\"base\"]).setAll({\r\n            strokeOpacity: 0.3\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n            rule.setAll({\r\n                visible: false,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                fillOpacity: 0.05,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n            isMeasured: true\r\n        });\r\n        // hides all elements of series axis range\r\n        r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n            visible: false,\r\n            isMeasured: true\r\n        });\r\n        r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"AxisTick\");\r\n            rule.setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                strokeOpacity: 1,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                visible: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"CategoryAxis\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            fillRule: (dataItem, index) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        axisFill.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        axisFill.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const gridIntervals = [\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ];\r\n        const dateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_hour\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const periodChangeDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_day\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const tooltipDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n            \"second\": language.translate(\"_date_second_full\"),\r\n            \"minute\": language.translate(\"_date_minute_full\"),\r\n            \"hour\": language.translate(\"_date_hour_full\"),\r\n            \"day\": language.translate(\"_date_day_full\"),\r\n            \"week\": language.translate(\"_date_week_full\"),\r\n            \"month\": language.translate(\"_date_month_full\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        r(\"CategoryDateAxis\").setAll({\r\n            markUnitChange: true,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n        });\r\n        r(\"DateAxis\").setAll({\r\n            maxZoomFactor: null,\r\n            strictMinMax: true,\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            markUnitChange: true,\r\n            groupData: false,\r\n            groupCount: 500,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n            tooltipDateFormats: tooltipDateFormats,\r\n            groupIntervals: [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"year\", count: 1 }\r\n            ],\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const endValue = dataItem.get(\"endValue\");\r\n                    const intervalDuration = axis.intervalDuration();\r\n                    const baseInterval = axis.getPrivate(\"baseInterval\");\r\n                    const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                    let min = axis.getPrivate(\"min\", 0);\r\n                    min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value != null && endValue != null) {\r\n                        const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                        if (val == Math.round(val)) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"GaplessDateAxis\").setAll({\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const index = dataItem.get(\"index\");\r\n                    let visible = false;\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        visible = true;\r\n                    }\r\n                    axisFill.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        });\r\n        r(\"ValueAxis\").setAll({\r\n            baseValue: 0,\r\n            logarithmic: false,\r\n            strictMinMax: false,\r\n            autoZoom: true,\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const step = axis.getPrivate(\"step\");\r\n                    if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                        if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"DurationAxis\").setAll({\r\n            baseUnit: \"second\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYSeries\").setAll({\r\n            maskBullets: true,\r\n            stackToNegative: true,\r\n            locationX: 0.5,\r\n            locationY: 0.5,\r\n            snapTooltip: false,\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\",\r\n            seriesTooltipTarget: \"series\"\r\n        });\r\n        r(\"BaseColumnSeries\").setAll({\r\n            adjustBulletPosition: true\r\n        });\r\n        r(\"ColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(70),\r\n            height: percent(70),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"LineSeries\").setAll({\r\n            connect: true,\r\n            autoGapCount: 1.1,\r\n            stackToNegative: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n            position: \"absolute\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n            visible: false,\r\n            fillOpacity: 0,\r\n            position: \"absolute\",\r\n            strokeWidth: 0,\r\n            strokeOpacity: 0,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, h / 2);\r\n                    display.lineTo(w, h / 2);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"SmoothedXYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedXLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"Candlestick\").setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(50),\r\n            height: percent(50),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"OHLC\").setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"CandlestickSeries\").setAll({\r\n            lowValueXGrouped: \"low\",\r\n            lowValueYGrouped: \"low\",\r\n            highValueXGrouped: \"high\",\r\n            highValueYGrouped: \"high\",\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\"\r\n        });\r\n        // These rules can be used for regular columns, too\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // Hollow\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // AXIS RANGE GRIP\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                strokeWidth: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(2, 0.5);\r\n                    display.lineTo(2, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"rangegrip\"]).setAll({\r\n            draggable: true,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n            centerY: p100\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map",";\r\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.topPlotContainer.children.push(Button.new(this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this._disposers.push(this.xAxes);\r\n        this._disposers.push(this.yAxes);\r\n        const root = this._root;\r\n        let verticalLayout = this._root.verticalLayout;\r\n        const zoomOutButton = this.zoomOutButton;\r\n        zoomOutButton.events.on(\"click\", () => {\r\n            this.zoomOut();\r\n        });\r\n        zoomOutButton.hide(0);\r\n        zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n        this.chartContainer.set(\"layout\", verticalLayout);\r\n        const plotContainer = this.plotContainer;\r\n        plotContainer.children.push(this.seriesContainer);\r\n        this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n        this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n        plotContainer.children.push(this.topGridContainer);\r\n        plotContainer.children.push(this.bulletsContainer);\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        plotContainer.set(\"interactive\", true);\r\n        plotContainer.set(\"interactiveChildren\", false);\r\n        plotContainer.set(\"background\", Rectangle.new(root, {\r\n            themeTags: [\"plotbackground\", \"xy\", \"background\"]\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handlePlotDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handlePlotUp(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handlePlotMove(event);\r\n        }));\r\n        this._maskGrid();\r\n        this._setUpTouch();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.plotContainer._display.cancelTouch) {\r\n            this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    _maskGrid() {\r\n        this.gridContainer.set(\"maskContent\", true);\r\n        this.topGridContainer.set(\"maskContent\", true);\r\n    }\r\n    _removeSeries(series) {\r\n        series._unstack();\r\n        if (series._posXDp) {\r\n            series._posXDp.dispose();\r\n        }\r\n        if (series._posYDp) {\r\n            series._posYDp.dispose();\r\n        }\r\n        series.set(\"baseAxis\", undefined);\r\n        const xAxis = series.get(\"xAxis\");\r\n        if (xAxis) {\r\n            $array.remove(xAxis.series, series);\r\n            xAxis.markDirtyExtremes();\r\n        }\r\n        const yAxis = series.get(\"yAxis\");\r\n        if (yAxis) {\r\n            $array.remove(yAxis.series, series);\r\n            yAxis.markDirtyExtremes();\r\n        }\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (snapToSeries) {\r\n                $array.remove(snapToSeries, series);\r\n            }\r\n        }\r\n        super._removeSeries(series);\r\n    }\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    handleWheel(event) {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        const wheelEvent = event.originalEvent;\r\n        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n        // some page element is over the chart.\r\n        let prevent = false;\r\n        if ($utils.isLocalEvent(wheelEvent, this)) {\r\n            prevent = true;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const plotPoint = plotContainer.toLocal(event.point);\r\n        const wheelStep = this.get(\"wheelStep\", 0.2);\r\n        const shiftY = wheelEvent.deltaY / 100;\r\n        const shiftX = wheelEvent.deltaX / 100;\r\n        const wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n        const wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n        if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                    else {\r\n                        prevent = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start - delta;\r\n                    let newEnd = end - delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    if (newStart == start && newEnd == end) {\r\n                        prevent = false;\r\n                    }\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if (prevent) {\r\n            wheelEvent.preventDefault();\r\n        }\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n            this._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\r\n                const wheelEvent = event.originalEvent;\r\n                if ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\r\n                    this.handleWheel(event);\r\n                }\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _getWheelSign(axis) {\r\n        let sign = 1;\r\n        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n            sign = -1;\r\n        }\r\n        return sign;\r\n    }\r\n    _fixWheel(start, end) {\r\n        const diff = end - start;\r\n        if (start < 0) {\r\n            start = 0;\r\n            end = start + diff;\r\n        }\r\n        if (end > 1) {\r\n            end = 1;\r\n            start = end - diff;\r\n        }\r\n        return [start, end];\r\n    }\r\n    _handlePlotDown(event) {\r\n        const originalEvent = event.originalEvent;\r\n        if (originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const plotContainer = this.plotContainer;\r\n        let local = plotContainer.toLocal(event.point);\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const pointerId = originalEvent.pointerId;\r\n            if (pointerId) {\r\n                if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                    const xAxis = this.xAxes.getIndex(0);\r\n                    const yAxis = this.yAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        this._downStartX = xAxis.get(\"start\", 0);\r\n                        this._downEndX = xAxis.get(\"end\", 1);\r\n                    }\r\n                    if (yAxis) {\r\n                        this._downStartY = yAxis.get(\"start\", 0);\r\n                        this._downEndY = yAxis.get(\"end\", 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.get(\"panX\") || this.get(\"panY\")) {\r\n            if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                //this._downPoint = local;\r\n                this._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    this.xAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                if (panY) {\r\n                    this.yAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                const eventType = \"panstarted\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelAnimation(animation) {\r\n        if (animation) {\r\n            animation.events.on(\"stopped\", () => {\r\n                this._dispatchWheelAnimation();\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchWheelAnimation();\r\n        }\r\n    }\r\n    _dispatchWheelAnimation() {\r\n        const eventType = \"wheelended\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    _handlePlotUp(event) {\r\n        const downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                if (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\r\n                    const eventType = \"pancancelled\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                    }\r\n                }\r\n                const eventType = \"panended\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n        // TODO: handle multitouch\r\n        this._downPoint = undefined;\r\n        this.xAxes.each((xAxis) => {\r\n            xAxis._isPanning = false;\r\n        });\r\n        this.yAxes.each((yAxis) => {\r\n            yAxis._isPanning = false;\r\n        });\r\n    }\r\n    _handlePlotMove(event) {\r\n        const plotContainer = this.plotContainer;\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event.originalEvent;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n            let local = plotContainer.toLocal(event.point);\r\n            const panX = this.get(\"panX\");\r\n            const panY = this.get(\"panY\");\r\n            if (panX) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.disableType(\"rangechanged\");\r\n                }\r\n                this.xAxes.each((axis) => {\r\n                    if (axis.get(\"panX\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaX *= -1;\r\n                        }\r\n                        let start = panStart + deltaX;\r\n                        let end = panEnd + deltaX;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n            if (panY) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.disableType(\"rangechanged\");\r\n                }\r\n                this.yAxes.each((axis) => {\r\n                    if (axis.get(\"panY\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaY *= -1;\r\n                        }\r\n                        let start = panStart - deltaY;\r\n                        let end = panEnd - deltaY;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        const plotContainer = this.plotContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(plotContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const w = plotContainer.width();\r\n            const h = plotContainer.height();\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                movePoint0 = plotContainer.toLocal(movePoint0);\r\n                movePoint1 = plotContainer.toLocal(movePoint1);\r\n                downPoint0 = plotContainer.toLocal(downPoint0);\r\n                downPoint1 = plotContainer.toLocal(downPoint1);\r\n                if (this.get(\"pinchZoomX\")) {\r\n                    const downStartX = this._downStartX;\r\n                    const downEndX = this._downEndX;\r\n                    if (downStartX != null && downEndX != null) {\r\n                        if (downPoint0.x > downPoint1.x) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                        let downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                        let movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                        let movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartX * d + downPos0 - movePos0 * d;\r\n                        let e = downEndX * d + downPos1 - movePos1 * d;\r\n                        this.xAxes.each((xAxis) => {\r\n                            let sa = xAxis.fixPosition(s);\r\n                            let ea = xAxis.fixPosition(e);\r\n                            xAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n                if (this.get(\"pinchZoomY\")) {\r\n                    const downStartY = this._downStartY;\r\n                    const downEndY = this._downEndY;\r\n                    if (downStartY != null && downEndY != null) {\r\n                        if (downPoint0.y < downPoint1.y) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                        let downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                        let movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                        let movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartY * d + downPos0 - movePos0 * d;\r\n                        let e = downEndY * d + downPos1 - movePos1 * d;\r\n                        this.yAxes.each((yAxis) => {\r\n                            let sa = yAxis.fixPosition(s);\r\n                            let ea = yAxis.fixPosition(e);\r\n                            yAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleCursorPosition() {\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const cursorPoint = cursor.getPrivate(\"point\");\r\n            let snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (cursor._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            if (snapToSeries && cursorPoint) {\r\n                const snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\r\n                const dataItems = [];\r\n                $array.each(snapToSeries, (series) => {\r\n                    if (!series.isHidden() && !series.isHiding()) {\r\n                        if (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\r\n                            const startIndex = series.startIndex();\r\n                            const endIndex = series.endIndex();\r\n                            for (let i = startIndex; i < endIndex; i++) {\r\n                                const dataItem = series.dataItems[i];\r\n                                if (dataItem && !dataItem.isHidden()) {\r\n                                    dataItems.push(dataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                            if (tooltipDataItem) {\r\n                                dataItems.push(tooltipDataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                let minDistance = Infinity;\r\n                let closestItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    const point = dataItem.get(\"point\");\r\n                    if (point) {\r\n                        let distance = 0;\r\n                        if (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\r\n                            distance = Math.abs(cursorPoint.x - point.x);\r\n                        }\r\n                        else if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\r\n                            distance = Math.abs(cursorPoint.y - point.y);\r\n                        }\r\n                        else {\r\n                            distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closestItem = dataItem;\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(snapToSeries, (series) => {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                });\r\n                if (closestItem) {\r\n                    let series = closestItem.component;\r\n                    series.showDataItemTooltip(closestItem);\r\n                    series.setRaw(\"tooltipDataItem\", closestItem);\r\n                    const point = closestItem.get(\"point\");\r\n                    if (point) {\r\n                        // removing x and y to solve #72225\r\n                        cursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateCursor() {\r\n        let cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.updateCursor();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.plotContainer.children.push(cursor);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this.series.each((series) => {\r\n            this._colorize(series);\r\n        });\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this.isDirty(\"cursor\")) {\r\n            const previous = this._prevSettings.cursor;\r\n            const cursor = this.get(\"cursor\");\r\n            if (cursor !== previous) {\r\n                this._disposeProperty(\"cursor\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (cursor) {\r\n                    cursor._setChart(this);\r\n                    this._addCursor(cursor);\r\n                    this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\r\n                        this._handleCursorSelectEnd();\r\n                    }));\r\n                }\r\n                //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                this._prevSettings.cursor = cursor;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarX\")) {\r\n            const previous = this._prevSettings.scrollbarX;\r\n            const scrollbarX = this.get(\"scrollbarX\");\r\n            if (scrollbarX !== previous) {\r\n                this._disposeProperty(\"scrollbarX\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarX) {\r\n                    if (!scrollbarX.parent) {\r\n                        this.topAxesContainer.children.push(scrollbarX);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\r\n                        this.xAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarX.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.xAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarX = scrollbarX;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarY\")) {\r\n            const previous = this._prevSettings.scrollbarY;\r\n            const scrollbarY = this.get(\"scrollbarY\");\r\n            if (scrollbarY !== previous) {\r\n                this._disposeProperty(\"scrollbarY\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarY) {\r\n                    if (!scrollbarY.parent) {\r\n                        this.rightAxesContainer.children.push(scrollbarY);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\r\n                        this.yAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarY.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.yAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarY = scrollbarY;\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        const xAxis = series.get(\"xAxis\");\r\n        const yAxis = series.get(\"yAxis\");\r\n        $array.move(xAxis.series, series);\r\n        $array.move(yAxis.series, series);\r\n        series._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        series._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        if (!series.get(\"baseAxis\")) {\r\n            if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                series.set(\"baseAxis\", yAxis);\r\n            }\r\n            else {\r\n                series.set(\"baseAxis\", xAxis);\r\n            }\r\n        }\r\n        if (series.get(\"stacked\")) {\r\n            series._markDirtyKey(\"stacked\");\r\n            $array.each(series.dataItems, (dataItem) => {\r\n                dataItem.set(\"stackToItemY\", undefined);\r\n                dataItem.set(\"stackToItemX\", undefined);\r\n            });\r\n        }\r\n        series._markDirtyAxes();\r\n        yAxis.markDirtyExtremes();\r\n        xAxis.markDirtyExtremes();\r\n        xAxis._seriesAdded = true;\r\n        yAxis._seriesAdded = true;\r\n        this._colorize(series);\r\n    }\r\n    _colorize(series) {\r\n        const colorSet = this.get(\"colors\");\r\n        if (colorSet) {\r\n            if (series.get(\"fill\") == null) {\r\n                const color = colorSet.next();\r\n                series._setSoft(\"stroke\", color);\r\n                series._setSoft(\"fill\", color);\r\n            }\r\n        }\r\n        const patternSet = this.get(\"patterns\");\r\n        if (patternSet) {\r\n            if (series.get(\"fillPattern\") == null) {\r\n                const pattern = patternSet.next();\r\n                series._setSoft(\"fillPattern\", pattern);\r\n            }\r\n        }\r\n    }\r\n    _handleCursorSelectEnd() {\r\n        const cursor = this.get(\"cursor\");\r\n        const behavior = cursor.get(\"behavior\");\r\n        const downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n        const downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n        const positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\r\n        const positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\r\n        this.xAxes.each((axis) => {\r\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionX);\r\n                let position1 = axis.toAxisPosition(positionX);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionY);\r\n                let position1 = axis.toAxisPosition(positionY);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n    }\r\n    _handleScrollbar(axes, start, end, priority) {\r\n        axes.each((axis) => {\r\n            let axisStart = axis.fixPosition(start);\r\n            let axisEnd = axis.fixPosition(end);\r\n            let zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n            const updateScrollbar = \"updateScrollbar\";\r\n            axis.setPrivateRaw(updateScrollbar, false);\r\n            if (zoomAnimation) {\r\n                zoomAnimation.events.on(\"stopped\", () => {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                });\r\n            }\r\n            else {\r\n                axis.setPrivateRaw(updateScrollbar, true);\r\n            }\r\n        });\r\n    }\r\n    _processAxis(axes, container) {\r\n        return axes.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axis) => {\r\n                    this._removeAxis(axis);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                container.children.push(change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                container.children.setIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                container.children.insertIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxis(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                container.children.moveValue(change.value, change.newIndex);\r\n                change.value.processChart(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _removeAxis(axis) {\r\n        if (!axis.isDisposed()) {\r\n            const axisParent = axis.parent;\r\n            if (axisParent) {\r\n                axisParent.children.removeValue(axis);\r\n            }\r\n            const gridContainer = axis.gridContainer;\r\n            const gridParent = gridContainer.parent;\r\n            if (gridParent) {\r\n                gridParent.children.removeValue(gridContainer);\r\n            }\r\n            const topGridContainer = axis.topGridContainer;\r\n            const topGridParent = topGridContainer.parent;\r\n            if (topGridParent) {\r\n                topGridParent.children.removeValue(topGridContainer);\r\n            }\r\n        }\r\n    }\r\n    _updateChartLayout() {\r\n        const left = this.leftAxesContainer.width();\r\n        const right = this.rightAxesContainer.width();\r\n        const bottomAxesContainer = this.bottomAxesContainer;\r\n        bottomAxesContainer.set(\"paddingLeft\", left);\r\n        bottomAxesContainer.set(\"paddingRight\", right);\r\n        const topAxesContainer = this.topAxesContainer;\r\n        topAxesContainer.set(\"paddingLeft\", left);\r\n        topAxesContainer.set(\"paddingRight\", right);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(axis) {\r\n        var cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            this.addDisposer(axis.on(\"start\", () => {\r\n                this._updateCursor();\r\n            }));\r\n            this.addDisposer(axis.on(\"end\", () => {\r\n                this._updateCursor();\r\n            }));\r\n        }\r\n    }\r\n    _handleAxisSelection(axis, force) {\r\n        let start = axis.fixPosition(axis.get(\"start\", 0));\r\n        let end = axis.fixPosition(axis.get(\"end\", 1));\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n        }\r\n        if (this.xAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarX.setRaw(\"start\", start);\r\n                    scrollbarX.setRaw(\"end\", end);\r\n                    scrollbarX.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        else if (this.yAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarY.setRaw(\"start\", start);\r\n                    scrollbarY.setRaw(\"end\", end);\r\n                    scrollbarY.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _handleZoomOut() {\r\n        let zoomOutButton = this.zoomOutButton;\r\n        if (zoomOutButton && zoomOutButton.parent) {\r\n            let visible = false;\r\n            this.xAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            this.yAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            if (visible) {\r\n                if (zoomOutButton.isHidden()) {\r\n                    zoomOutButton.show();\r\n                }\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    inPlot(point) {\r\n        const plotContainer = this.plotContainer;\r\n        const otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n        const global = plotContainer.toGlobal(point);\r\n        if (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\r\n            return true;\r\n        }\r\n        if (otherCharts) {\r\n            for (let i = otherCharts.length - 1; i >= 0; i--) {\r\n                const chart = otherCharts[i];\r\n                if (chart != this) {\r\n                    const chartPlotContainer = chart.plotContainer;\r\n                    const documentPoint = this._root.rootPointToDocument(global);\r\n                    const chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                    const local = chartPlotContainer.toLocal(chartRoot);\r\n                    if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    arrangeTooltips() {\r\n        const plotContainer = this.plotContainer;\r\n        const w = plotContainer.width();\r\n        const h = plotContainer.height();\r\n        let hh = this.height();\r\n        const bounds = this._root.tooltipContainer.get(\"layerMargin\");\r\n        if (bounds) {\r\n            if (bounds.bottom > hh) {\r\n                hh = bounds.bottom;\r\n            }\r\n        }\r\n        let plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n        let plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n        const tooltips = [];\r\n        let sum = 0;\r\n        let minDistance = Infinity;\r\n        let movePoint = this._movePoint;\r\n        let maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n        let maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n        let closest;\r\n        let closestPoint;\r\n        if ($type.isNumber(maxTooltipDistance)) {\r\n            this.series.each((series) => {\r\n                if (!series.isHidden()) {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            let distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                            if (maxTooltipDistanceBy == \"x\") {\r\n                                distance = Math.abs(movePoint.x - point.x);\r\n                            }\r\n                            else if (maxTooltipDistanceBy == \"y\") {\r\n                                distance = Math.abs(movePoint.y - point.y);\r\n                            }\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closest = series;\r\n                                closestPoint = point;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const tooltipSeries = [];\r\n        this.series.each((series) => {\r\n            const tooltip = series.get(\"tooltip\");\r\n            if (tooltip && !tooltip.get(\"forceHidden\")) {\r\n                let hidden = false;\r\n                let point = tooltip.get(\"pointTo\");\r\n                if (point) {\r\n                    if (maxTooltipDistance >= 0) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point && closestPoint) {\r\n                            if (series != closest) {\r\n                                let distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\r\n                                if (maxTooltipDistanceBy == \"x\") {\r\n                                    distance = Math.abs(closestPoint.x - point.x);\r\n                                }\r\n                                else if (maxTooltipDistanceBy == \"y\") {\r\n                                    distance = Math.abs(closestPoint.y - point.y);\r\n                                }\r\n                                if (distance > maxTooltipDistance) {\r\n                                    hidden = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (maxTooltipDistance == -1) {\r\n                        if (series != closest) {\r\n                            hidden = true;\r\n                        }\r\n                    }\r\n                    if (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                        hidden = true;\r\n                    }\r\n                    else {\r\n                        if (!hidden) {\r\n                            sum += point.y;\r\n                        }\r\n                    }\r\n                    if (hidden || series.isHidden() || series.isHiding()) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show();\r\n                        tooltips.push(tooltip);\r\n                        tooltipSeries.push(series);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n        if (this.get(\"arrangeTooltips\")) {\r\n            let totalTooltipH = 0;\r\n            let tooltipCount = 0;\r\n            const tooltipContainer = this._root.tooltipContainer;\r\n            const count = tooltips.length;\r\n            const average = sum / count;\r\n            if (average > h / 2 + plotT.y) {\r\n                tooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y));\r\n                let prevY = plotB.y;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    tooltipCount++;\r\n                    totalTooltipH += height;\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    prevY = Math.min(prevY - height, tooltip._fy - height);\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                });\r\n                if (prevY < 0) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = prevY;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        tooltipCount++;\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - prevY;\r\n                            let bottom = bounds.bottom - prevY;\r\n                            if (top < prevBottom) {\r\n                                top = prevBottom;\r\n                                bottom = top + tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                tooltips.reverse();\r\n                tooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y));\r\n                let prevY = 0;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    tooltipCount++;\r\n                    let height = tooltip.height();\r\n                    totalTooltipH += height;\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) });\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                    prevY = Math.max(prevY + height, tooltip._fy + height);\r\n                });\r\n                if (prevY > hh) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = hh;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        tooltipCount++;\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - (hh - prevY);\r\n                            let bottom = bounds.bottom - (hh - prevY);\r\n                            if (bottom > prevBottom) {\r\n                                bottom = prevBottom;\r\n                                top = bottom - tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (totalTooltipH == 0 && tooltipCount > 0) {\r\n                this._disposers.push(this.root.events.once(\"frameended\", () => {\r\n                    this.arrangeTooltips();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.plotContainer.toLocal(point);\r\n    }\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    zoomOut() {\r\n        this.xAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        // Explicitly disposing cursor to avoid memory leak of cursor adding\r\n        // keyboard events after parent chart has been disposed\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(XYChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYChart\"\r\n});\r\nObject.defineProperty(XYChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([XYChart.className])\r\n});\r\n//# sourceMappingURL=XYChart.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nexport class Grid extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Grid, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Grid\"\r\n});\r\nObject.defineProperty(Grid, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Grid.className])\r\n});\r\n//# sourceMappingURL=Grid.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nexport class XYCursor extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_alwaysShow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Graphics.new(this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n        super._afterNew();\r\n        this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n        this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n        this._drawLines();\r\n        this.setPrivateRaw(\"visible\", false);\r\n        this._disposers.push(this.setTimeout(() => {\r\n            this.setPrivate(\"visible\", true);\r\n        }, 500));\r\n        this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\r\n            this._handleXLine();\r\n        }));\r\n        this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\r\n            this._handleYLine();\r\n        }));\r\n        this._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\r\n        this._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                this._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\r\n            }));\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n        }\r\n    }\r\n    _handleXLine() {\r\n        let x = this.lineX.x();\r\n        let visible = true;\r\n        if (x < 0 || x > this.width()) {\r\n            visible = false;\r\n        }\r\n        this.lineX.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleYLine() {\r\n        let y = this.lineY.y();\r\n        let visible = true;\r\n        if (y < 0 || y > this.height()) {\r\n            visible = false;\r\n        }\r\n        this.lineY.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleLineMove(key, ctrlKey) {\r\n        let dir = \"\";\r\n        const chart = this.chart;\r\n        let axis;\r\n        if (chart && chart.xAxes.length) {\r\n            if (this._root.focused(this.lineX)) {\r\n                dir = \"positionX\";\r\n                axis = chart.xAxes.getIndex(0);\r\n            }\r\n            else if (this._root.focused(this.lineY)) {\r\n                axis = chart.yAxes.getIndex(0);\r\n                dir = \"positionY\";\r\n            }\r\n            let m = 1;\r\n            if (ctrlKey) {\r\n                m = 5;\r\n            }\r\n            if (axis) {\r\n                let inversed = axis.get(\"renderer\").get(\"inversed\", false);\r\n                let step;\r\n                if (key == \"ArrowRight\" || key == \"ArrowDown\") {\r\n                    step = 1;\r\n                }\r\n                else if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\r\n                    step = -1;\r\n                }\r\n                else if (key == \"Tab\") {\r\n                    step = 0;\r\n                }\r\n                if (step != null) {\r\n                    if (inversed) {\r\n                        step *= -1;\r\n                    }\r\n                    this.set(dir, axis.nextPosition(step * m));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleLineFocus() {\r\n        this._alwaysShow = this.get(\"alwaysShow\", false);\r\n        this.setAll({\r\n            positionX: this.getPrivate(\"positionX\", 0),\r\n            positionY: this.getPrivate(\"positionY\", 0),\r\n            alwaysShow: true\r\n        });\r\n        this._handleLineMove(\"Tab\");\r\n    }\r\n    _handleLineBlur() {\r\n        if (this.lineX.isFocus() || this.lineY.isFocus()) {\r\n            this.setAll({\r\n                positionX: undefined,\r\n                positionY: undefined,\r\n                alwaysShow: this._alwaysShow\r\n            });\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"xAxis\")) {\r\n            this._tooltipX = false;\r\n            const xAxis = this.get(\"xAxis\");\r\n            if (xAxis) {\r\n                const tooltip = xAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipX = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateXLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"yAxis\")) {\r\n            this._tooltipY = false;\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis) {\r\n                const tooltip = yAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipY = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateYLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleSyncWith() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const syncWith = this.get(\"syncWith\");\r\n            const otherCharts = [];\r\n            if (syncWith) {\r\n                $array.each(syncWith, (cursor) => {\r\n                    const chart = cursor.chart;\r\n                    if (chart) {\r\n                        otherCharts.push(chart);\r\n                    }\r\n                });\r\n            }\r\n            chart._otherCharts = otherCharts;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._handleSyncWith();\r\n        if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n            const positionX = this.get(\"positionX\");\r\n            const positionY = this.get(\"positionY\");\r\n            if (positionX == null && positionY == null) {\r\n                this.hide(0);\r\n            }\r\n            else {\r\n                this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                this.handleMove();\r\n            }\r\n        }\r\n    }\r\n    _updateXLine(tooltip) {\r\n        let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\r\n        if (this._toX != x) {\r\n            this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toX = x;\r\n        }\r\n    }\r\n    _updateYLine(tooltip) {\r\n        let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\r\n        if (this._toY != y) {\r\n            this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toY = y;\r\n        }\r\n    }\r\n    _drawLines() {\r\n        this.lineX.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, this.height());\r\n        });\r\n        this.lineY.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(this.width(), 0);\r\n        });\r\n    }\r\n    updateCursor() {\r\n        if (this.get(\"alwaysShow\")) {\r\n            this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n        }\r\n        this.handleMove();\r\n    }\r\n    _setChart(chart) {\r\n        this.chart = chart;\r\n        this._handleSyncWith();\r\n        const plotContainer = chart.plotContainer;\r\n        this.events.on(\"boundschanged\", () => {\r\n            this._disposers.push(this.setTimeout(() => {\r\n                this.updateCursor();\r\n            }, 50));\r\n        });\r\n        //this._display.interactive = true;\r\n        if ($utils.supports(\"touchevents\")) {\r\n            this._disposers.push(plotContainer.events.on(\"click\", (event) => {\r\n                if ($utils.isTouchEvent(event.originalEvent)) {\r\n                    this._handleMove(event);\r\n                }\r\n            }));\r\n            this._setUpTouch();\r\n        }\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleCursorDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleCursorUp(event);\r\n            if (!event.native && !this.isHidden()) {\r\n                this._handleMove(event);\r\n            }\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            if (!this.get(\"syncWith\")) {\r\n                if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\r\n                    // Ignore mouse movement if it originates on outside element and\r\n                    // we're not dragging.\r\n                    return;\r\n                }\r\n            }\r\n            this._handleMove(event);\r\n            if (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\r\n                this._handleLineBlur();\r\n                this._lastPoint2 = event.point;\r\n            }\r\n        }));\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this.selection);\r\n        }\r\n    }\r\n    _inPlot(point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.inPlot(point);\r\n        }\r\n        return false;\r\n    }\r\n    _handleCursorDown(event) {\r\n        if (event.originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const rootPoint = event.point;\r\n        let local = this._display.toLocal(rootPoint);\r\n        const chart = this.chart;\r\n        this.selection.set(\"draw\", () => { });\r\n        if (chart && this._inPlot(local)) {\r\n            this._downPoint = local;\r\n            if (this.get(\"behavior\") != \"none\") {\r\n                this.selection.show();\r\n                const type = \"selectstarted\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n            let positionX = this._getPosition(local).x;\r\n            let positionY = this._getPosition(local).y;\r\n            this.setPrivate(\"downPositionX\", positionX);\r\n            this.setPrivate(\"downPositionY\", positionY);\r\n        }\r\n    }\r\n    _handleCursorUp(event) {\r\n        // TODO: handle multitouch\r\n        if (this._downPoint) {\r\n            const behavior = this.get(\"behavior\", \"none\");\r\n            if (behavior != \"none\") {\r\n                if (behavior.charAt(0) === \"z\") {\r\n                    this.selection.hide();\r\n                }\r\n                const rootPoint = event.point;\r\n                let local = this._display.toLocal(rootPoint);\r\n                const downPoint = this._downPoint;\r\n                const moveThreshold = this.get(\"moveThreshold\", 1);\r\n                if (local && downPoint) {\r\n                    let dispatch = false;\r\n                    if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (dispatch) {\r\n                        const type = \"selectended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                    else {\r\n                        const type = \"selectcancelled\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._downPoint = undefined;\r\n    }\r\n    _handleMove(event) {\r\n        if (this.getPrivate(\"visible\")) {\r\n            const chart = this.chart;\r\n            if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                this.set(\"forceHidden\", true);\r\n                return;\r\n            }\r\n            else {\r\n                this.set(\"forceHidden\", false);\r\n            }\r\n            // TODO: handle multitouch\r\n            const rootPoint = event.point;\r\n            const lastPoint = this._lastPoint;\r\n            if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                return;\r\n            }\r\n            this._lastPoint = rootPoint;\r\n            this.setPrivate(\"lastPoint\", rootPoint);\r\n            this.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\r\n        }\r\n    }\r\n    _getPosition(point) {\r\n        return { x: point.x / this.width(), y: point.y / this.height() };\r\n    }\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    handleMove(point, skipEvent, originalEvent) {\r\n        if (!point) {\r\n            point = this._movePoint;\r\n        }\r\n        const alwaysShow = this.get(\"alwaysShow\");\r\n        if (!point) {\r\n            this.hide(0);\r\n            return;\r\n        }\r\n        this._movePoint = point;\r\n        let local = this._display.toLocal(point);\r\n        let chart = this.chart;\r\n        if (chart && (this._inPlot(local) || this._downPoint)) {\r\n            chart._movePoint = point;\r\n            if (this.isHidden()) {\r\n                this.show();\r\n                const behavior = this.get(\"behavior\", \"\");\r\n                if (behavior.charAt(0) == \"z\") {\r\n                    this.selection.set(\"draw\", () => { });\r\n                }\r\n            }\r\n            let x = local.x;\r\n            let y = local.y;\r\n            let xyPos = this._getPosition(local);\r\n            this.setPrivate(\"point\", local);\r\n            let snapToSeries = this.get(\"snapToSeries\");\r\n            if (this._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            let userPositionX = this.get(\"positionX\");\r\n            let positionX = xyPos.x;\r\n            if ($type.isNumber(userPositionX)) {\r\n                positionX = userPositionX;\r\n            }\r\n            let userPositionY = this.get(\"positionY\");\r\n            let positionY = xyPos.y;\r\n            if ($type.isNumber(userPositionY)) {\r\n                positionY = userPositionY;\r\n            }\r\n            this.setPrivate(\"positionX\", positionX);\r\n            this.setPrivate(\"positionY\", positionY);\r\n            const xy = this._getPoint(positionX, positionY);\r\n            x = xy.x;\r\n            y = xy.y;\r\n            chart.xAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionX, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            chart.yAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionY, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            if (!skipEvent) {\r\n                chart._handleCursorPosition();\r\n                const type = \"cursormoved\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\r\n                }\r\n            }\r\n            this._updateLines(x, y);\r\n            chart.arrangeTooltips();\r\n        }\r\n        else if (!this._downPoint) {\r\n            if (!alwaysShow) {\r\n                this.hide(0);\r\n                const type = \"cursorhidden\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n        }\r\n        if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n            this._updateSelection(local);\r\n        }\r\n    }\r\n    _getPoint(positionX, positionY) {\r\n        return { x: this.width() * positionX, y: this.height() * positionY };\r\n    }\r\n    _updateLines(x, y) {\r\n        if (!this._tooltipX) {\r\n            this.lineX.set(\"x\", x);\r\n        }\r\n        if (!this._tooltipY) {\r\n            this.lineY.set(\"y\", y);\r\n        }\r\n        this._drawLines();\r\n    }\r\n    _updateSelection(point) {\r\n        const selection = this.selection;\r\n        const behavior = this.get(\"behavior\");\r\n        const w = this.width();\r\n        const h = this.height();\r\n        if (point.x < 0) {\r\n            point.x = 0;\r\n        }\r\n        if (point.x > w) {\r\n            point.x = w;\r\n        }\r\n        if (point.y < 0) {\r\n            point.y = 0;\r\n        }\r\n        if (point.y > h) {\r\n            point.y = h;\r\n        }\r\n        selection.set(\"draw\", (display) => {\r\n            const downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                    display.moveTo(downPoint.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, point.y);\r\n                    display.lineTo(point.x, point.y);\r\n                    display.lineTo(point.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, downPoint.y);\r\n                }\r\n                else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                    display.moveTo(downPoint.x, 0);\r\n                    display.lineTo(downPoint.x, h);\r\n                    display.lineTo(point.x, h);\r\n                    display.lineTo(point.x, 0);\r\n                    display.lineTo(downPoint.x, 0);\r\n                }\r\n                else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                    display.moveTo(0, downPoint.y);\r\n                    display.lineTo(w, downPoint.y);\r\n                    display.lineTo(w, point.y);\r\n                    display.lineTo(0, point.y);\r\n                    display.lineTo(0, downPoint.y);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _onHide() {\r\n        if (this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.series.each((series) => {\r\n                    series.handleCursorHide();\r\n                });\r\n            }\r\n        }\r\n        super._onHide();\r\n    }\r\n    _onShow() {\r\n        if (!this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n            }\r\n        }\r\n        super._onShow();\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this.selection.dispose();\r\n    }\r\n}\r\nObject.defineProperty(XYCursor, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYCursor\"\r\n});\r\nObject.defineProperty(XYCursor, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([XYCursor.className])\r\n});\r\n//# sourceMappingURL=XYCursor.js.map","import { __awaiter } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nexport class XYSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(this, undefined, {})\r\n        });\r\n        Object.defineProperty(this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posXDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posYDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n        this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n        this._setRawDefault(\"vcx\", 1);\r\n        this._setRawDefault(\"vcy\", 1);\r\n        // this can't go to themes, as data might be parsed before theme\r\n        this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n        this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n        this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n        this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n        this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n        this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n        this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n        this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n        this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n        this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n        this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n        this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n        super._afterNew();\r\n        this.set(\"maskContent\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axisRange) => {\r\n                    this._removeAxisRange(axisRange);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxisRange(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n        this.onPrivate(\"startIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this.onPrivate(\"endIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this._makeFieldNames();\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        const container = Container.new(this._root, {});\r\n        axisRange.container = container;\r\n        this.children.push(container);\r\n        axisRange.series = this;\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        axisDataItem.setRaw(\"isRange\", true);\r\n        const axis = axisDataItem.component;\r\n        if (axis) {\r\n            axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n            const bullet = axisDataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n            const axisFill = axisDataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                container.set(\"mask\", axisFill);\r\n            }\r\n            axis._seriesAxisRanges.push(axisDataItem);\r\n        }\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        $object.each(this._dataSets, (_key, dataItems) => {\r\n            $array.each(dataItems, (dataItem) => {\r\n                dataItem.dispose();\r\n            });\r\n            dataItems.length = 0;\r\n        });\r\n    }\r\n    _removeAxisRange(axisRange) {\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        const axis = axisDataItem.component;\r\n        axisDataItem.dispose();\r\n        $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n        const container = axisRange.container;\r\n        if (container) {\r\n            container.dispose();\r\n        }\r\n    }\r\n    _updateFields() {\r\n        super._updateFields();\r\n        this._valueXFields = [];\r\n        this._valueYFields = [];\r\n        this._valueXShowFields = [];\r\n        this._valueYShowFields = [];\r\n        this.__valueXShowFields = [];\r\n        this.__valueYShowFields = [];\r\n        if (this.valueXFields) {\r\n            $array.each(this.valueXFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueXFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueXShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueXShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueXShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.valueYFields) {\r\n            $array.each(this.valueYFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueYFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueYShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueYShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueYShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._bullets = {};\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n        $array.removeFirst(this.get(\"xAxis\").series, this);\r\n        $array.removeFirst(this.get(\"yAxis\").series, this);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _min(key, value) {\r\n        let newValue = min(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _max(key, value) {\r\n        let newValue = max(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (!xAxis.inited || !yAxis.inited) {\r\n            return false;\r\n        }\r\n        const minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n        if (minBulletDistance > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let count = endIndex - startIndex;\r\n            if (xAxis == baseAxis) {\r\n                if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (yAxis == baseAxis) {\r\n                if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _makeFieldNames() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xName = xAxis.getPrivate(\"name\");\r\n        const xCapName = $utils.capitalizeFirst(xName);\r\n        const yName = yAxis.getPrivate(\"name\");\r\n        const yCapName = $utils.capitalizeFirst(yName);\r\n        const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const open = \"open\";\r\n        const low = \"low\";\r\n        const high = \"high\";\r\n        const show = \"Show\";\r\n        if (xAxis.className === \"ValueAxis\") {\r\n            this._xField = this.get((xName + xLetter + show));\r\n            this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n            this._xLowField = this.get((low + xCapName + xLetter + show));\r\n            this._xHighField = this.get((high + xCapName + xLetter + show));\r\n        }\r\n        else {\r\n            this._xField = (xName + xLetter);\r\n            this._xOpenField = (open + xCapName + xLetter);\r\n            this._xLowField = (low + xCapName + xLetter);\r\n            this._xHighField = (high + xCapName + xLetter);\r\n        }\r\n        if (yAxis.className === \"ValueAxis\") {\r\n            this._yField = this.get((yName + yLetter + show));\r\n            this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n            this._yLowField = this.get((low + yCapName + yLetter + show));\r\n            this._yHighField = this.get((high + yCapName + yLetter + show));\r\n        }\r\n        else {\r\n            this._yField = (yName + yLetter);\r\n            this._yOpenField = (open + yCapName + yLetter);\r\n            this._yLowField = (low + yCapName + yLetter);\r\n            this._yHighField = (high + yCapName + yLetter);\r\n        }\r\n    }\r\n    _fixVC() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const hiddenState = this.states.lookup(\"hidden\");\r\n        const sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n        if (hiddenState) {\r\n            let value = 0;\r\n            if (sequencedInterpolation) {\r\n                value = 0.999999999999; // makes animate, good for stacked\r\n            }\r\n            if (xAxis === baseAxis) {\r\n                hiddenState.set(\"vcy\", value);\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n            else {\r\n                hiddenState.set(\"vcy\", value);\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n        if (this.isDirty(\"maskBullets\")) {\r\n            this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n        }\r\n    }\r\n    _fixPosition() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n        this.bulletsContainer.set(\"y\", this.y());\r\n        this.bulletsContainer.set(\"x\", this.x());\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._bullets = {};\r\n        if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\r\n            this._updateFields();\r\n            this._makeFieldNames();\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        this.set(\"width\", this.get(\"xAxis\").width());\r\n        this.set(\"height\", this.get(\"yAxis\").height());\r\n        this._handleMaskBullets();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const tooltipPositionX = this.get(\"tooltipPositionX\");\r\n        let tooltipFieldX;\r\n        switch (tooltipPositionX) {\r\n            case \"open\":\r\n                tooltipFieldX = this._xOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldX = this._xLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldX = this._xHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldX = this._xField;\r\n        }\r\n        this._tooltipFieldX = tooltipFieldX;\r\n        const tooltipPositionY = this.get(\"tooltipPositionY\");\r\n        let tooltipFieldY;\r\n        switch (tooltipPositionY) {\r\n            case \"open\":\r\n                tooltipFieldY = this._yOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldY = this._yLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldY = this._yHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldY = this._yField;\r\n        }\r\n        this._tooltipFieldY = tooltipFieldY;\r\n        if (this.isDirty(\"baseAxis\")) {\r\n            this._fixVC();\r\n        }\r\n        this._fixPosition();\r\n        const stacked = this.get(\"stacked\");\r\n        if (this.isDirty(\"stacked\")) {\r\n            if (stacked) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                }\r\n                else {\r\n                    this._stack();\r\n                }\r\n            }\r\n            else {\r\n                this._unstack();\r\n            }\r\n        }\r\n        if (this._valuesDirty && !this._dataProcessed) {\r\n            this._dataProcessed = true;\r\n            if (stacked) {\r\n                this._stack();\r\n            }\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                $array.each(this._valueXShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedXValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minX\", value);\r\n                        this._max(\"maxX\", value);\r\n                    }\r\n                });\r\n                $array.each(this._valueYShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedYValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minY\", value);\r\n                        this._max(\"maxY\", value);\r\n                    }\r\n                });\r\n                xAxis.processSeriesDataItem(dataItem, this._valueXFields);\r\n                yAxis.processSeriesDataItem(dataItem, this._valueYFields);\r\n            });\r\n            xAxis._seriesValuesDirty = true;\r\n            yAxis._seriesValuesDirty = true;\r\n            if (!this.get(\"ignoreMinMax\")) {\r\n                if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                    xAxis.markDirtyExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                    yAxis.markDirtyExtremes();\r\n                }\r\n            }\r\n            this._markStakedDirtyStack();\r\n            //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n            if (!this.get(\"tooltipDataItem\")) {\r\n                this.updateLegendValue(undefined);\r\n            }\r\n        }\r\n        if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n            this._markStakedDirtyStack();\r\n        }\r\n        if (!this._dataGrouped) {\r\n            xAxis._groupSeriesData(this);\r\n            yAxis._groupSeriesData(this);\r\n            this._dataGrouped = true;\r\n        }\r\n        if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n            if (minBulletDistance > 0 && baseAxis) {\r\n                if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                    this._showBullets = true;\r\n                }\r\n                else {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                this._selectionProcessed = true;\r\n                const vcx = this.get(\"vcx\", 1);\r\n                const vcy = this.get(\"vcy\", 1);\r\n                const stacked = this.get(\"stacked\", false);\r\n                const outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    yAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    xAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    if (this.get(\"valueYShow\") !== \"valueYWorking\" || this.get(\"useSelectionExtremes\")) {\r\n                        const selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                        if (selectionMinY != null) {\r\n                            this.setPrivateRaw(\"minY\", selectionMinY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                        if (selectionMaxY != null) {\r\n                            this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    if (this.get(\"valueXShow\") !== \"valueXWorking\" || this.get(\"useSelectionExtremes\")) {\r\n                        const selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                        if (selectionMinX != null) {\r\n                            this.setPrivateRaw(\"minX\", selectionMinX);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                        if (selectionMaxX != null) {\r\n                            this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                            xAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                // this.updateLegendValue(undefined); flickers while panning\r\n            }\r\n        }\r\n    }\r\n    _makeRangeMask() {\r\n        if (this.axisRanges.length > 0) {\r\n            let mainContainerMask = this._mainContainerMask;\r\n            if (mainContainerMask == null) {\r\n                mainContainerMask = this.children.push(Graphics.new(this._root, {}));\r\n                this._mainContainerMask = mainContainerMask;\r\n                mainContainerMask.set(\"draw\", (display, target) => {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        const w = this._root.container.width();\r\n                        const h = this._root.container.height();\r\n                        display.moveTo(-w, -h);\r\n                        display.lineTo(-w, h * 2);\r\n                        display.lineTo(w * 2, h * 2);\r\n                        display.lineTo(w * 2, -h);\r\n                        display.lineTo(-w, -h);\r\n                        this.axisRanges.each((axisRange) => {\r\n                            const fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                            if (parent) {\r\n                                if (fill) {\r\n                                    let draw = fill.get(\"draw\");\r\n                                    if (draw) {\r\n                                        draw(display, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.mainContainer._display.mask = mainContainerMask._display;\r\n                });\r\n            }\r\n            mainContainerMask.markDirty();\r\n            mainContainerMask._markDirtyKey(\"fill\");\r\n        }\r\n        else {\r\n            this.mainContainer._display.mask = null;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        // save for performance\r\n        this._x = this.x();\r\n        this._y = this.y();\r\n        this._makeRangeMask();\r\n    }\r\n    _stack() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const seriesIndex = chart.series.indexOf(this);\r\n            this._couldStackTo = [];\r\n            if (seriesIndex > 0) {\r\n                let series;\r\n                for (let i = seriesIndex - 1; i >= 0; i--) {\r\n                    series = chart.series.getIndex(i);\r\n                    if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                        this._couldStackTo.push(series);\r\n                        if (!series.get(\"stacked\")) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._stackDataItems();\r\n        }\r\n    }\r\n    _unstack() {\r\n        $object.each(this._reallyStackedTo, (_key, value) => {\r\n            delete (value._stackedSeries[this.uid]);\r\n        });\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            dataItem.setRaw(\"stackToItemY\", undefined);\r\n            dataItem.setRaw(\"stackToItemX\", undefined);\r\n        });\r\n    }\r\n    _handleRemoved() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        if (xAxis) {\r\n            xAxis._handleSeriesRemoved();\r\n        }\r\n        const yAxis = this.get(\"yAxis\");\r\n        if (yAxis) {\r\n            yAxis._handleSeriesRemoved();\r\n        }\r\n    }\r\n    _stackDataItems() {\r\n        // this works only with the same number of data @todo: search by date/category?\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        let field;\r\n        let stackToItemKey;\r\n        if (baseAxis === xAxis) {\r\n            field = \"valueY\";\r\n            stackToItemKey = \"stackToItemY\";\r\n        }\r\n        else if (baseAxis === yAxis) {\r\n            field = \"valueX\";\r\n            stackToItemKey = \"stackToItemX\";\r\n        }\r\n        let len = this._couldStackTo.length;\r\n        let index = 0;\r\n        const stackToNegative = this.get(\"stackToNegative\");\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            for (let s = 0; s < len; s++) {\r\n                let stackToSeries = this._couldStackTo[s];\r\n                let stackToItem = stackToSeries.dataItems[index];\r\n                let value = dataItem.get(field);\r\n                if (stackToItem) {\r\n                    let stackValue = stackToItem.get(field);\r\n                    if (stackToNegative) {\r\n                        if ($type.isNumber(value)) {\r\n                            if ($type.isNumber(stackValue)) {\r\n                                if (s == len - 1) {\r\n                                    dataItem.setRaw(stackToItemKey, undefined);\r\n                                }\r\n                                if (value >= 0 && stackValue >= 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                                if (value < 0 && stackValue < 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                            dataItem.setRaw(stackToItemKey, stackToItem);\r\n                            this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                            stackToSeries._stackedSeries[this.uid] = this;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        });\r\n    }\r\n    processXSelectionDataItem(dataItem, vcx, stacked) {\r\n        $array.each(this.__valueXShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedXValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinX\", value);\r\n                this._max(\"selectionMaxX\", value * vcx);\r\n            }\r\n        });\r\n    }\r\n    processYSelectionDataItem(dataItem, vcy, stacked) {\r\n        $array.each(this.__valueYShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedYValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinY\", value);\r\n                this._max(\"selectionMaxY\", value * vcy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        this.updateLegendMarker();\r\n    }\r\n    _markDirtyAxes() {\r\n        this._axesDirty = true;\r\n        this.markDirty();\r\n    }\r\n    _markDataSetDirty() {\r\n        this._afterDataChange();\r\n        this._valuesDirty = true;\r\n        this._dataProcessed = false;\r\n        this._aggregatesCalculated = false;\r\n        this.markDirty();\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._axesDirty = false;\r\n        this._selectionProcessed = false;\r\n        this._stackDirty = false;\r\n        this._dataProcessed = false;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            let dataItem = sprite.dataItem;\r\n            let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            let xAxis = this.get(\"xAxis\");\r\n            let yAxis = this.get(\"yAxis\");\r\n            let exactLocationX = this.get(\"exactLocationX\", false);\r\n            let exactLocationY = this.get(\"exactLocationY\", false);\r\n            let positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1), exactLocationX);\r\n            let positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1), exactLocationY);\r\n            let point = this.getPoint(positionX, positionY);\r\n            let left = dataItem.get(\"left\", point.x);\r\n            let right = dataItem.get(\"right\", point.x);\r\n            let top = dataItem.get(\"top\", point.y);\r\n            let bottom = dataItem.get(\"bottom\", point.y);\r\n            let x = 0;\r\n            let y = 0;\r\n            let w = right - left;\r\n            let h = bottom - top;\r\n            if (this._shouldShowBullet(positionX, positionY)) {\r\n                sprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\r\n                let field = bullet.get(\"field\");\r\n                const baseAxis = this.get(\"baseAxis\");\r\n                const xAxis = this.get(\"xAxis\");\r\n                const yAxis = this.get(\"yAxis\");\r\n                if (field != undefined) {\r\n                    let realField;\r\n                    if (baseAxis == xAxis) {\r\n                        if (field == \"value\") {\r\n                            realField = this._yField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._yOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._yHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._yLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionY = yAxis.getDataItemPositionY(dataItem, realField, 0, this.get(\"vcy\", 1), exactLocationY);\r\n                            point = yAxis.get(\"renderer\").positionToPoint(positionY);\r\n                            y = point.y;\r\n                            x = left + w * locationX;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (field == \"value\") {\r\n                            realField = this._xField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._xOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._xHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._xLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionX = xAxis.getDataItemPositionX(dataItem, realField, 0, this.get(\"vcx\", 1), exactLocationX);\r\n                            point = xAxis.get(\"renderer\").positionToPoint(positionX);\r\n                            x = point.x;\r\n                            y = bottom - h * locationY;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    x = left + w * locationX;\r\n                    y = bottom - h * locationY;\r\n                }\r\n                const stacked = bullet.get(\"stacked\");\r\n                if (stacked) {\r\n                    const chart = this.chart;\r\n                    if (baseAxis == xAxis) {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let yo = y;\r\n                            y = previousBounds.top;\r\n                            if (stacked == \"down\") {\r\n                                y = previousBounds.bottom - bounds.top;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (yo < chart.plotContainer.height() / 2) {\r\n                                        y = previousBounds.bottom - bounds.top;\r\n                                    }\r\n                                    else {\r\n                                        y += bounds.bottom;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                y += bounds.bottom;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                    else {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let xo = x;\r\n                            x = previousBounds.right;\r\n                            if (stacked == \"down\") {\r\n                                x = previousBounds.left - bounds.right;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (xo < chart.plotContainer.width() / 2) {\r\n                                        x = previousBounds.left - bounds.right;\r\n                                    }\r\n                                    else {\r\n                                        x -= bounds.left;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                x -= bounds.left;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                }\r\n                if (sprite.isType(\"Label\")) {\r\n                    sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                    sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                }\r\n                sprite.setAll({ x, y });\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _shouldShowBullet(_positionX, _positionY) {\r\n        return this._showBullets;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setDataSet(id) {\r\n        if (this._dataSets[id]) {\r\n            this._handleDataSetChange();\r\n            this._dataItems = this._dataSets[id];\r\n            this._markDataSetDirty();\r\n            this._dataSetId = id;\r\n            const type = \"datasetchanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this, id: id });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetGrouping() {\r\n        $object.each(this._dataSets, (_key, dataSet) => {\r\n            if (dataSet != this._mainDataItems) {\r\n                $array.each(dataSet, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n            }\r\n        });\r\n        this._dataSets = {};\r\n        this._dataItems = this.mainDataItems;\r\n    }\r\n    _handleDataSetChange() {\r\n        $array.each(this._dataItems, (dataItem) => {\r\n            let bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    if (bullet) {\r\n                        let sprite = bullet.get(\"sprite\");\r\n                        if (sprite) {\r\n                            sprite.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        this._selectionProcessed = false; // for totals to be calculated\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration).then(() => {\r\n                this._isShowing = false;\r\n                let xAxis = this.get(\"xAxis\");\r\n                let yAxis = this.get(\"yAxis\");\r\n                let baseAxis = this.get(\"baseAxis\");\r\n                if (yAxis !== baseAxis) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (xAxis !== baseAxis) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n            }));\r\n            promises.push(this.bulletsContainer.show(duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration).then(() => {\r\n                this._isHiding = false;\r\n            }));\r\n            promises.push(this.bulletsContainer.hide(duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            $array.each(this._valueFields, (key) => {\r\n                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const stacked = this.get(\"stacked\");\r\n            if (baseAxis === xAxis || !baseAxis) {\r\n                $array.each(this._valueYFields, (key) => {\r\n                    let min = yAxis.getPrivate(\"min\");\r\n                    let baseValue = yAxis.baseValue();\r\n                    if ($type.isNumber(min) && min > baseValue) {\r\n                        baseValue = min;\r\n                    }\r\n                    if (stacked) {\r\n                        baseValue = 0;\r\n                    }\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            if (baseAxis === yAxis || !baseAxis) {\r\n                let min = xAxis.getPrivate(\"min\");\r\n                let baseValue = xAxis.baseValue();\r\n                if ($type.isNumber(min) && min > baseValue) {\r\n                    baseValue = min;\r\n                }\r\n                if (stacked) {\r\n                    baseValue = 0;\r\n                }\r\n                $array.each(this._valueXFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _markDirtyStack() {\r\n        this._stackDirty = true;\r\n        this.markDirty();\r\n        this._markStakedDirtyStack();\r\n    }\r\n    _markStakedDirtyStack() {\r\n        const stackedSeries = this._stackedSeries;\r\n        if (stackedSeries) {\r\n            $object.each(stackedSeries, (_key, value) => {\r\n                if (!value._stackDirty) {\r\n                    value._markDirtyStack();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._skipped) {\r\n            this._markDirtyAxes();\r\n            this._skipped = false;\r\n        }\r\n    }\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    showDataItemTooltip(dataItem) {\r\n        if (!this.getPrivate(\"doNotUpdateLegend\")) {\r\n            this.updateLegendMarker(dataItem);\r\n            this.updateLegendValue(dataItem);\r\n        }\r\n        const tooltip = this.get(\"tooltip\");\r\n        const exactLocationX = this.get(\"exactLocationX\", false);\r\n        const exactLocationY = this.get(\"exactLocationY\", false);\r\n        if (tooltip) {\r\n            if (!this.isHidden() && this.get(\"visible\")) {\r\n                tooltip._setDataItem(dataItem);\r\n                if (dataItem) {\r\n                    let locationX = this.get(\"locationX\", 0);\r\n                    let locationY = this.get(\"locationY\", 1);\r\n                    let itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                    let itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                    const xAxis = this.get(\"xAxis\");\r\n                    const yAxis = this.get(\"yAxis\");\r\n                    const vcx = this.get(\"vcx\", 1);\r\n                    const vcy = this.get(\"vcy\", 1);\r\n                    const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx, exactLocationX);\r\n                    const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy, exactLocationY);\r\n                    const point = this.getPoint(xPos, yPos);\r\n                    let show = true;\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (dataItem.get(field) == null) {\r\n                            show = false;\r\n                        }\r\n                    });\r\n                    if (show) {\r\n                        const chart = this.chart;\r\n                        if (chart && chart.inPlot(point)) {\r\n                            tooltip.label.text.markDirtyText();\r\n                            tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                            tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.hideTooltip();\r\n            }\r\n        }\r\n    }\r\n    hideTooltip() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.set(\"tooltipTarget\", this);\r\n        }\r\n        return super.hideTooltip();\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets && bullets.length > 0) {\r\n                const bullet = bullets[0];\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const label = legendDataItem.get(\"label\");\r\n            if (label) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                }\r\n                else {\r\n                    label._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                }\r\n                label.set(\"text\", txt);\r\n            }\r\n            const valueLabel = legendDataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                else {\r\n                    valueLabel._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                valueLabel.set(\"text\", txt);\r\n            }\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        let text = \"X: {\" + this._xField;\r\n        if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}; Y: {\" + this._yField;\r\n        if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}\";\r\n        return text;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n        let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n        // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n        let max = 999999999;\r\n        if (y < -max) {\r\n            y = -max;\r\n        }\r\n        if (y > max) {\r\n            y = max;\r\n        }\r\n        if (x < -max) {\r\n            x = -max;\r\n        }\r\n        if (x > max) {\r\n            x = max;\r\n        }\r\n        return { x: x, y: y };\r\n    }\r\n    _shouldInclude(_position) {\r\n        return true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        this.hideTooltip();\r\n        this.updateLegendValue(undefined);\r\n        this.updateLegendMarker(undefined);\r\n    }\r\n    _afterDataChange() {\r\n        super._afterDataChange();\r\n        this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n        this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n        this.resetExtremes();\r\n    }\r\n    /**\r\n     * Resets cached axis scale values.\r\n     */\r\n    resetExtremes() {\r\n        this.setPrivate(\"selectionMinX\", undefined);\r\n        this.setPrivate(\"selectionMaxX\", undefined);\r\n        this.setPrivate(\"selectionMinY\", undefined);\r\n        this.setPrivate(\"selectionMaxY\", undefined);\r\n        this.setPrivate(\"minX\", undefined);\r\n        this.setPrivate(\"minY\", undefined);\r\n        this.setPrivate(\"maxX\", undefined);\r\n        this.setPrivate(\"maxY\", undefined);\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push({\r\n            axisDataItem: axisDataItem\r\n        });\r\n    }\r\n    /**\r\n     * A list of series's main (ungrouped) data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get mainDataItems() {\r\n        return this._mainDataItems;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (baseAxis == xAxis && xAxis.isType(\"DateAxis\")) {\r\n            const baseDuration = xAxis.baseDuration();\r\n            const minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\r\n            const dl = baseDuration * this.get(\"locationX\", 0.5);\r\n            let value = -Infinity;\r\n            while (value < minSelection) {\r\n                const dataItem = this.dataItems[index];\r\n                if (dataItem) {\r\n                    const open = dataItem.open;\r\n                    if (open) {\r\n                        value = open[\"valueX\"];\r\n                    }\r\n                    else {\r\n                        value = dataItem.get(\"valueX\", 0);\r\n                    }\r\n                    value += dl;\r\n                    if (value < minSelection) {\r\n                        index++;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n}\r\nObject.defineProperty(XYSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYSeries\"\r\n});\r\nObject.defineProperty(XYSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([XYSeries.className])\r\n});\r\n//# sourceMappingURL=XYSeries.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Array of minor data items.\r\n         */\r\n        Object.defineProperty(this, \"minorDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesAdded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\r\n        this.ghostLabel.events.disable();\r\n    }\r\n    _updateFinals(_start, _end) {\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        if (this.get(\"zoomable\", true)) {\r\n            this._updateFinals(start, end);\r\n            if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n                let sAnimation = this._sAnimation;\r\n                let eAnimation = this._eAnimation;\r\n                let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n                if (start < -maxDeviation) {\r\n                    start = -maxDeviation;\r\n                }\r\n                if (end > 1 + maxDeviation) {\r\n                    end = 1 + maxDeviation;\r\n                }\r\n                if (start > end) {\r\n                    [start, end] = [end, start];\r\n                }\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (!priority) {\r\n                    priority = \"end\";\r\n                }\r\n                let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n                let maxZoomFactorReal = maxZoomFactor;\r\n                if (end === 1 && start !== 0) {\r\n                    if (start < this.get(\"start\", 0)) {\r\n                        priority = \"start\";\r\n                    }\r\n                    else {\r\n                        priority = \"end\";\r\n                    }\r\n                }\r\n                if (start === 0 && end !== 1) {\r\n                    if (end > this.get(\"end\", 1)) {\r\n                        priority = \"end\";\r\n                    }\r\n                    else {\r\n                        priority = \"start\";\r\n                    }\r\n                }\r\n                let minZoomCount = this.get(\"minZoomCount\", 0);\r\n                let maxZoomCount = this.get(\"maxZoomCount\", Infinity);\r\n                if ($type.isNumber(minZoomCount)) {\r\n                    maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n                }\r\n                let minZoomFactor = 1;\r\n                if ($type.isNumber(maxZoomCount)) {\r\n                    minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n                }\r\n                // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n                if (priority === \"start\") {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            end = start + 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // add to the end\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                    //unless end is > 0\r\n                    if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                        //end = 1;\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                // most likely we are dragging right, so we modify left\r\n                else {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            start = end - 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // remove from start\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                    if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                        //start = 0;\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                    const chart = this.chart;\r\n                    if (chart) {\r\n                        chart._handleAxisSelection(this, true);\r\n                    }\r\n                }\r\n                if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                    return;\r\n                }\r\n                if (duration > 0) {\r\n                    let easing = this.get(\"interpolationEasing\");\r\n                    let sAnimation, eAnimation;\r\n                    if (this.get(\"start\") != start) {\r\n                        sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                    }\r\n                    if (this.get(\"end\") != end) {\r\n                        eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                    }\r\n                    this._sAnimation = sAnimation;\r\n                    this._eAnimation = eAnimation;\r\n                    if (sAnimation) {\r\n                        return sAnimation;\r\n                    }\r\n                    else if (eAnimation) {\r\n                        return eAnimation;\r\n                    }\r\n                }\r\n                else {\r\n                    this.set(\"start\", start);\r\n                    this.set(\"end\", end);\r\n                }\r\n            }\r\n            else {\r\n                if (this._sAnimation) {\r\n                    this._sAnimation.stop();\r\n                }\r\n                if (this._eAnimation) {\r\n                    this._eAnimation.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart._updateCursor();\r\n            }\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, true);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, false);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleFHDataItem(dataItem, forceHidden) {\r\n        const fh = \"forceHidden\";\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.set(fh, forceHidden);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.set(fh, forceHidden);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.set(fh, forceHidden);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.set(fh, forceHidden);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.set(fh, forceHidden);\r\n            }\r\n        }\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        const v = \"visible\";\r\n        if (label) {\r\n            label.setPrivate(v, visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(v, visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(v, visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(v, visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(v, visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags, minor) {\r\n        var _a, _b, _c;\r\n        const renderer = this.get(\"renderer\");\r\n        let m = \"minor\";\r\n        const label = dataItem.get(\"label\");\r\n        if (!label) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = label.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_a = label.parent) === null || _a === void 0 ? void 0 : _a.children.removeValue(label);\r\n                renderer.makeLabel(dataItem, tags);\r\n                label.dispose();\r\n                renderer.labels.removeValue(label);\r\n            }\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (!grid) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = grid.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_b = grid.parent) === null || _b === void 0 ? void 0 : _b.children.removeValue(grid);\r\n                renderer.makeGrid(dataItem, tags);\r\n                grid.dispose();\r\n                renderer.grid.removeValue(grid);\r\n            }\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (!tick) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        else {\r\n            let remove = false;\r\n            let themeTags = tick.get(\"themeTags\");\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_c = tick.parent) === null || _c === void 0 ? void 0 : _c.children.removeValue(tick);\r\n                renderer.makeTick(dataItem, tags);\r\n                tick.dispose();\r\n                renderer.ticks.removeValue(tick);\r\n            }\r\n        }\r\n        if (!minor && !dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n        this._seriesAdded = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        this.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = Math.ceil(bounds.right - bounds.left);\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = Math.ceil(bounds.right - bounds.left);\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                        series._settings.tooltipDataItem = dataItem;\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                        series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (this.get(\"snapTooltip\")) {\r\n                position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n            }\r\n            this.setPrivateRaw(\"tooltipPosition\", position);\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (!$type.isNaN(position)) {\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    _handleSeriesRemoved() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Converts relative position of the axis to a global position taking current\r\n     * zoom into account (opposite to what `toAxisPosition` does).\r\n     *\r\n     * @since 5.4.2\r\n     * @param position Position\r\n     * @return Global position\r\n     */\r\n    toGlobalPosition(position) {\r\n        return this.get(\"renderer\").toGlobalPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n//# sourceMappingURL=Axis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dseHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minRealLog\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        let someDirty = false;\r\n        if (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            someDirty = true;\r\n            this.ghostLabel.set(\"text\", \"\");\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\r\n            this._getMinMax();\r\n            this._dirtyExtremes = false;\r\n        }\r\n        this._handleSizeDirty();\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            const chart = this.chart;\r\n            let getMM = false;\r\n            // #1563\r\n            if (chart) {\r\n                const letter = this.get(\"renderer\").getPrivate(\"letter\");\r\n                if (letter == \"Y\") {\r\n                    chart.xAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n                else if (letter == \"X\") {\r\n                    chart.yAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (getMM) {\r\n                this._getSelectionMinMax();\r\n            }\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _handleSizeDirty() {\r\n        if (this._sizeDirty && !this._dseHandled) {\r\n            this._dirtySelectionExtremes = true;\r\n            this._dseHandled = true;\r\n            if (this.getPrivate(\"selectionMinFinal\") != this.getPrivate(\"selectionMin\") || this.getPrivate(\"selectionMaxFinal\") != this.getPrivate(\"selectionMax\")) {\r\n                this._dirtySelectionExtremes = false;\r\n            }\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._dseHandled = false;\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    minLog = 1;\r\n                    if (step < 1) {\r\n                        if ($type.isNumber(this._minRealLog)) {\r\n                            minLog = this._minRealLog;\r\n                        }\r\n                        else {\r\n                            minLog = Math.pow(10, -50);\r\n                        }\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\r\n                }\r\n            }\r\n            /// minor grid\r\n            const renderer = this.get(\"renderer\");\r\n            const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n            const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n            let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n            const stepAdjusted = Math.round(step / stepPower);\r\n            let minorGridCount = 2;\r\n            if ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\r\n                minorGridCount = 5;\r\n            }\r\n            if ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\r\n                minorGridCount = 10;\r\n            }\r\n            let minorStep = step / minorGridCount;\r\n            // end of minor grid\r\n            let i = 0;\r\n            let m = 0;\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                this._toggleDataItem(dataItem, true);\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                let nextValue = value;\r\n                if (!logarithmic) {\r\n                    nextValue += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        nextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\r\n                    }\r\n                    else {\r\n                        nextValue += step;\r\n                    }\r\n                }\r\n                // minor grid\r\n                if (minorGridEnabled) {\r\n                    let minorValue = value + minorStep;\r\n                    if (logarithmic) {\r\n                        if (differencePower > 2) {\r\n                            let minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\r\n                            minorStep = minorMinMaxStep.step;\r\n                        }\r\n                        minorValue = value + minorStep;\r\n                    }\r\n                    while (minorValue < nextValue - step * 0.00000000001) {\r\n                        let minorDataItem;\r\n                        if (this.minorDataItems.length < m + 1) {\r\n                            minorDataItem = new DataItem(this, undefined, {});\r\n                            this.minorDataItems.push(minorDataItem);\r\n                            this.processDataItem(minorDataItem);\r\n                        }\r\n                        else {\r\n                            minorDataItem = this.minorDataItems[m];\r\n                        }\r\n                        this._createAssets(minorDataItem, [\"minor\"], true);\r\n                        this._toggleDataItem(minorDataItem, true);\r\n                        minorDataItem.setRaw(\"value\", minorValue);\r\n                        const minorLabel = minorDataItem.get(\"label\");\r\n                        if (minorLabel) {\r\n                            if (minorLabelsEnabled) {\r\n                                minorLabel.set(\"text\", this._formatText(minorValue));\r\n                            }\r\n                            else {\r\n                                minorLabel.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                        this._prepareDataItem(minorDataItem);\r\n                        minorValue += minorStep;\r\n                        m++;\r\n                    }\r\n                }\r\n                value = nextValue;\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1 && !logarithmic) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                // #103520\r\n                if (logarithmic && differencePower <= 2) {\r\n                    if (value - step < step) {\r\n                        value = step;\r\n                    }\r\n                }\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this._toggleDataItem(this.dataItems[j], false);\r\n            }\r\n            for (let j = m; j < this.minorDataItems.length; j++) {\r\n                this._toggleDataItem(this.minorDataItems[j], false);\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        let labelEndPosition = endPosition;\r\n        let labelEndValue = dataItem.get(\"labelEndValue\");\r\n        if (labelEndValue != null) {\r\n            labelEndPosition = this.valueToPosition(labelEndValue);\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            dataItem.set((field + \"TotalPercent\"), value / total * 100);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minX = series.getPrivate(\"minX\");\r\n                            let maxX = series.getPrivate(\"maxX\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minX = undefined;\r\n                                maxX = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", minX);\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", maxX);\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minY = series.getPrivate(\"minY\");\r\n                            let maxY = series.getPrivate(\"maxY\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minY = undefined;\r\n                                maxY = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", minY);\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", maxY);\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                let smin = selectionMin;\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                if (selectionMin < min) {\r\n                    let d = smin - min;\r\n                    if (d == 0) {\r\n                        d = this._deltaMinMax;\r\n                    }\r\n                    selectionMin = smin - d;\r\n                    selectionMax = smin + d;\r\n                    strictMinMax = true;\r\n                }\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            let delta = selectionMax - selectionMin;\r\n            selectionMin -= delta * extraMin;\r\n            selectionMax += delta * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                if (minMaxStep.min < min) {\r\n                    minMaxStep.min = min;\r\n                }\r\n                if (minMaxStep.max > max) {\r\n                    minMaxStep.max = max;\r\n                }\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = selectionMinReal;\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = selectionMaxReal;\r\n                }\r\n                if (selectionMax - selectionMin <= 0.00000001) {\r\n                    selectionMin -= this._deltaMinMax;\r\n                    selectionMax += this._deltaMinMax;\r\n                }\r\n                let delta = selectionMax - selectionMin;\r\n                selectionMin -= delta * extraMin;\r\n                selectionMax += delta * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (!this.get(\"strictMinMax\")) {\r\n                if (this.get(\"extraMin\") == null) {\r\n                    extraMin = 0.1;\r\n                }\r\n                if (this.get(\"extraMax\") == null) {\r\n                    extraMax = 0.2;\r\n                }\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            this.setPrivate(\"minFinal\", undefined);\r\n            this.setPrivate(\"maxFinal\", undefined);\r\n            return;\r\n        }\r\n        if (min > max) {\r\n            [min, max] = [max, min];\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        this._minRealLog = min;\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            let delta = max - min;\r\n            min -= delta * extraMin;\r\n            max += delta * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n                if (step == 0) {\r\n                    step = 1;\r\n                }\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.getPrivate(\"step\", 1) / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        let value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\r\n        value += this.getPrivate(\"step\", 1) * count;\r\n        value = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\r\n        return this.toGlobalPosition(this.valueToPosition(value));\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n//# sourceMappingURL=ValueAxis.js.map","import { Axis } from \"./Axis\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { populateString } from \"../../../core/util/PopulateString\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\r\nexport class CategoryAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_itemMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.fields.push(\"category\");\r\n        this.setPrivateRaw(\"name\", \"category\");\r\n        this.addTag(\"category\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const len = this.dataItems.length;\r\n        let i = 0;\r\n        if (this._valuesDirty) {\r\n            this._itemMap = {};\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                dataItem.setRaw(\"index\", i);\r\n                this._itemMap[dataItem.get(\"category\")] = dataItem;\r\n                i++;\r\n            });\r\n            this.setPrivateRaw(\"maxZoomFactor\", len);\r\n        }\r\n        this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\r\n        this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\r\n        if (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\r\n            if (this.dataItems.length > 0) {\r\n                this._handleRangeChange();\r\n                this._prepareAxisItems();\r\n                this._updateAxisRanges();\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        $array.each(this.series, (series) => {\r\n            let startCategory = this.dataItems[this.startIndex()].get(\"category\");\r\n            let endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\r\n            let baseAxis = series.get(\"baseAxis\");\r\n            let xAxis = series.get(\"xAxis\");\r\n            let yAxis = series.get(\"yAxis\");\r\n            if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\r\n                series._markDirtyAxes();\r\n            }\r\n            else if (baseAxis === this) {\r\n                let key;\r\n                let openKey;\r\n                let otherAxis = yAxis;\r\n                if (xAxis === baseAxis) {\r\n                    if (series.get(\"categoryXField\")) {\r\n                        key = \"categoryX\";\r\n                    }\r\n                    if (series.get(\"openCategoryXField\")) {\r\n                        openKey = \"openCategoryX\";\r\n                    }\r\n                }\r\n                else if (yAxis === baseAxis) {\r\n                    if (series.get(\"categoryYField\")) {\r\n                        key = \"categoryY\";\r\n                    }\r\n                    if (series.get(\"openCategoryYField\")) {\r\n                        openKey = \"openCategoryY\";\r\n                    }\r\n                    otherAxis = xAxis;\r\n                }\r\n                if (otherAxis instanceof ValueAxis) {\r\n                    if (key || openKey) {\r\n                        let startDataItem;\r\n                        let endDataItem;\r\n                        for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let i = series.dataItems.length - 1; i >= 0; i--) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        let startIndex = 0;\r\n                        let endIndex = series.dataItems.length;\r\n                        if (startDataItem) {\r\n                            startIndex = series.dataItems.indexOf(startDataItem);\r\n                        }\r\n                        if (endDataItem) {\r\n                            endIndex = series.dataItems.indexOf(endDataItem) + 1;\r\n                        }\r\n                        series.setPrivate(\"startIndex\", startIndex);\r\n                        series.setPrivate(\"endIndex\", endIndex);\r\n                        let hasValue = false;\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            const dataItem = series.dataItems[i];\r\n                            $array.each(series.__valueXShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            $array.each(series.__valueYShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            if (hasValue) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        series.setPrivate(\"outOfSelection\", !hasValue);\r\n                    }\r\n                }\r\n                series._markDirtyAxes(); // must be outside\r\n            }\r\n        });\r\n    }\r\n    _prepareAxisItems() {\r\n        var _a;\r\n        const renderer = this.get(\"renderer\");\r\n        const len = this.dataItems.length;\r\n        let startIndex = this.startIndex();\r\n        if (startIndex > 0) {\r\n            startIndex--;\r\n        }\r\n        let endIndex = this.endIndex();\r\n        if (endIndex < len) {\r\n            endIndex++;\r\n        }\r\n        const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n        const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n        let maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1);\r\n        let frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\r\n        startIndex = Math.floor(startIndex / frequency) * frequency;\r\n        this._frequency = frequency;\r\n        for (let j = 0; j < len; j++) {\r\n            this._toggleDataItem(this.dataItems[j], false);\r\n        }\r\n        let f = this.dataItems[startIndex].get(\"index\", 0);\r\n        for (let i = startIndex; i < endIndex; i = i + frequency) {\r\n            let dataItem = this.dataItems[i];\r\n            this._createAssets(dataItem, []);\r\n            this._toggleDataItem(dataItem, true);\r\n            let count = frequency;\r\n            if (minorGridEnabled) {\r\n                count = 1;\r\n            }\r\n            this._prepareDataItem(dataItem, f, count);\r\n            f++;\r\n        }\r\n        if (renderer.get(\"minorGridEnabled\")) {\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (i % frequency != 0) {\r\n                    this._createAssets(dataItem, [\"minor\"], true);\r\n                    this._toggleDataItem(dataItem, true);\r\n                    this._prepareDataItem(dataItem, 0, 1);\r\n                    if (!minorLabelsEnabled) {\r\n                        (_a = dataItem.get(\"label\")) === null || _a === void 0 ? void 0 : _a.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _prepareDataItem(dataItem, fillIndex, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let categoryLocation = dataItem.get(\"categoryLocation\", 0);\r\n        let endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\r\n        let index = dataItem.get(\"index\");\r\n        if (!$type.isNumber(index)) {\r\n            index = this.categoryToIndex(dataItem.get(\"category\"));\r\n        }\r\n        let position = this.indexToPosition(index, categoryLocation);\r\n        let endCategory = dataItem.get(\"endCategory\");\r\n        let endIndex;\r\n        if (endCategory) {\r\n            endIndex = this.categoryToIndex(endCategory);\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = index;\r\n            }\r\n        }\r\n        else {\r\n            endIndex = index;\r\n        }\r\n        let endPosition = this.indexToPosition(endIndex, endCategoryLocation);\r\n        let fillEndIndex;\r\n        let fillEndPosition;\r\n        if (dataItem.get(\"isRange\")) {\r\n            fillEndIndex = endIndex;\r\n        }\r\n        else {\r\n            fillEndIndex = index + this._frequency - 1;\r\n        }\r\n        fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        const fillRule = this.get(\"fillRule\");\r\n        if (fillRule) {\r\n            fillRule(dataItem, fillIndex);\r\n        }\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    baseValue() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    basePosition() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         X coordinate\r\n     */\r\n    getX(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns Y coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         Y coordinate\r\n     */\r\n    getY(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * Converts category index to a relative position.\r\n     *\r\n     * `location` indicates relative position within category: 0 - start, 1 - end.\r\n     *\r\n     * If not set, will use middle (0.5) of the category.\r\n     *\r\n     * @param   index     Index\r\n     * @param   location  Location\r\n     * @return            Index\r\n     */\r\n    indexToPosition(index, location) {\r\n        if (!$type.isNumber(location)) {\r\n            location = 0.5;\r\n        }\r\n        let len = this.dataItems.length;\r\n        let startLocation = this.get(\"startLocation\", 0);\r\n        let endLocation = this.get(\"endLocation\", 1);\r\n        len -= startLocation;\r\n        len -= (1 - endLocation);\r\n        let position = (index + location - startLocation) / len;\r\n        let dataItem = this.dataItems[index];\r\n        if (dataItem) {\r\n            position += dataItem.get(\"deltaPosition\", 0);\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * Returns a position of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Position\r\n     */\r\n    categoryToPosition(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return this.indexToPosition(dataItem.get(\"index\"));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns an index of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Index\r\n     */\r\n    categoryToIndex(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return dataItem.get(\"index\");\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dataItemToPosition(dataItem) {\r\n        return this.indexToPosition(dataItem.get(\"index\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        position += (0.5 - location) / this.dataItems.length;\r\n        return this.indexToPosition(this.axisPositionToIndex(position), location);\r\n    }\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    axisPositionToIndex(position) {\r\n        let len = this.dataItems.length;\r\n        return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        //@todo number formatter + tag\r\n        const dataItem = this.dataItems[this.axisPositionToIndex(position)];\r\n        if (dataItem) {\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                return populateString(label, this.get(\"tooltipText\", \"\"));\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\r\n        tooltip.label.text.markDirtyText();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        if (this.dataItems.length > 0) {\r\n            let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n            let index = this.axisPositionToIndex(position);\r\n            // try simple first\r\n            let seriesDataItem = series.dataItems[index];\r\n            let axisDataItem = this.dataItems[index];\r\n            let category = axisDataItem.get(\"category\");\r\n            if (seriesDataItem && axisDataItem) {\r\n                if (seriesDataItem.get(fieldName) === category) {\r\n                    return seriesDataItem;\r\n                }\r\n            }\r\n            // if not found, try looking\r\n            for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                let dataItem = series.dataItems[i];\r\n                if (dataItem.get(fieldName) === category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` indexes.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start index\r\n     * @param  end       End index\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToIndexes(start, end, duration) {\r\n        let len = this.dataItems.length;\r\n        this.zoom(start / len, end / len, duration);\r\n    }\r\n    zoomToCategories(startCategory, endCategory, duration) {\r\n        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\r\n    }\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        const position = this.getPrivate(\"tooltipPosition\", 0);\r\n        const index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\r\n        return this.toGlobalPosition(this.indexToPosition(index));\r\n    }\r\n}\r\nObject.defineProperty(CategoryAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CategoryAxis\"\r\n});\r\nObject.defineProperty(CategoryAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([CategoryAxis.className])\r\n});\r\n//# sourceMappingURL=CategoryAxis.js.map","import { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabel\"\r\n});\r\nObject.defineProperty(AxisLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([AxisLabel.className])\r\n});\r\n//# sourceMappingURL=AxisLabel.js.map","import { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nexport class AxisTick extends Tick {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisTick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisTick\"\r\n});\r\nObject.defineProperty(AxisTick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Tick.classNames.concat([AxisTick.className])\r\n});\r\n//# sourceMappingURL=AxisTick.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nexport class AxisRenderer extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        // save for quick access\r\n        Object.defineProperty(this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.ticks.template])))\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Grid._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.grid.template])))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template])))\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template])))\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\r\n         */\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem, themeTags) {\r\n        const tick = this.ticks.make();\r\n        tick._setDataItem(dataItem);\r\n        dataItem.setRaw(\"tick\", tick);\r\n        tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.push(tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeGrid(dataItem, themeTags) {\r\n        const grid = this.grid.make();\r\n        grid._setDataItem(dataItem);\r\n        dataItem.setRaw(\"grid\", grid);\r\n        grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(grid);\r\n        this.grid.push(grid);\r\n        return grid;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeAxisFill(dataItem, themeTags) {\r\n        const axisFill = this.axisFills.make();\r\n        axisFill._setDataItem(dataItem);\r\n        axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(axisFill);\r\n        dataItem.setRaw(\"axisFill\", axisFill);\r\n        this.axisFills.push(axisFill);\r\n        return axisFill;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem, themeTags) {\r\n        const label = this.labels.make();\r\n        label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.moveValue(label, 0);\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    axisLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    gridCount() {\r\n        return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n    }\r\n    _updatePositions() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"isMeasured\", false);\r\n        const thumb = this.thumb;\r\n        if (thumb) {\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\r\n                this._handleThumbDown(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\r\n                this._handleThumbUp(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\r\n                this._handleThumbMove(event);\r\n            }));\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"minGridDistance\")) {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.axis.markDirtySize();\r\n            });\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pan\")) {\r\n            const thumb = this.thumb;\r\n            if (thumb) {\r\n                const labelsContainer = this.axis.labelsContainer;\r\n                const pan = this.get(\"pan\");\r\n                if (pan == \"zoom\") {\r\n                    labelsContainer.children.push(thumb);\r\n                }\r\n                else if (pan == \"none\") {\r\n                    labelsContainer.children.removeValue(thumb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThumbDown(event) {\r\n        this._thumbDownPoint = this.toLocal(event.point);\r\n        const axis = this.axis;\r\n        this._downStart = axis.get(\"start\");\r\n        this._downEnd = axis.get(\"end\");\r\n    }\r\n    _handleThumbUp(_event) {\r\n        this._thumbDownPoint = undefined;\r\n    }\r\n    _handleThumbMove(event) {\r\n        const downPoint = this._thumbDownPoint;\r\n        if (downPoint) {\r\n            const point = this.toLocal(event.point);\r\n            const downStart = this._downStart;\r\n            const downEnd = this._downEnd;\r\n            const extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\r\n            this.axis.zoom(downStart - extra, downEnd + extra, 0);\r\n        }\r\n    }\r\n    _getPan(_point1, _point2) {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) { }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position = position * (end - start);\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start);\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n    }\r\n    toggleVisibility(sprite, position, minPosition, maxPosition) {\r\n        let axis = this.axis;\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n        let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n        if (position < updatedStart || position > updatedEnd) {\r\n            sprite.setPrivate(\"visible\", false);\r\n        }\r\n        else {\r\n            sprite.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    _positionTooltip(tooltip, point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n            if (!chart.inPlot(point)) {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    }\r\n    processAxis() { }\r\n}\r\nObject.defineProperty(AxisRenderer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRenderer\"\r\n});\r\nObject.defineProperty(AxisRenderer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([AxisRenderer.className])\r\n});\r\n//# sourceMappingURL=AxisRenderer.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"x\", -1000);\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0);\r\n        axis.gridContainer.set(\"x\", x);\r\n        axis.topGridContainer.set(\"x\", x);\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"width\") == null) {\r\n            axis.set(\"width\", p100);\r\n        }\r\n        ;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"y\", -1000);\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        const w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\r\n        axis.gridContainer.set(\"y\", y);\r\n        axis.topGridContainer.set(\"y\", y);\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","import { XYSeries } from \"./XYSeries\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { line, area } from \"d3-shape\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\r\nexport class LineSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_endIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: line()\r\n        });\r\n        Object.defineProperty(this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: area()\r\n        });\r\n        Object.defineProperty(this, \"_legendStroke\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_legendFill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all line segments in series.\r\n         *\r\n         * `strokes.template` can be used to set default settings for all line\r\n         * segments, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"strokes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\r\n            }, [this.strokes.template])))\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all segment fills in series.\r\n         *\r\n         * `fills.template` can be used to set default settings for all segment\r\n         * fills, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"fills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\r\n            }, [this.fills.template])))\r\n        });\r\n        // custom set from data\r\n        Object.defineProperty(this, \"_fillTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_previousPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [0, 0, 0, 0]\r\n        });\r\n        Object.defineProperty(this, \"_dindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_sindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._fillGenerator.y0(function (p) {\r\n            return p[3];\r\n        });\r\n        this._fillGenerator.x0(function (p) {\r\n            return p[2];\r\n        });\r\n        this._fillGenerator.y1(function (p) {\r\n            return p[1];\r\n        });\r\n        this._fillGenerator.x1(function (p) {\r\n            return p[0];\r\n        });\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeStroke(strokes) {\r\n        const stroke = this.mainContainer.children.push(strokes.make());\r\n        strokes.push(stroke);\r\n        return stroke;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeFill(fills) {\r\n        const fill = this.mainContainer.children.push(fills.make());\r\n        fills.push(fill);\r\n        return fill;\r\n    }\r\n    _updateChildren() {\r\n        this._strokeTemplate = undefined;\r\n        this._fillTemplate = undefined;\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        if (this.isDirty(\"stroke\")) {\r\n            const stroke = this.get(\"stroke\");\r\n            this.strokes.template.set(\"stroke\", stroke);\r\n            const legendStroke = this._legendStroke;\r\n            if (legendStroke) {\r\n                legendStroke.states.lookup(\"default\").set(\"stroke\", stroke);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            const fill = this.get(\"fill\");\r\n            this.fills.template.set(\"fill\", fill);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fill\", fill);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillPattern\")) {\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            this.fills.template.set(\"fillPattern\", fillPattern);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fillPattern\", fillPattern);\r\n            }\r\n        }\r\n        if (this.isDirty(\"curveFactory\")) {\r\n            const curveFactory = this.get(\"curveFactory\");\r\n            if (curveFactory) {\r\n                this._strokeGenerator.curve(curveFactory);\r\n                this._fillGenerator.curve(curveFactory);\r\n            }\r\n        }\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\r\n                this.fills.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.strokes.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.axisRanges.each((axisRange) => {\r\n                    let fills = axisRange.fills;\r\n                    if (fills) {\r\n                        fills.each((fill) => {\r\n                            fill.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                    let strokes = axisRange.strokes;\r\n                    if (strokes) {\r\n                        strokes.each((stroke) => {\r\n                            stroke.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                });\r\n                let startIndex = this.startIndex();\r\n                let strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n                let fillTemplateField = this.fills.template.get(\"templateField\");\r\n                let strokeTemplateFound = true;\r\n                let fillTemplateFound = true;\r\n                if (strokeTemplateField) {\r\n                    strokeTemplateFound = false;\r\n                }\r\n                if (fillTemplateField) {\r\n                    fillTemplateFound = false;\r\n                }\r\n                for (let i = startIndex - 1; i >= 0; i--) {\r\n                    let dataItem = this.dataItems[i];\r\n                    let hasValues = true;\r\n                    let dataContext = dataItem.dataContext;\r\n                    if (strokeTemplateField) {\r\n                        if (dataContext[strokeTemplateField]) {\r\n                            strokeTemplateFound = true;\r\n                        }\r\n                    }\r\n                    if (fillTemplateField) {\r\n                        if (dataContext[fillTemplateField]) {\r\n                            fillTemplateFound = true;\r\n                        }\r\n                    }\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (!$type.isNumber(dataItem.get(field))) {\r\n                            hasValues = false;\r\n                        }\r\n                    });\r\n                    if (hasValues && strokeTemplateFound && fillTemplateFound) {\r\n                        startIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                let len = this.dataItems.length;\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < len) {\r\n                    endIndex++;\r\n                    for (let i = endIndex; i < len; i++) {\r\n                        let dataItem = this.dataItems[i];\r\n                        let hasValues = true;\r\n                        $array.each(this._valueFields, (field) => {\r\n                            if (!$type.isNumber(dataItem.get(field))) {\r\n                                hasValues = false;\r\n                            }\r\n                        });\r\n                        if (hasValues) {\r\n                            endIndex = i + 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                this._endIndex = endIndex;\r\n                this._clearGraphics();\r\n                this._sindex = 0;\r\n                this._dindex = startIndex;\r\n                if (this.dataItems.length == 1) {\r\n                    this._startSegment(0);\r\n                }\r\n                else {\r\n                    // this is done to avoid recursion with a lot of segments\r\n                    while (this._dindex < endIndex - 1) {\r\n                        this._startSegment(this._dindex);\r\n                        this._sindex++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _clearGraphics() {\r\n        this.strokes.clear();\r\n        this.fills.clear();\r\n        this.axisRanges.each((axisRange) => {\r\n            axisRange.fills.clear();\r\n            axisRange.strokes.clear();\r\n        });\r\n    }\r\n    _startSegment(dataItemIndex) {\r\n        let endIndex = this._endIndex;\r\n        let currentEndIndex = endIndex;\r\n        const autoGapCount = this.get(\"autoGapCount\");\r\n        const connect = this.get(\"connect\");\r\n        const fill = this.makeFill(this.fills);\r\n        const fillTemplate = this._fillTemplate;\r\n        const originalTemplate = this.fills.template;\r\n        if (fillTemplate && fillTemplate != originalTemplate) {\r\n            fill.template = fillTemplate;\r\n        }\r\n        fill.setPrivate(\"visible\", true);\r\n        const stroke = this.makeStroke(this.strokes);\r\n        const strokeTemplate = this._strokeTemplate;\r\n        if (strokeTemplate && strokeTemplate != this.strokes.template) {\r\n            stroke.template = strokeTemplate;\r\n        }\r\n        stroke.setPrivate(\"visible\", true);\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        let baseAxis = this.get(\"baseAxis\");\r\n        let vcx = this.get(\"vcx\", 1);\r\n        let vcy = this.get(\"vcy\", 1);\r\n        let xField = this._xField;\r\n        let yField = this._yField;\r\n        let xOpenField = this._xOpenField;\r\n        let yOpenField = this._yOpenField;\r\n        const xOpenFieldValue = this.get(\"openValueXField\");\r\n        const yOpenFieldValue = this.get(\"openValueYField\");\r\n        if (!xOpenFieldValue) {\r\n            xOpenField = this._xField;\r\n        }\r\n        if (!yOpenFieldValue) {\r\n            yOpenField = this._yField;\r\n        }\r\n        const stacked = this.get(\"stacked\");\r\n        const basePosX = xAxis.basePosition();\r\n        const basePosY = yAxis.basePosition();\r\n        let baseField;\r\n        if (baseAxis === yAxis) {\r\n            baseField = this._yField;\r\n        }\r\n        else {\r\n            baseField = this._xField;\r\n        }\r\n        const segments = [];\r\n        let points = [];\r\n        segments.push(points);\r\n        const strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n        const fillTemplateField = this.fills.template.get(\"templateField\");\r\n        let locationX = this.get(\"locationX\", 0.5);\r\n        let locationY = this.get(\"locationY\", 0.5);\r\n        let openLocationX = this.get(\"openLocationX\", locationX);\r\n        let openLocationY = this.get(\"openLocationY\", locationY);\r\n        const minDistance = this.get(\"minDistance\", 0);\r\n        let i;\r\n        let fillVisible = this.fills.template.get(\"visible\");\r\n        if (this.axisRanges.length > 0) {\r\n            fillVisible = true;\r\n        }\r\n        let getOpen = false;\r\n        if (stacked || xOpenFieldValue || yOpenFieldValue) {\r\n            getOpen = true;\r\n        }\r\n        const o = {\r\n            points, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\r\n        };\r\n        let rangeStrokeTemplate = this._strokeTemplate;\r\n        let rangeFillTemplate = this._fillTemplate;\r\n        for (i = dataItemIndex; i < currentEndIndex; i++) {\r\n            this._dindex = i;\r\n            const dataItem = this._dataItems[i];\r\n            let valueX = dataItem.get(xField);\r\n            let valueY = dataItem.get(yField);\r\n            if (valueX == null || valueY == null) {\r\n                if (!connect) {\r\n                    points = [];\r\n                    segments.push(points);\r\n                    o.points = points;\r\n                }\r\n            }\r\n            else {\r\n                this._getPoints(dataItem, o);\r\n            }\r\n            if (strokeTemplateField) {\r\n                let strokeTemplate = dataItem.dataContext[strokeTemplateField];\r\n                if (strokeTemplate) {\r\n                    if (!(strokeTemplate instanceof Template)) {\r\n                        strokeTemplate = Template.new(strokeTemplate);\r\n                    }\r\n                    this._strokeTemplate = strokeTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        rangeStrokeTemplate = strokeTemplate;\r\n                        stroke.template = strokeTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (fillTemplateField) {\r\n                let fillTemplate = dataItem.dataContext[fillTemplateField];\r\n                if (fillTemplate) {\r\n                    if (!(fillTemplate instanceof Template)) {\r\n                        fillTemplate = Template.new(fillTemplate);\r\n                    }\r\n                    this._fillTemplate = fillTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        rangeFillTemplate = fillTemplate;\r\n                        fill.template = fillTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (!connect) {\r\n                let nextItem = this.dataItems[i + 1];\r\n                if (nextItem) {\r\n                    if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\r\n                        points = [];\r\n                        segments.push(points);\r\n                        o.points = points;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n        stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        if (i === endIndex) {\r\n            this._endLine(points, segments[0][0]);\r\n        }\r\n        if (stroke) {\r\n            this._drawStroke(stroke, segments);\r\n        }\r\n        if (fill) {\r\n            this._drawFill(fill, segments);\r\n        }\r\n        this.axisRanges.each((axisRange) => {\r\n            const container = axisRange.container;\r\n            const fills = axisRange.fills;\r\n            const fill = this.makeFill(fills);\r\n            if (container) {\r\n                container.children.push(fill);\r\n            }\r\n            fill.setPrivate(\"visible\", true);\r\n            this._drawFill(fill, segments);\r\n            const strokes = axisRange.strokes;\r\n            const stroke = this.makeStroke(strokes);\r\n            if (container) {\r\n                container.children.push(stroke);\r\n            }\r\n            if (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\r\n                stroke.template = rangeStrokeTemplate;\r\n            }\r\n            if (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\r\n                fill.template = rangeFillTemplate;\r\n            }\r\n            stroke.setPrivate(\"visible\", true);\r\n            this._drawStroke(stroke, segments);\r\n            fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n            stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        });\r\n    }\r\n    _getPoints(dataItem, o) {\r\n        let points = o.points;\r\n        let itemLocationX = dataItem.get(\"locationX\", o.locationX);\r\n        let itemLocationY = dataItem.get(\"locationY\", o.locationY);\r\n        const exactLocationX = this.get(\"exactLocationX\", false);\r\n        const exactLocationY = this.get(\"exactLocationY\", false);\r\n        let xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx, exactLocationX);\r\n        let yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy, exactLocationY);\r\n        if (this._shouldInclude(xPos)) {\r\n            const iPoint = this.getPoint(xPos, yPos);\r\n            const point = [iPoint.x, iPoint.y];\r\n            iPoint.x += this._x;\r\n            iPoint.y += this._y;\r\n            dataItem.set(\"point\", iPoint);\r\n            if (o.fillVisible) {\r\n                let xPos0 = xPos;\r\n                let yPos0 = yPos;\r\n                if (o.baseAxis === o.xAxis) {\r\n                    yPos0 = o.basePosY;\r\n                }\r\n                else if (o.baseAxis === o.yAxis) {\r\n                    xPos0 = o.basePosX;\r\n                }\r\n                if (o.getOpen) {\r\n                    let valueX = dataItem.get(o.xOpenField);\r\n                    let valueY = dataItem.get(o.yOpenField);\r\n                    if (valueX != null && valueY != null) {\r\n                        let itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\r\n                        let itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\r\n                        if (o.stacked) {\r\n                            let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                            let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                            if (stackToItemX) {\r\n                                xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, stackToItemX.component.get(\"vcx\"), exactLocationX);\r\n                                if ($type.isNaN(xPos0)) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.yAxis === o.baseAxis) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                                else {\r\n                                    xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\r\n                                }\r\n                            }\r\n                            if (stackToItemY) {\r\n                                yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, stackToItemY.component.get(\"vcy\"), exactLocationY);\r\n                                if ($type.isNaN(yPos0)) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.xAxis === o.baseAxis) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                                else {\r\n                                    yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\r\n                            yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\r\n                        }\r\n                    }\r\n                }\r\n                let closeIPoint = this.getPoint(xPos0, yPos0);\r\n                point[2] = closeIPoint.x;\r\n                point[3] = closeIPoint.y;\r\n            }\r\n            if (o.minDistance > 0) {\r\n                const p0 = point[0];\r\n                const p1 = point[1];\r\n                const p2 = point[2];\r\n                const p3 = point[3];\r\n                const prev = this._previousPoint;\r\n                const pp0 = prev[0];\r\n                const pp1 = prev[1];\r\n                const pp2 = prev[2];\r\n                const pp3 = prev[3];\r\n                if (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\r\n                    points.push(point);\r\n                    this._previousPoint = point;\r\n                }\r\n            }\r\n            else {\r\n                points.push(point);\r\n            }\r\n        }\r\n    }\r\n    _endLine(_points, _firstPoint) {\r\n    }\r\n    _drawStroke(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._strokeGenerator.context(display);\r\n                    this._strokeGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _drawFill(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._fillGenerator.context(display);\r\n                    this._fillGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.fills = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\r\n        }, [this.fills.template, axisRange.fills.template]));\r\n        axisRange.strokes = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\r\n        }, [this.strokes.template, axisRange.strokes.template]));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const marker = legendDataItem.get(\"marker\");\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                markerRectangle.setPrivate(\"visible\", false);\r\n            }\r\n            marker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }));\r\n            const legendStroke = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\r\n            }, [this.strokes.template]));\r\n            this._legendStroke = legendStroke;\r\n            const legendFill = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\r\n            }, [this.fills.template]));\r\n            this._legendFill = legendFill;\r\n            const disabledColor = this._root.interfaceColors.get(\"disabled\");\r\n            legendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            legendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            if (this.bullets.length > 0) {\r\n                const bulletFunction = this.bullets.getIndex(0);\r\n                if (bulletFunction) {\r\n                    const bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\r\n                    if (bullet) {\r\n                        const sprite = bullet.get(\"sprite\");\r\n                        if (sprite instanceof Graphics) {\r\n                            sprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                        }\r\n                        if (sprite) {\r\n                            sprite.setAll({\r\n                                tooltipText: undefined,\r\n                                tooltipHTML: undefined,\r\n                                focusable: undefined,\r\n                                focusableGroup: undefined,\r\n                                ariaLabel: undefined\r\n                            });\r\n                            marker.children.push(sprite);\r\n                            sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            marker.events.on(\"boundschanged\", () => {\r\n                                sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(LineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LineSeries\"\r\n});\r\nObject.defineProperty(LineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([LineSeries.className])\r\n});\r\n//# sourceMappingURL=LineSeries.js.map","/**\r\n * @ignore\r\n */\r\nexport class MonotoneXTension {\r\n    constructor(context, tension) {\r\n        Object.defineProperty(this, \"_line\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_t0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tension\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this._context = context;\r\n        this._tension = tension;\r\n    }\r\n    areaStart() {\r\n        this._line = 0;\r\n    }\r\n    areaEnd() {\r\n        this._line = NaN;\r\n    }\r\n    lineStart() {\r\n        this._x0 = this._x1 =\r\n            this._y0 = this._y1 =\r\n                this._t0 = NaN;\r\n        this._point = 0;\r\n    }\r\n    lineEnd() {\r\n        switch (this._point) {\r\n            case 2:\r\n                this._context.lineTo(this._x1, this._y1);\r\n                break;\r\n            case 3:\r\n                point(this, this._t0, slope2(this, this._t0));\r\n                break;\r\n        }\r\n        if (this._line || (this._line !== 0 && this._point === 1))\r\n            this._context.closePath();\r\n        this._line = 1 - this._line;\r\n    }\r\n    point(x, y) {\r\n        let t1 = NaN;\r\n        x = +x, y = +y;\r\n        if (x === this._x1 && y === this._y1)\r\n            return; // Ignore coincident points.\r\n        switch (this._point) {\r\n            case 0:\r\n                this._point = 1;\r\n                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\r\n                break;\r\n            case 1:\r\n                this._point = 2;\r\n                break;\r\n            case 2:\r\n                this._point = 3;\r\n                point(this, slope2(this, t1 = slope3(this, x, y)), t1);\r\n                break;\r\n            default:\r\n                point(this, this._t0, t1 = slope3(this, x, y));\r\n                break;\r\n        }\r\n        this._x0 = this._x1, this._x1 = x;\r\n        this._y0 = this._y1, this._y1 = y;\r\n        this._t0 = t1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function curveMonotoneXTension(tension) {\r\n    function monotoneXTension(context) {\r\n        return new MonotoneXTension(context, tension);\r\n    }\r\n    return monotoneXTension;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction sign(x) {\r\n    return x < 0 ? -1 : 1;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope3(that, x2, y2) {\r\n    let h0 = (that._x1 - that._x0);\r\n    let h1 = (x2 - that._x1);\r\n    let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\r\n    let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\r\n    let p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope2(that, t) {\r\n    let h = that._x1 - that._x0;\r\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction point(that, t0, t1) {\r\n    let x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 1.5 * (1 - that._tension);\r\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\r\n}\r\n//# sourceMappingURL=MonotoneXTension.js.map","import { LineSeries } from \"./LineSeries\";\r\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\r\n/**\r\n * Smoothed line series suitable for horizontal plots.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\r\n */\r\nexport class SmoothedXLineSeries extends LineSeries {\r\n    _afterNew() {\r\n        this._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n        super._afterNew();\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"tension\")) {\r\n            this.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n            this._valuesDirty = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n}\r\nObject.defineProperty(SmoothedXLineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SmoothedXLineSeries\"\r\n});\r\nObject.defineProperty(SmoothedXLineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: LineSeries.classNames.concat([SmoothedXLineSeries.className])\r\n});\r\n//# sourceMappingURL=SmoothedXLineSeries.js.map","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\r\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class PercentDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/percent\r\n         * ========================================================================\r\n         */\r\n        r(\"PercentSeries\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{valuePercentTotal.formatNumber('0.00p')}\",\r\n            colors: ColorSet.new(this._root, {}),\r\n            width: p100,\r\n            height: p100\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/pie\r\n         * ========================================================================\r\n         */\r\n        r(\"PieChart\").setAll({\r\n            radius: percent(80),\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").setAll({\r\n            alignLabels: true,\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").states.create(\"hidden\", { endAngle: -90, opacity: 0 });\r\n        r(\"Slice\", [\"pie\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            x: 0,\r\n            y: 0,\r\n            toggleKey: \"active\",\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            role: \"figure\",\r\n            lineJoin: \"round\"\r\n        });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"active\", { shiftRadius: 20, scale: 1 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hoverActive\", { scale: 1.04 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hover\", { scale: 1.04 });\r\n        r(\"RadialLabel\", [\"pie\"]).setAll({\r\n            textType: \"aligned\",\r\n            radius: 10,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            populateText: true\r\n        });\r\n        r(\"Tick\", [\"pie\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/funnel\r\n         * ========================================================================\r\n         */\r\n        r(\"SlicedChart\").setAll({\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Funnel\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"FunnelSeries\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            orientation: \"vertical\",\r\n            alignLabels: true,\r\n            sequencedInterpolation: true\r\n        });\r\n        r(\"FunnelSlice\").setAll({\r\n            interactive: true,\r\n            expandDistance: 0,\r\n            //tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"FunnelSlice\").states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"funnel\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"funnel\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        // Class: Label\r\n        r(\"Label\", [\"funnel\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"funnel\"]).setAll({\r\n            location: 1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            strokeOpacity: 0,\r\n            expandDistance: -0.1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"vertical\"]).setAll({\r\n            height: 10,\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"horizontal\"]).setAll({\r\n            width: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pyramid\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"PyramidSeries\").setAll({\r\n            valueIs: \"area\"\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\"]).setAll({\r\n            fillOpacity: 0.5\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"vertical\"]).setAll({\r\n            height: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"horizontal\"]).setAll({\r\n            width: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).setAll({\r\n            interactive: true,\r\n            expandDistance: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"pyramid\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"pyramid\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pictorial\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: FunnelSlice\r\n        r(\"FunnelSlice\", [\"pictorial\"]).setAll({\r\n            interactive: true,\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"Label\", [\"pictorial\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pictorial\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        r(\"Tick\", [\"pictorial\"]).setAll({\r\n            location: 0.5\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"pictorial\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.2\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=PercentDefaultTheme.js.map","import { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { PercentDefaultTheme } from \"./PercentDefaultTheme\";\r\n/**\r\n * Base class for [[PieChart]].\r\n *\r\n * Also used for percent-based series, like [[FunnelSeries]], [[PyramidSeries]], etc.\r\n *\r\n * @important\r\n */\r\nexport class PercentChart extends SerialChart {\r\n    _afterNew() {\r\n        this._defaultThemes.push(PercentDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this.chartContainer.children.push(this.seriesContainer);\r\n        this.seriesContainer.children.push(this.bulletsContainer);\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        this.seriesContainer.children.moveValue(this.bulletsContainer, this.seriesContainer.children.length - 1);\r\n    }\r\n}\r\nObject.defineProperty(PercentChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentChart\"\r\n});\r\nObject.defineProperty(PercentChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([PercentChart.className])\r\n});\r\n//# sourceMappingURL=PercentChart.js.map","import { __awaiter } from \"tslib\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { visualSettings } from \"../../core/render/Graphics\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A base class for any percent chart series.\r\n */\r\nexport class PercentSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"slicesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"ticksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_lLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_rLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_hLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slices in series.\r\n         *\r\n         * `slices.template` can also be used to configure slices.\r\n         */\r\n        Object.defineProperty(this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeSlices())\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure slice labels.\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeLabels())\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice ticks in series.\r\n         *\r\n         * `ticks.template` can also be used to configure slice ticks.\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(this._makeTicks())\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeSlice(dataItem) {\r\n        const slice = this.slicesContainer.children.push(this.slices.make());\r\n        slice.on(\"fill\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"fillPattern\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"stroke\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice._setDataItem(dataItem);\r\n        dataItem.set(\"slice\", slice);\r\n        this.slices.push(slice);\r\n        return slice;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem) {\r\n        const label = this.labelsContainer.children.push(this.labels.make());\r\n        label._setDataItem(dataItem);\r\n        dataItem.set(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        if (dataItem.get(\"value\") != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem) {\r\n        const tick = this.ticksContainer.children.push(this.ticks.make());\r\n        tick._setDataItem(dataItem);\r\n        dataItem.set(\"tick\", tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"category\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    _onDataClear() {\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n        const patterns = this.get(\"patterns\");\r\n        if (patterns) {\r\n            patterns.reset();\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._lLabels = [];\r\n        this._rLabels = [];\r\n        this._hLabels = [];\r\n        if (this._valuesDirty) {\r\n            let sum = 0;\r\n            let absSum = 0;\r\n            let valueHigh = 0;\r\n            let valueLow = Infinity;\r\n            let count = 0;\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let valueWorking = dataItem.get(\"valueWorking\", 0);\r\n                sum += valueWorking;\r\n                absSum += Math.abs(valueWorking);\r\n            });\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let value = dataItem.get(\"valueWorking\", 0);\r\n                if (value > valueHigh) {\r\n                    valueHigh = value;\r\n                }\r\n                if (value < valueLow) {\r\n                    valueLow = value;\r\n                }\r\n                count++;\r\n                let percentTotal = value / absSum;\r\n                if (absSum == 0) {\r\n                    percentTotal = 0;\r\n                }\r\n                dataItem.setRaw(\"valuePercentTotal\", percentTotal * 100);\r\n            });\r\n            this.setPrivateRaw(\"valueLow\", valueLow);\r\n            this.setPrivateRaw(\"valueHigh\", valueHigh);\r\n            this.setPrivateRaw(\"valueSum\", sum);\r\n            this.setPrivateRaw(\"valueAverage\", sum / count);\r\n            this.setPrivateRaw(\"valueAbsoluteSum\", absSum);\r\n        }\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hide whole series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this._valuesDirty) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                dataItem.get(\"label\").text.markDirtyText();\r\n            });\r\n        }\r\n        if (this.isDirty(\"legendLabelText\") || this.isDirty(\"legendValueText\")) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                this.updateLegendValue(dataItem);\r\n            });\r\n        }\r\n        this._arrange();\r\n    }\r\n    _arrange() {\r\n        this._arrangeDown(this._lLabels);\r\n        this._arrangeUp(this._lLabels);\r\n        this._arrangeDown(this._rLabels);\r\n        this._arrangeUp(this._rLabels);\r\n        this._arrangeLeft(this._hLabels);\r\n        this._arrangeRight(this._hLabels);\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            this._updateTick(dataItem);\r\n        });\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        this._arrange();\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n        if (dataItem.get(\"fillPattern\") == null) {\r\n            let patterns = this.get(\"patterns\");\r\n            if (patterns) {\r\n                dataItem.setRaw(\"fillPattern\", patterns.next());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            let value = dataItem.get(\"value\");\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: value, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.show(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.show(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                promises.push(slice.show(duration));\r\n            }\r\n            if (slice.get(\"active\")) {\r\n                slice.states.applyAnimate(\"active\");\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.hide(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.hide(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            slice.hideTooltip();\r\n            if (slice) {\r\n                promises.push(slice.hide(duration));\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            this.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        let slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            this.slices.removeValue(slice);\r\n            slice.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice && !slice.isHidden()) {\r\n            slice.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            slice.unhover();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        if (dataItem) {\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const legendDataItem = dataItem.get(\"legendDataItem\");\r\n                if (legendDataItem) {\r\n                    const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                    $array.each(visualSettings, (setting) => {\r\n                        if (slice.get(setting) != null) {\r\n                            markerRectangle.set(setting, slice.get(setting));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _arrangeDown(labels) {\r\n        if (labels) {\r\n            let next = this._getNextDown();\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelTop = bounds.top;\r\n                if (l.y + labelTop < next) {\r\n                    l.y = next - labelTop;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.bottom;\r\n            });\r\n        }\r\n    }\r\n    _getNextUp() {\r\n        return this.labelsContainer.maxHeight();\r\n    }\r\n    _getNextDown() {\r\n        return 0;\r\n    }\r\n    _arrangeUp(labels) {\r\n        if (labels) {\r\n            let next = this._getNextUp();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelBottom = bounds.bottom;\r\n                if (l.y + labelBottom > next) {\r\n                    l.y = next - labelBottom;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.top;\r\n            });\r\n        }\r\n    }\r\n    _arrangeRight(labels) {\r\n        if (labels) {\r\n            let next = 0;\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelLeft = bounds.left;\r\n                if (l.y + labelLeft < next) {\r\n                    l.y = next - labelLeft;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.right;\r\n            });\r\n        }\r\n    }\r\n    _arrangeLeft(labels) {\r\n        if (labels) {\r\n            let next = this.labelsContainer.maxWidth();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelRight = bounds.right;\r\n                if (l.y + labelRight > next) {\r\n                    l.y = next - labelRight;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.left;\r\n            });\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirty();\r\n    }\r\n    _updateTick(_dataItem) {\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PercentSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentSeries\"\r\n});\r\nObject.defineProperty(PercentSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([PercentSeries.className])\r\n});\r\n//# sourceMappingURL=PercentSeries.js.map","import { Percent } from \"../../core/util/Percent\";\r\nimport { PercentChart } from \"../percent/PercentChart\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates a pie chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieChart extends PercentChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_maxRadius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.seriesContainer.setAll({ x: p50, y: p50 });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chartContainer = this.chartContainer;\r\n        const w = chartContainer.innerWidth();\r\n        const h = chartContainer.innerHeight();\r\n        const startAngle = this.get(\"startAngle\", 0);\r\n        const endAngle = this.get(\"endAngle\", 0);\r\n        const innerRadius = this.get(\"innerRadius\");\r\n        let bounds = $math.getArcBounds(0, 0, startAngle, endAngle, 1);\r\n        const wr = w / (bounds.right - bounds.left);\r\n        const hr = h / (bounds.bottom - bounds.top);\r\n        let innerBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n        if (innerRadius instanceof Percent) {\r\n            let value = innerRadius.value;\r\n            let mr = Math.min(wr, hr);\r\n            value = Math.max(mr * value, mr - Math.min(h, w)) / mr;\r\n            innerBounds = $math.getArcBounds(0, 0, startAngle, endAngle, value);\r\n            this.setPrivateRaw(\"irModifyer\", value / innerRadius.value);\r\n        }\r\n        bounds = $math.mergeBounds([bounds, innerBounds]);\r\n        const prevRadius = this._maxRadius;\r\n        this._maxRadius = Math.min(wr, hr);\r\n        const radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        this.seriesContainer.setAll({\r\n            dy: -radius * (bounds.bottom + bounds.top) / 2, dx: -radius * (bounds.right + bounds.left) / 2\r\n        });\r\n        if (this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || prevRadius != this._maxRadius) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"startAngle\");\r\n            });\r\n        }\r\n        if (this.isDirty(\"innerRadius\") || this.isDirty(\"radius\")) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"innerRadius\");\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns outer radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return outer radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    radius(series) {\r\n        let radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesRadius = series.get(\"radius\");\r\n            if (seriesRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * (index + 1);\r\n            }\r\n        }\r\n        return radius;\r\n    }\r\n    /**\r\n     * Returns inner radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return inner radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    innerRadius(series) {\r\n        const radius = this.radius();\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesInnerRadius = series.get(\"innerRadius\");\r\n            if (seriesInnerRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesInnerRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * index;\r\n            }\r\n        }\r\n        return innerRadius;\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirtyKey(\"radius\");\r\n    }\r\n}\r\nObject.defineProperty(PieChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieChart\"\r\n});\r\nObject.defineProperty(PieChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentChart.classNames.concat([PieChart.className])\r\n});\r\n//# sourceMappingURL=PieChart.js.map","import { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a series for a [[PieChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieSeries extends PercentSeries {\r\n    _makeSlices() {\r\n        return new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.slices.template]));\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => RadialLabel._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.labels.template]));\r\n    }\r\n    _makeTicks() {\r\n        return new ListTemplate(Template.new({}), () => Tick._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.ticks.template]));\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const slice = this.makeSlice(dataItem);\r\n        slice.on(\"scale\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.on(\"shiftRadius\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        const label = this.makeLabel(dataItem);\r\n        label.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        this.makeTick(dataItem);\r\n        slice.events.on(\"positionchanged\", () => {\r\n            label.markDirty();\r\n        });\r\n    }\r\n    _getNextUp() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart._maxRadius;\r\n        }\r\n        return this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _getNextDown() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return -chart._maxRadius;\r\n        }\r\n        return -this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (this.isDirty(\"alignLabels\")) {\r\n                let labelsTemplate = this.labels.template;\r\n                if (this.get(\"alignLabels\")) {\r\n                    labelsTemplate.set(\"textType\", \"aligned\");\r\n                }\r\n                else {\r\n                    let textType = labelsTemplate.get(\"textType\");\r\n                    if (textType == null || textType == \"aligned\") {\r\n                        labelsTemplate.set(\"textType\", \"adjusted\");\r\n                    }\r\n                }\r\n            }\r\n            if (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\r\n                this.markDirtyBounds();\r\n                const startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n                const endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n                const arc = endAngle - startAngle;\r\n                let currentAngle = startAngle;\r\n                const radius = chart.radius(this);\r\n                this.setPrivateRaw(\"radius\", radius);\r\n                let innerRadius = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\r\n                if (innerRadius < 0) {\r\n                    innerRadius = radius + innerRadius;\r\n                }\r\n                //if (radius > 0) {\r\n                $array.each(this._dataItems, (dataItem) => {\r\n                    this.updateLegendValue(dataItem);\r\n                    let currentArc = arc * dataItem.get(\"valuePercentTotal\") / 100;\r\n                    const slice = dataItem.get(\"slice\");\r\n                    if (slice) {\r\n                        slice.set(\"radius\", radius);\r\n                        slice.set(\"innerRadius\", innerRadius);\r\n                        slice.set(\"startAngle\", currentAngle);\r\n                        slice.set(\"arc\", currentArc);\r\n                        const color = dataItem.get(\"fill\");\r\n                        slice._setDefault(\"fill\", color);\r\n                        slice._setDefault(\"stroke\", color);\r\n                        const fillPattern = dataItem.get(\"fillPattern\");\r\n                        slice._setDefault(\"fillPattern\", fillPattern);\r\n                    }\r\n                    let middleAngle = $math.normalizeAngle(currentAngle + currentArc / 2);\r\n                    const label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.setPrivate(\"radius\", radius);\r\n                        label.setPrivate(\"innerRadius\", innerRadius);\r\n                        label.set(\"labelAngle\", middleAngle);\r\n                        if (label.get(\"textType\") == \"aligned\") {\r\n                            let labelRadius = radius + label.get(\"radius\", 0);\r\n                            let y = radius * $math.sin(middleAngle);\r\n                            if (middleAngle > 90 && middleAngle <= 270) {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._lLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius *= -1;\r\n                                labelRadius -= this.labelsContainer.get(\"paddingLeft\", 0);\r\n                                label.set(\"centerX\", p100);\r\n                                label.setPrivateRaw(\"left\", true);\r\n                            }\r\n                            else {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._rLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius += this.labelsContainer.get(\"paddingRight\", 0);\r\n                                label.set(\"centerX\", 0);\r\n                                label.setPrivateRaw(\"left\", false);\r\n                            }\r\n                            label.set(\"x\", labelRadius);\r\n                            label.set(\"y\", radius * $math.sin(middleAngle));\r\n                        }\r\n                    }\r\n                    currentAngle += currentArc;\r\n                    this._updateTick(dataItem);\r\n                });\r\n                //}\r\n            }\r\n        }\r\n    }\r\n    _updateTick(dataItem) {\r\n        const tick = dataItem.get(\"tick\");\r\n        const label = dataItem.get(\"label\");\r\n        const slice = dataItem.get(\"slice\");\r\n        const location = tick.get(\"location\", 1);\r\n        if (tick && label && slice) {\r\n            const radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\r\n            const labelAngle = label.get(\"labelAngle\", 0);\r\n            const cos = $math.cos(labelAngle);\r\n            const sin = $math.sin(labelAngle);\r\n            const labelsContainer = this.labelsContainer;\r\n            const pl = labelsContainer.get(\"paddingLeft\", 0);\r\n            const pr = labelsContainer.get(\"paddingRight\", 0);\r\n            let x = 0;\r\n            let y = 0;\r\n            x = label.x();\r\n            y = label.y();\r\n            let points = [];\r\n            if (x != 0 || y != 0) {\r\n                if (label.get(\"textType\") == \"circular\") {\r\n                    const labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\r\n                    const labelAngle = label.get(\"labelAngle\", 0);\r\n                    x = labelRadius * $math.cos(labelAngle);\r\n                    y = labelRadius * $math.sin(labelAngle);\r\n                }\r\n                let dx = -pr;\r\n                if (label.getPrivate(\"left\")) {\r\n                    dx = pl;\r\n                }\r\n                points = [{ x: slice.x() + radius * cos, y: slice.y() + radius * sin }, { x: x + dx, y: y }, { x: x, y: y }];\r\n            }\r\n            tick.set(\"points\", points);\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const innerRadius = slice.get(\"innerRadius\", 0);\r\n                const radius = slice.get(\"radius\", 0);\r\n                const startAngle = slice.get(\"startAngle\", 0);\r\n                const arc = slice.get(\"arc\", 0);\r\n                const locationX = bullet.get(\"locationX\", 0.5);\r\n                const locationY = bullet.get(\"locationY\", 0.5);\r\n                const angle = startAngle + arc * locationX;\r\n                const r = innerRadius + (radius - innerRadius) * locationY;\r\n                sprite.setAll({ x: $math.cos(angle) * r, y: $math.sin(angle) * r });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PieSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieSeries\"\r\n});\r\nObject.defineProperty(PieSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentSeries.classNames.concat([PieSeries.className])\r\n});\r\n//# sourceMappingURL=PieSeries.js.map"],"names":["f","require$$0","k","l","m","n","p","q","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","rejected","result","Percent","percent","min","max","p100","p50","isPercent","isNaN","getType","toNumber","isNumber","converted","isString","toDate","isDate","num","numberToString","negative","parsed","digits","decimals","res","exponent","zeros","repeat","string","amount","isObject","PLACEHOLDER","PLACEHOLDER2","indexOf","array","length","any","test","map","fn","output","i","each","eachReverse","eachContinue","remove","element","found","index","removeFirst","move","toIndex","removeIndex","pushOne","copy","insertIndex","findIndex","matches","findIndexReverse","find","findReverse","getSortedIndex","ordering","start","end","pivot","order","getFirstSortedIndex","keepIf","keep","keys","object","keysOrdered","key","hasKey","DisposerClass","Disposer","dispose","ArrayDisposer","$array.each","x","MultiDisposer","disposers","CounterDisposer","removeElement","el","addEventListener","dom","type","listener","options","onZoom","_ev","supports","cap","getPointerId","event","blur","input","focus","getRendererEvent","isTouchEvent","ev","setStyle","property","getStyle","getEventTarget","path","contains","cursor","isLocalEvent","target","setInteractive","interactive","getEventKey","iOS","getSafeResolution","relativeToValue","full","$type.isNumber","decimalPlaces","number","match","padString","len","char","trimLeft","text","trimRight","trim","truncateTextWithEllipsis","maxLength","breakWords","ellipsis","lastNonAlphanumericIndex","cleanFormat","format","stripTags","escapeForRgex","splitString","source","rtlChar","splitPattern","segments","segment","parts","part","getYearDay","date","utc","diff","oneDay","getWeek","_utc","day","firstDay","getWeekYear","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","week","year","weekday","get12Hours","hours","base","getTimeZone","long","savings","timezone","d1","d2","wotz","wtz","getTimezoneOffset","targetDate","utcDate","capitalizeFirst","hslToRgb","color","r","s","hue2rgb","t","rgbToHsl","lighten","rgb","getLightnessStep","brighten","isLight","saturate","saturation","hsl","alternativeColor","lightAlternative","darkAlternative","light","dark","mergeTags","tags1","tags2","self","sameBounds","string2hex","rgba2hex","hex","val","Color","alpha","$utils.padString","$utils.rgbToHsl","$utils.hslToRgb","$type.isString","$utils.alternativeColor","from","to","mode","fromHSL","toHSL","range","$utils.lighten","$utils.brighten","$utils.saturate","EventDispatcher","$array.any","once","callback","context","info","$array.findIndex","count","killed","shouldClone","dispatch","_type","waitForAnimations","animations","promises","$object.each","_","animation","defaultInterpolate","percentInterpolate","colorInterpolate","getInterpolate","AnimationState","checkBounds","List","initial","$array.indexOf","newValue","oldValue","oldIndex","newIndex","oldValues","$array.insertIndex","value_a","value_b","$array.removeIndex","values","newArray","old","$array.eachReverse","ListAutoDispose","currentAutoDispose","ListTemplate","template","make","Children","container","change","child","childrenDisplay","PI","RADIANS","DEGREES","round","precision","floor","ceil","fitToRange","sin","angle","cos","normalizeAngle","getArcBounds","cx","cy","startAngle","endAngle","radius","minX","minY","maxX","maxY","bpoints","getArcPoint","fromAngle","toAngle","pt","arc","mergeBounds","bounds","bound","left","top","right","bottom","inBounds","point","linear","cubic","out","ease","State","entity","settings","fallback","$object.keys","seen","defaultState","duration","easing","$ease.cubic","States","name","state","newState","Registry","registry","compare","compareArray","leftLength","rightLength","compareNumber","Adapters","callbacks","$array.removeFirst","Animation","loops","startingTime","_reject","stopped","currentTime","counter","Settings","playing","paused","_key","events","$ease.linear","Entity","root","isReal","templates","shouldApply","disposer","_name","_duration","other","$array.findReverse","$array.find","force","isConnected","defaults","themes","themeTags","tags","tag","theme","allRules","rules","rule","$array.getFirstSortedIndex","$order.compare","$order.compareArray","id","prevId","delay","$array.remove","locale","rest","disposeSettings","$type.isObject","TemplateState","TemplateStates","TemplateAdapters","Template","_value","SpriteEventDispatcher","sprite","rendererEvent","strokeWidth","$math.inBounds","Sprite","field","dataItem","oldDataItem","eventType","parent","$array.pushOne","centerX","$utils.relativeToValue","centerY","previous","tooltipMoveDp","tooltipPointerDp","display","draggable","tooltipText","tooltipHTML","showTooltipOn","tooltip","$utils.addEventListener","toggleKey","wheelable","filter","brightness","contrast","sepia","hue","invert","$utils.isTouchEvent","pointerId","$utils.getPointerId","downPoint","y","dragEvent","scale","dragPoint","$math.cos","$math.sin","depth","oldBounds","newBounds","minWidth","minHeight","privateWidth","privateHeight","tooltipPosition","tooltipTarget","lastTooltipCoords","promise","timeout","dx","dy","_x","xx","yy","position","_y","p0","p1","p2","p3","success","_error","opacity","rotation","width","maxWidth","w","maxHeight","height","updateChildren","prevParent","$object.keysOrdered","Pattern","repetition","fill","fillOpacity","backgroundDisplay","PicturePattern","canvas","colorOpacity","image","patternWidth","patternHeight","fit","centered","src","BlendMode","visualSettings","Graphics","gradient","gradientTarget","strokeDasharray","strokeDashoffset","blendMode","draw","svgPath","fillGradient","fillPattern","stroke","strokeGradient","strokePattern","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","stops","stop","pattern","strokeOpacity","lineJoin","lineCap","Rectangle","wSign","hSign","eachChildren","Layout","HorizontalLayout","paddingLeft","availableWidth","totalPercent","childWidth","prevX","marginLeft","marginRight","VerticalLayout","paddingTop","availableHeight","childHeight","prevY","marginTop","marginBottom","GridLayout","paddingRight","minCellWidth","maxCellWidth","$math.fitToRange","columnCount","columnWidths","column","maxColumnHeight","totalWidth","TextFormatter","quotedBlocks","noFormatting","chunks","chunk","$type.PLACEHOLDER","chunks2","i2","chunk2","style","populateString","getTagValue","tagName","reg","dateFields","numericFields","durationFields","params","$utils.trim","reg2","matches2","getTagValueFromObject","dataContext","getCustomDataValue","prop","customData","current","formatApplied","tmp","numberValue","$type.toNumber","dateValue","$type.toDate","$type.isDate","$type.isNaN","durationValue","formatParts","Container","contentMask","background","verticalScrollbar","bg","visible","pWidth","pHeight","layout","horizontal","vertical","paddingBottom","childBounds","childX","childY","cl","cr","ct","cb","innerWidth","innerHeight","html","ch","contentH","pos","wheelEvent","$utils.isLocalEvent","shiftY","mask","updated","Text","textStyle","styleName","$utils.truncateTextWithEllipsis","ariaLabel","Native","entries","entry","$array.keepIf","Raf","lastTime","loop","newSize","size","observer","makeSensor","ResizeSensor","$utils.onZoom","InterfaceColors","Label","propValue","textAlign","htmlElement","PointedRectangle","bwh","xtl","ytl","xtr","ytr","xbr","ybr","xbl","ybl","stemX","stemY","Tooltip","$utils.mergeTags","outEvent","cw","parentW","parentH","tooltipContainer","layerMargin","pointTo","pointerOrientation","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","animationDuration","animationEasing","NumberFormatter","bns","sns","bs","formatted","$utils.cleanFormat","details","$object.copy","language","thousandSeparator","decimalSeparator","$type.PLACEHOLDER2","_part","item","partFormat","mods","prefix","suffix","ol","exp","$utils.decimalPlaces","$type.numberToString","ints","ip","intsr","c","decs","prefixes","newvalue","applied","parseDate","month","hour","minute","second","millisecond","toUTCDate","Timezone","offset","userOffset","newUserOffset","dtf","DateFormatter","ignoreTimezone","locales","originalDate","fullYear","minutes","seconds","milliseconds","timestamp","$utils.getWeekYear","$utils.getWeek","$utils.getMonthWeek","$utils.getYearDay","$utils.get12Hours","$utils.getTimeZone","$utils.getTimezoneOffset","tz","tzh","tzm","dateFormat","parsedIndexes","resValues","indexAdjust","regex","$utils.getDayFromWeek","ts","zone","dir","originalOffset","list","$utils.escapeForRgex","DurationFormatter","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","dyear","asecond","aminute","ahour","aday","aweek","amonth","ayear","baseUnit","dirs","tstamp","unit","unitValue","code","maxValue","maxUnit","currentUnit","ms","$object.eachContinue","timeUnit","en","Language","prompt","translation","localeTarget","translations","$array.map","Theme","themeClass","$array.getSortedIndex","setColor","ic","DefaultTheme","horizontalLayout","verticalLayout","$ease.out","Matrix","tx","ty","pivotX","pivotY","origin","matrix","a1","b1","c1","tx1","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_i","_s","err","TAU","mapToEllipse","_ref","rx","ry","cosphi","sinphi","centerx","centery","xp","yp","approxUnitArc","ang1","ang2","x1","y1","x2","y2","vectorAngle","ux","uy","vx","vy","sign","dot","getArcCenter","px","py","largeArcFlag","sweepFlag","pxp","pyp","rxsq","rysq","pxpsq","pypsq","radicant","centerxp","centeryp","vx1","vy1","vx2","vy2","arcToBezier","_ref2","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","_ref2$sweepFlag","curves","lambda","_getArcCenter","_getArcCenter2","ratio","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","checkArgs","actual","expected","checkMinArgs","checkEvenArgs","splitArcFlags","args","flag","assertBinary","distributeId","eachTargets","hitTarget","onPointerEvent","$utils.getRendererEvent","$utils.getEventTarget","touches","$array.copy","isTainted","clearCanvas","view","crisp","CanvasPivot","CanvasDisplayObject","renderer","status","margin","$utils.setInteractive","_bounds","resolution","layer","targetGhostLayer","subStatus","layers","ghostLayer","ghostContext","$array.move","_targetGhostLayer","CanvasContainer","deep","setPoint","Op","_context","_forceColor","forceColor","BeginPath","BeginFill","EndFill","clearShadow","EndStroke","LineStyle","LineDash","dash","LineDashOffset","dashOffset","DrawRect","DrawCircle","DrawEllipse","radiusX","radiusY","Arc","anticlockwise","arcBounds","$math.getArcBounds","$math.DEGREES","ArcTo","LineTo","MoveTo","ClosePath","BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","QuadraticCurveTo","Shadow","offsetX","offsetY","GraphicsImage","CanvasGraphics","op","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","relative","layerDirty","ghostOnly","drawGhost","CanvasText","ignoreGhost","ignoreFontWeight","fontStyle","style2","line","_index","thickness","fontSize","oversizedBehavior","metrics","rtl","truncate","wrap","refText","lines","styleRestored","currentStyle","lineInfo","currentFormat","currentDecoration","currentFill","currentChunkWidth","skipFurtherText","firstTextChunk","leftoverChunks","currentVerticalAlign","$array.eachContinue","chunkWidth","ellipsisMetrics","ellipsisWidth","excessWidth","tmpText","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","currentChunkOffset","maxW","maxH","fallbackBreakWords","fakeMetrics","div","bbox","CanvasTextStyle","CanvasRadialText","deltaAngle","orientation","inward","inside","align","kerning","clockwise","shouldReverse","maxAngle","midAngle","$math.normalizeAngle","textHeight","lineStartAngle","angleShift","charWidth","chars","$utils.splitString","CanvasImage","CanvasRendererEvent","originalPoint","$utils.supports","CanvasRenderer","GhostLayer","prevent","obj","radius1","radius2","graphics","realWidth","realHeight","calculatedWidth","calculatedHeight","willReadFrequently","CanvasLayer","existingLayer","layerIndex","next","deferredGhostLayers","layerx","native","originalEvent","adjustPoint","widthScale","heightScale","pixel","colorId","data","dispatched","originalTarget","button","dragged","$utils.setStyle","$utils.getStyle","clickevent","timer","clear","mouseup","pointercancel","mousedown","mousemove","canvasWidth","canvasHeight","minScale","maxScale","canvases","forceRender","needRerender","extraX","extraY","domWidth","domHeight","rAF","fps","Root","$utils.getSafeResolution","inner","tooltipContainerBounds","logo","rect","rootContainer","htmlElementContainer","readerAlertElement","focusElementContainer","tooltipElementContainer","eventKey","$utils.getEventKey","focusedSprite","announceText","downEvent","$utils.blur","dragOffsetX","dragOffsetY","moveEvent","upEvent","group","items","lastIndex","$utils.focus","running","allParents","objects","depths","dirtyPositions","animationDone","now","endTime","$utils.removeElement","$utils.stripTags","interfaceColors","tooltipContainerSettings","aindex","bindex","groups","focusElement","role","label","ariaLive","ariaChecked","ariaCurrent","ariaSelected","ariaOrientation","ariaValueNow","ariaValueMin","ariaValueMax","ariaValueText","ariaControls","padding","focused","direction","focusableElements","targetElement","tooltipElement","scaleWidth","scaleHeight","styles","fontHash","changed","needWrapper","wrapperTarget","htmlElementWrapper","setting","lw","lh","ll","lr","lt","lb","previousBounds","originX","originY","Bullet","RoundedRectangle","minSide","crtl","crtr","crbr","crbl","maxcr","Button","icon","Circle","ListData","DataItem","component","Component","dataItems","properties","_dataItem","sleep","firstDateOfWeek","firstDate","timeZoneOffset","wday","weekDay","newTimeZoneOffset","initialTime","tzoffset","parsedDate","offsetDif","newTime","hDuration","newDiff","Series","bullets","bullet","bulletFunction","startIndex","endIndex","baseValueSeries","markerRectangle","legendDataItem","fields","sum","absSum","low","high","open","close","average","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","adjustedStartIndex","minValue","states","propertyValue","_bullet","chart","bulletsContainer","_super","show","realDuration","$time.sleep","valueLabel","txt","Legend","itemContainer","marker","nameField","fillField","strokeField","clickTarget","useDefaultMarker","clickContainer","targetA","targetB","indexA","indexB","labelText","segmentedLine","firstGroup","firstPoint","points","Line","$draw.segmentedLine","RadialText","$math.RADIANS","RadialLabel","radiusPrivate","innerRadiusPrivate","baseRadius","textType","labelAngle","constant","abs","atan2","sqrt","epsilon","pi","halfPi","tau","acos","asin","tauEpsilon","append","strings","appendRound","Path","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","a0","ccw","da","withPath","shape","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","intersect","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","innerRadius","outerRadius","cornerRadius","padRadius","padAngle","buffer","r0","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","t0","t1","oc","ax","ay","bx","by","kc","lc","Linear","curveLinear","defined","pointX","pointY","defined0","area","j","x0z","y0z","arealine","Slice","tooltipX","tooltipY","dRadius","dInnerRadius","middleAngle","shiftRadius","Chart","SerialChart","children","series","colors","patterns","aIndex","bIndex","Tick","ColorSet","pass","passOptions","reuse","currentStep","XYChartDefaultTheme","axisFill","gridIntervals","dateFormats","periodChangeDateFormats","tooltipDateFormats","axis","endValue","intervalDuration","baseInterval","gridInterval","$time.round","$math.round","XYChart","zoomOutButton","plotContainer","xAxis","yAxis","snapToSeries","wheelX","wheelY","plotPoint","wheelStep","shiftX","wheelZoomPositionX","wheelZoomPositionY","maxDeviation","newStart","newEnd","delta","se","local","panX","panY","scrollbarX","panStart","panEnd","deltaX","scrollbarY","deltaY","downPoints","movePoints","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","initialDistance","currentDistance","sa","ea","downStartY","downEndY","cursorPoint","snapToSeriesBy","tooltipDataItem","minDistance","closestItem","distance","colorSet","patternSet","behavior","downPositionX","downPositionY","positionX","positionY","position0","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","axisParent","gridContainer","gridParent","topGridContainer","topGridParent","bottomAxesContainer","topAxesContainer","otherCharts","global","chartPlotContainer","documentPoint","chartRoot","hh","plotT","plotB","tooltips","maxTooltipDistance","maxTooltipDistanceBy","closest","closestPoint","tooltipSeries","hidden","totalTooltipH","tooltipCount","$order.compareNumber","prevBottom","Grid","XYCursor","ctrlKey","inversed","syncWith","rootPoint","moveThreshold","lastPoint","skipEvent","alwaysShow","xyPos","userPositionX","userPositionY","xy","selection","XYSeries","axisRange","axisDataItem","baseAxis","minBulletDistance","xName","xCapName","$utils.capitalizeFirst","yName","yCapName","xLetter","yLetter","hiddenState","sequencedInterpolation","tooltipPositionX","tooltipFieldX","tooltipPositionY","tooltipFieldY","stacked","vcx","vcy","outOfSelection","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","mainContainerMask","seriesIndex","stackToItemKey","stackToNegative","stackToSeries","stackToItem","stackValue","stackedToSeries","locationX","locationY","exactLocationX","exactLocationY","realField","previousBullet","yo","xo","_positionX","_positionY","dataSet","baseValue","stackedSeries","itemLocationX","itemLocationY","xPos","yPos","_position","baseDuration","minSelection","dl","Axis","_start","_end","sAnimation","eAnimation","maxZoomFactor","maxZoomFactorReal","minZoomCount","maxZoomCount","minZoomFactor","above","grid","rendererTags","forceHidden","fh","tick","v","minor","_a","_b","_c","axisBullet","ghostLabel","gWidth","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","_series","ValueAxis","syncWithAxis","someDirty","getMM","letter","numberFormat","formatter","logarithmic","selectionMin","selectionMax","differencePower","minLog","minorLabelsEnabled","minorGridEnabled","stepPower","stepAdjusted","minorGridCount","minorStep","nextValue","minorValue","minorDataItem","minorLabel","decCount","endPosition","fillEndPosition","labelEndPosition","labelEndValue","fillRule","gridCount","minMaxStep","stepDecimalPlaces","treatZeroAs","location","_cellLocation","axisLocation","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","strictMinMax","seriesMin","seriesMax","smin","minMaxStep2","selectionMinReal","selectionMaxReal","minDiff","initialMin","initialMax","minAdapted","maxAdapted","strictMinMaxSelection","strict","power","_min","_max","strictMode","difference","extra","stepDivisor","maxPrecision","ceiledStep","$math.ceil","minCount","maxCount","_adjustPosition","extraDecimals","fieldName","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","CategoryAxis","startCategory","endCategory","otherAxis","startDataItem","endDataItem","hasValue","frequency","fillIndex","categoryLocation","endCategoryLocation","fillEndIndex","cellLocation","_axisLocation","category","startLocation","endLocation","seriesDataItem","AxisLabel","AxisTick","AxisRenderer","thumb","labelsContainer","pan","_event","downStart","downEnd","_point1","_point2","_tooltip","minPosition","maxPosition","updatedStart","updatedEnd","AxisRendererX","gridTemplate","opposite","axisChildren","point1","point2","axisHeader","bulletPosition","previousSprite","$utils.sameBounds","AxisRendererY","LineSeries","strokes","fills","legendStroke","legendFill","curveFactory","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataItemIndex","currentEndIndex","autoGapCount","connect","fillTemplate","originalTemplate","strokeTemplate","xField","yField","xOpenField","yOpenField","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","openLocationX","openLocationY","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","valueX","valueY","nextItem","iPoint","xPos0","yPos0","stackToItemX","stackToItemY","closeIPoint","prev","pp0","pp1","pp2","pp3","_points","_firstPoint","disabledColor","MonotoneXTension","tension","slope2","slope3","curveMonotoneXTension","monotoneXTension","that","h0","h1","s0","s1","SmoothedXLineSeries","AnimatedTheme","PercentDefaultTheme","PercentChart","PercentSeries","slice","valueHigh","valueLow","valueWorking","percentTotal","labels","labelTop","labelBottom","labelLeft","labelRight","chartContainer","wr","hr","innerBounds","mr","$math.mergeBounds","prevRadius","seriesRadius","seriesInnerRadius","PieChart","PieSeries","labelsTemplate","currentAngle","currentArc","labelRadius","pl","pr"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102]}